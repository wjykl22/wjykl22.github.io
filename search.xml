<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>言语理解与表达（一）——中心理解</title>
    <url>/archives/72a65002.html</url>
    <content><![CDATA[<h2 id="言语理解与表达一中心理解题">言语理解与表达（一）——中心理解题</h2>
<table>
<thead>
<tr class="header">
<th>序列</th>
<th>主要内容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>中心理解（转折关系、主题词、因果关系）</td>
</tr>
<tr class="even">
<td>2</td>
<td>中心理解（必要条件、程度词、并列关系）</td>
</tr>
<tr class="odd">
<td>3</td>
<td>中心理解（行文脉络）、细节判断</td>
</tr>
<tr class="even">
<td>4</td>
<td>语句表达（语句排序、语句填空题）</td>
</tr>
<tr class="odd">
<td>5</td>
<td>语句表达（接语选择题）、逻辑填空（词的辨析、转折关系、递进关系）</td>
</tr>
<tr class="even">
<td>6</td>
<td>逻辑填空（并列关系、解释类对应、重点词句对应）</td>
</tr>
</tbody>
</table>
<ul>
<li>判断阅读
<ul>
<li>中心理解题</li>
<li>细节判断</li>
</ul></li>
<li>语句表达
<ul>
<li>语句排序</li>
<li>词句填空</li>
<li>接语选择</li>
</ul></li>
<li>逻辑填空
<ul>
<li>实词填空</li>
<li>成语填空</li>
<li>混搭填空</li>
</ul></li>
</ul>
<h3 id="学习重点">学习重点</h3>
<ol type="1">
<li><code>转折</code>、<code>因果</code>关联词和重点位置</li>
<li><code>主题词</code>的特征</li>
<li>中心理解题<code>错误选项</code>特征</li>
<li>中心理解题<code>过渡</code>句子特征</li>
</ol>
<blockquote>
<p>解题顺序：提问——文段——选项</p>
</blockquote>
<h3 id="第一节-中心理解题重中之重">第一节 中心理解题（重中之重）</h3>
<ul>
<li><code>提问方式</code>：这段文字主要/旨在/重在/意在说明（强调/论述）的是......这段文字的主旨/主题/观点是......对这段文字概括最恰当的是......</li>
<li><code>解题思路</code>：寻找中心句
<ol type="1">
<li>有中心句——同义替换（很少有一模一样的）</li>
<li>无中心句——全面概括</li>
</ol></li>
<li><code>解题技巧</code>：以下两点都要抓
<ol type="1">
<li>重点词语：关联词、主题词、程度词</li>
<li>行文脉络：写作的思路和文章结构（中心句和分述句）</li>
</ol></li>
</ul>
<h4 id="关联词">关联词</h4>
<h5 id="转折关系">转折关系</h5>
<p>虽然A...但是B、尽管...可是...、...不过...、然而....和其实/事实上/实际上。</p>
<p>转折之后是重点，在做题目的时候注意错误选项的错误类型。</p>
<blockquote>
<p>可用<code>逆向思维</code>解题：转折前后意思相反，适用文段特征：很多人都认为、大多数人认为、不少人认为、传统观点认为+转折</p>
</blockquote>
<ul>
<li>错误特征：
<ul>
<li>转折前的内容</li>
<li>例子、原因和背景</li>
<li>无中生有</li>
<li>绝对表述</li>
<li>与文意相悖</li>
</ul></li>
<li><code>略读</code>句子的特征：
<ol type="1">
<li>例子：比如、例如</li>
<li>原因：因为、由于、：、——</li>
<li>背景：近年来，随着</li>
</ol></li>
</ul>
<h5 id="主题词辅助技巧">主题词（辅助技巧）</h5>
<p>文段一般绕其展开、一般高频出现（有可能以指代词出现 ）、多为名词、前有引用后有说明</p>
<p>需要注意干扰选项——范围扩大/缩小/偷换</p>
<h5 id="因果关系">因果关系</h5>
<ul>
<li>典型格式：因为...所以...、由于...因此...</li>
<li>理论要点：结论是重点</li>
</ul>
]]></content>
      <categories>
        <category>公务员考试</category>
        <category>言语理解与表达</category>
      </categories>
      <tags>
        <tag>国考</tag>
        <tag>行测</tag>
        <tag>言语理解</tag>
        <tag>中心理解</tag>
        <tag>转折</tag>
        <tag>因果</tag>
      </tags>
  </entry>
  <entry>
    <title>AccPar: Tensor Partitioning for Heterogeneous Deep Learning Accelerators</title>
    <url>/archives/5c29dc6b.html</url>
    <content><![CDATA[<h2 id="accpar针对异构深度学习加速器的张量划分方法">AccPar：针对异构深度学习加速器的张量划分方法</h2>
<ul>
<li>作者：Linghao Song 南加利福尼亚大学 杜克大学</li>
<li>IEEE HPCA（High Performance Computer Architecture）</li>
</ul>
<h3 id="概括">概括</h3>
<p>提出了AccPar，在异构加速阵列上划分张量的方法，和其他方法相比，AccPar有着更加完备的张量划分空间（tensor partition space）同时能够产生其他方法未知的并行策略。</p>
<p>AccPar依赖于异构环境下，计算和通信消耗（computation and communication costs）。而且AccPar可以根据加速器的异构情况，使用灵活的划分比率来适应异构环境。</p>
<p>相比于OWT（one weird trick）方法、HYPAR方法以及传统的数据并行方法，分别提升了2.98倍、3.78倍和6.30倍。</p>
<h3 id="背景介绍">背景介绍</h3>
<h5 id="现有方法">现有方法</h5>
<h6 id="one-weird-trickowt">One Weird Trick（OWT）</h6>
<p>对于卷积层采用数据并行，对于全连接层采用模型并行</p>
<h6 id="hypar">HYPAR</h6>
<p>提出了一种最小化数据通信的并行方法，能够比OWT拥有更好的效果。</p>
<p>这些方法存在如下问题：</p>
<ol type="1">
<li>并行方法的搜索基于不完备的设计空间</li>
<li>只能处理线性结构的DNN体系结构</li>
<li>它们只考虑了通信而没有考虑计算</li>
<li>假设是在设备同构的环境下</li>
</ol>
<h5 id="accpar方法">AccPar方法</h5>
<ol type="1">
<li>提出了完备的张量划分空间
<ul>
<li>批量（batch size）</li>
<li>数据数据尺寸（imput data size）</li>
<li>输出数据尺寸（output data size）</li>
</ul></li>
<li>提出了异构环境下communication cost和computation cost</li>
<li>灵活变化划分比率</li>
</ol>
<blockquote>
<p>总的来说，该方法能够感知计算资源的异构性和网络带宽能力，从而实现张量的划分。</p>
</blockquote>
<p>作者先对现有DNN加速器和加速框架和它们不同的细分领域做了梳理：</p>
<figure>
<img src="/archives/5c29dc6b/image-20201007185047869.png" alt="image-20201007185047869"><figcaption aria-hidden="true">image-20201007185047869</figcaption>
</figure>
<blockquote>
<p>包括FPGA加速、数据流处理（Dataflow）、PIM（Processing-in-memory）以及其他新型的并行框架</p>
</blockquote>
<h3 id="张量划分空间">张量划分空间</h3>
<ul>
<li>批量（batch size）</li>
<li>数据数据尺寸（imput data size）</li>
<li>输出数据尺寸（output data size）</li>
</ul>
<p>符号简要介绍：</p>
<table>
<tbody>
<tr class="odd">
<td><span class="math inline">\(\mathbf{F}_{l}\)</span></td>
<td>输入到第<span class="math inline">\(l\)</span>层的特征矩阵（第<span class="math inline">\(l-1\)</span>层输出的特征向量）</td>
</tr>
<tr class="even">
<td><span class="math inline">\(\mathbf{E}_{l-1}\)</span></td>
<td>输入到第<span class="math inline">\(l\)</span>层的误差矩阵（第<span class="math inline">\(l+1\)</span>层输出的误差矩阵）</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\mathbf{W}_{l}\)</span></td>
<td>第<span class="math inline">\(l\)</span>层的参数</td>
</tr>
<tr class="even">
<td><span class="math inline">\(\triangle \mathbf{W}_{l}\)</span></td>
<td>第<span class="math inline">\(l\)</span>层的梯度</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(B\)</span></td>
<td>Mini-batch size</td>
</tr>
<tr class="even">
<td><span class="math inline">\(\mathbf{D}_{i,l}\)</span></td>
<td>第<span class="math inline">\(l\)</span>层输入数据尺寸</td>
</tr>
<tr class="odd">
<td><span class="math inline">\(\mathbf{D}_{0,l}\)</span></td>
<td>第<span class="math inline">\(l\)</span>层输出数据尺寸</td>
</tr>
<tr class="even">
<td><span class="math inline">\(\alpha, \beta\)</span></td>
<td>划分比率</td>
</tr>
</tbody>
</table>
<h4 id="问题阐述">问题阐述</h4>
<p>一个DNN网络涉及下列三个重要环节：</p>
<ol type="1">
<li>前传：Forward <span class="math inline">\(\mathbf{F}_{l+1}=f\left(\mathbf{F}_{l} \times \mathbf{W}_{l}\right)\)</span></li>
<li>后传：Backward <span class="math inline">\(\mathbf{E}_{l}=\left(\mathbf{E}_{l+1} \times \mathbf{W}_{l}^{\top}\right) \odot f^{\prime}\left(\mathbf{F}_{l}\right)\)</span></li>
<li>求梯度：Gradient <span class="math inline">\(\Delta \mathbf{W}_{l}=\mathbf{F}_{l}^{\top} \times \mathbf{E}_{l+1}\)</span></li>
</ol>
<p>用数据尺寸可表示为：</p>
<ol type="1">
<li>前传：Forward <span class="math inline">\(\left(B, D_{o, l}\right) \leftarrow\left(B, D_{i, l}\right) \times\left(D_{i, l}, D_{o, l}\right)\)</span></li>
<li>后传：Backward <span class="math inline">\(\left(B, D_{i, l}\right) \leftarrow\left(B, D_{o, l}\right) \times\left(D_{o, l}, D_{i, l}\right)\)</span></li>
<li>求梯度：Gradient <span class="math inline">\(\left(D_{i, l}, D_{o, l}\right) \leftarrow\left(D_{i, l}, B\right) \times\left(B, D_{o, l}\right)\)</span></li>
</ol>
<h4 id="划分维度">划分维度</h4>
<p>假设1：<span class="math inline">\(\mathbf{F}_{l}\)</span>和<span class="math inline">\(\mathbf{E}_{l}\)</span>采用相同的划分方式</p>
<blockquote>
<p>原因：如果采用不相同的划分方式，会导致引入额外的通信，这和最小化communication costs相悖。</p>
</blockquote>
<p>假设2：这几个维度并不是独立的，所以每次只有一个维度能够划分</p>
<blockquote>
<p>举例：以前传：Forward为例<span class="math inline">\(\left(B, D_{o, l}\right) \leftarrow\left(B, D_{i, l}\right) \times\left(D_{i, l}, D_{o, l}\right)\)</span>，如果我们选定要划分<span class="math inline">\(B\)</span>这个维度</p>
<ol type="1">
<li>其中<span class="math inline">\(\mathbf{D}_{i,l}\)</span>不能划分，如果划分了矩阵乘法就无法进行了。</li>
<li><span class="math inline">\(D_{o, l}\)</span>也不能划分，如果划分，最后得到的矩阵只有左上右下或者右上左下的部分矩阵计算</li>
</ol>
</blockquote>
<p>以下内容只以Type-1作为例子进行详细阐述，其余的划分方法原理相同。（假设两块加速卡）</p>
<h5 id="type-1划分b维度">Type-1：划分B维度</h5>
<h6 id="前传forward">前传：Forward</h6>
<p><span class="math display">\[
\mathbf{F}_{l+1}[b, q o]=\sum_{q i \in\left\{1, \cdots, D_{i, l}\right\}} \mathbf{F}_{l}[b, q i] \times \mathbf{W}_{l}[q i, q o]
\]</span></p>
<p>其中一块数据划分<span class="math inline">\(\mathbf{F}_{l}[1: \alpha B,:]\)</span>，另一块<span class="math inline">\(\mathbf{F}_{l}[\alpha B+1: B,:]\)</span></p>
<figure>
<img src="/archives/5c29dc6b/image-20201007191707379.png" alt="image-20201007191707379"><figcaption aria-hidden="true">image-20201007191707379</figcaption>
</figure>
<h6 id="后传backward">后传：Backward</h6>
<p><span class="math display">\[
\mathbf{E}_{l}[b, q i]=\sum_{q o \in\left\{1, \cdots, D_{o, l}\right\}} \mathbf{E}_{l+1}[b, q o] \times \mathbf{W}_{l}^{\top}[q o, q i]
\]</span></p>
<p>其中一块误差划分<span class="math inline">\(\mathbf{E}_{l+1}[1: \alpha B,:]\)</span>，另一块：<span class="math inline">\(\mathbf{E}_{l}[\alpha B+1: B,:]\)</span></p>
<figure>
<img src="/archives/5c29dc6b/image-20201007191855397.png" alt="image-20201007191855397"><figcaption aria-hidden="true">image-20201007191855397</figcaption>
</figure>
<h6 id="梯度计算">梯度计算</h6>
<p><span class="math display">\[
\Delta \mathbf{W}_{l}[q i, q o]=\sum_{b \in\{1, \cdots, B\}} \mathbf{F}_{l}^{\top}[q i, b] \times \mathbf{E}_{l+1}[b, q o]
\]</span></p>
<p><span class="math display">\[
\begin{aligned}
\Delta \mathbf{W}_{l}[q i, q o]=&amp; \sum_{b \in\{1, \cdots, \alpha B\}} \mathbf{F}_{l}^{\top}[q i, b] \times \mathbf{E}_{l+1}[b, q o] \\
&amp;+\sum_{b \in\{\alpha B+1, \cdots, B\}} \mathbf{F}_{l}^{\top}[q i, b] \times \mathbf{E}_{l+1}[b, q o]
\end{aligned}
\]</span></p>
<figure>
<img src="/archives/5c29dc6b/image-20201007192005535.png" alt="image-20201007192005535"><figcaption aria-hidden="true">image-20201007192005535</figcaption>
</figure>
<blockquote>
<p>这里将产生层内通信（intra-layer），因为最后的结果必须将两块加速卡上计算出的部分梯度相加得到梯度结果。</p>
</blockquote>
<h5 id="type-2划分mathbfd_il维度">Type-2：划分<span class="math inline">\(\mathbf{D}_{i,l}\)</span>维度</h5>
<p>同样的分析方式，只不过划分<span class="math inline">\(\mathbf{D}_{i,l}\)</span>维度的层内（intra-layer）通信是在前传：Forward过程中产生，因为： <span class="math display">\[
\begin{aligned}
\mathbf{F}_{l+1}[b, q o]=&amp; \sum_{q i \in\left\{1, \cdots, \alpha D_{i, l}\right\}} \mathbf{F}_{l}[b, q i] \times \mathbf{W}_{l}[q i, q o] \\
&amp;+\sum_{q i \in\left\{\alpha D_{i, l}+1, \cdots, D_{i, l}\right\}} \mathbf{F}_{l}[b, q i] \times \mathbf{W}_{l}[q i, q o]
\end{aligned}
\]</span></p>
<h5 id="type-3划分mathbfd_ol维度">Type-3：划分<span class="math inline">\(\mathbf{D}_{o,l}\)</span>维度</h5>
<p>在后传：Backward的过程中产生层内（intra-layer）通信 <span class="math display">\[
\begin{aligned}
\mathbf{E}_{l}[b, q i] &amp;=\sum_{q o \in\left\{1, \cdots, \alpha D_{o, l}\right\}} \mathbf{E}_{l+1}[b, q o] \times \mathbf{W}_{l}^{\top}[q o, q i] \\
&amp;+\sum_{q o \in\left\{\alpha D_{o, l}+1, \cdots, D_{o, l}\right\}} \mathbf{E}_{l+1}[b, q o] \times \mathbf{W}_{l}^{\top}[q o, q i]
\end{aligned}
\]</span></p>
<h4 id="和hypar以及owt对比">和Hypar以及OWT对比</h4>
<p>OWT是特殊的数据和模型并行</p>
<p>HyPar是不完备的搜索空间，只考虑了Type-1和Type-2</p>
<h3 id="accpar的cost-model">AccPar的COST MODEL</h3>
<h5 id="communication-cost-model">Communication Cost Model</h5>
<p><span class="math display">\[
E_{\mathrm{cm}}=\frac{\mathbb{A}(\mathbf{T})}{b_{i}}
\]</span></p>
<p><span class="math inline">\(\mathbb{A}(\mathbf{T})\)</span>是虽有维度的长度，例如：shape是（2,2,4,4）的张量，其<span class="math inline">\(\mathbb{A}(\mathbf{T})\)</span>就是为<span class="math inline">\(2*2*4*4\)</span>，<span class="math inline">\(b_i\)</span>代表加速器<span class="math inline">\(i\)</span>的带宽。</p>
<h6 id="层内通信intra-layer">层内通信（Intra-layer）</h6>
<p>以Type-1中的梯度计算为例：如果划分比例是<span class="math inline">\(\alpha\)</span>；</p>
<p>对于每个<span class="math inline">\(b \in\{1, \cdots, \alpha B\}\)</span>，都有<span class="math inline">\(\mathbb{A}\left(\mathbf{F}_{l}^{\top}[:, b] \times \mathbf{E}_{l+1}[b,:]\right)=D_{i, l} \cdot D_{o, l}=\mathbb{A}\left(\triangle \mathbf{W}_{l}\right)=\mathbb{A}\left(\mathbf{W}_{l}\right)\)</span></p>
<h6 id="层间通信inter-layer">层间通信（Inter-layer）</h6>
<p>总共有Type1-3种划分方式，这一层到下一层排列组合就有9种层间通信的方式，举例来说：</p>
<figure>
<img src="/archives/5c29dc6b/image-20201007193609409.png" alt="image-20201007193609409"><figcaption aria-hidden="true">image-20201007193609409</figcaption>
</figure>
<ol type="1">
<li><p>（a）Type1 到 2；（f）Type2 到 3 以及 （h）Type 3 到 2</p>
<p>层间的通信为0，由于从<span class="math inline">\(l\)</span>（绿）到<span class="math inline">\(l+1\)</span>层（蓝）的划分是完全相同的，所以不需要额外的通信。</p></li>
<li><p>（c）Type1 到 3；（d）Type2 到 1；（e）Type 2 到 2 以及（i）Type 3 到 3</p>
<p>以（c）图为例，在前传的过程中，加速器<span class="math inline">\(i\)</span>的划分比率是<span class="math inline">\(\alpha\)</span>，它具有绿色阴影部分的张量，但是下一层这个加速器采用Type4的划分方式，需要完整的蓝色的张量，他们之间相差了黑色部分，需要进行通信，该通信称为层间通信，<span class="math inline">\((\beta B) \times D_{o, l}=\beta \mathbb{A}\left(\mathbf{F}_{l+1}\right)\)</span>。</p></li>
<li><p>（b）Type1 到 2；（g）Type3 到 1</p>
<p>同理，此处不再赘述。</p></li>
</ol>
<h5 id="computation-cost-model">Computation Cost Model</h5>
<p><span class="math display">\[
E_{\mathrm{cp}}=\frac{\alpha \cdot \mathbb{C}\left(\mathbf{T}_{1} \times \mathbf{T}_{2}\right)}{c_{i}}
\]</span></p>
<p>分子是划分后张量所需的精度位数（bits），分母是加速器计算密度（tensor computation density）</p>
<p>并不难理解</p>
<blockquote>
<p>以上都是以全连接层举例的，同样的可以扩展到卷积层，只不过卷积层采用4维的张量进行表示，分析方法相同，此处不再赘述。</p>
</blockquote>
<h3 id="accpar的划分算法">AccPar的划分算法</h3>
<p>采用动态规划的方法，采用递归定义的方式，定义第<span class="math inline">\(L_i\)</span>层的累计cost，公式如下： <span class="math display">\[
c\left(L_{i+1}, t\right)=\min _{t t \in \mathscr{T}}\left\{c\left(L_{i}, t t\right)+E_{\mathrm{cp}}(t)+E_{\mathrm{cm}}(t t, t)\right\}
\]</span> 其中<span class="math inline">\(t \in \mathscr{T}=\{\text { Type-I, Type-II, Type-III }\}\)</span>，<span class="math inline">\(E_{\mathrm{cp}}(t)\)</span>表示当前层<span class="math inline">\(L_{i+1}\)</span>采用<span class="math inline">\(t\)</span>这种划分方式产生的computation cost，<span class="math inline">\(E_{\mathrm{cm}}(t t, t)\)</span>表示层间和层内的cost和。</p>
<p>最小化通信代价和计算代价即可</p>
<figure>
<img src="/archives/5c29dc6b/image-20201007195435976.png" alt="image-20201007195435976"><figcaption aria-hidden="true">image-20201007195435976</figcaption>
</figure>
<p>对于每个基本的分区类型，在算法执行期间，我们需要记录到前一层的路径，以便在遍历所有层之后回溯，如图中的黑色箭头所示。</p>
<h4 id="划分比率">划分比率</h4>
<p>划分比率是为了适用异构环境下的加速阵列，基本思路是使得两个加速器通信和计算时间尽量接近，以缩短同步等待时间，因此可以采用如下方法： <span class="math display">\[
\begin{array}{r}
\alpha \cdot E_{\mathrm{cp}}\left(p_{i, l}\right)+\alpha \cdot E_{\mathrm{cm}}\left(p_{i, l}\right) \\
=\beta \cdot E_{\mathrm{cp}}\left(p_{j, l}\right)+\beta \cdot E_{\mathrm{cm}}\left(p_{j, l}\right)
\end{array}
\]</span></p>
<h3 id="实验">实验</h3>
<p>主要和数据并行、OWT以及HyPar进行加速比的对比实验，如下图所示：</p>
<ul>
<li><p>同构</p>
<figure>
<img src="/archives/5c29dc6b/image-20201007195855700.png" alt="image-20201007195855700"><figcaption aria-hidden="true">image-20201007195855700</figcaption>
</figure></li>
<li><p>异构</p>
<figure>
<img src="/archives/5c29dc6b/image-20201007195910275.png" alt="image-20201007195910275"><figcaption aria-hidden="true">image-20201007195910275</figcaption>
</figure></li>
</ul>
]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>论文阅读笔记</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>科研</tag>
        <tag>数据并行</tag>
        <tag>模型并行</tag>
      </tags>
  </entry>
  <entry>
    <title>Alpha策略</title>
    <url>/archives/740c8dcf.html</url>
    <content><![CDATA[
]]></content>
      <categories>
        <category>投资</category>
        <category>量化投资</category>
        <category>Alpha策略</category>
      </categories>
      <tags>
        <tag>量化投资</tag>
        <tag>数据分析</tag>
        <tag>多因子</tag>
        <tag>宽客</tag>
      </tags>
  </entry>
  <entry>
    <title>Device Placement Optimization with Reinforcement Learning</title>
    <url>/archives/40cbe9ff.html</url>
    <content><![CDATA[<ul>
<li><p>题目：使用强化学习方法进行设备Placement</p>
<p>英文：<a href="https://arxiv.org/abs/1706.04972" target="_blank" rel="noopener external nofollow noreferrer">Device Placement Optimization with Reinforcement Learning</a> ACM</p></li>
<li><p>作者Azalia Mirhoseini</p></li>
</ul>
<h2 id="摘要">摘要</h2>
<p>将神经网络模型的不同部分放置在不同设备上进行分布式训练的决策问题，通常是由专业人员主观设计。本文提出了一种方法，能够优化Tensorflow计算图模型在不同设备上的配置，解决该问的关键是采用序列到序列（Seq2Seq）的模型来预测TensorFlow图模型应该运行在哪个可用设备上，在预测设备上的执行时间作为反馈信号更新序列到序列的模型参数。</p>
<p>该方法在Inception-V3模型的Image-Net分类上做了实验，在RNN LSTM上对语言模型和机器翻译做了测试，并找到了重要的设备配置方案，这些方案要比人工划分配置有着更好的性能表现。</p>
<h2 id="介绍">介绍</h2>
<p>改模型如下图所示，简单的说就是系统自动进行一系列的性能试验，考虑各种环境因素，最终得到模型的那个部分应该安排在哪个设备上进行训练，同时优化通信效率。改模型的关键是采用Seq2Seq模型，读取操作的有关信息和他们之间的关联。每一个提议都会在硬件环境下执行并测算执行时间，执行时间作为反馈信号更新序列到序列的模型参数。</p>
<h2 id="相关工作">相关工作</h2>
<p>文章首先介绍了强化学习在系统性能优化上的一些工作，包括[Mao et al., 2016]提出的采用策略梯度进行资管调度管理的优化方法。这类方法需要依赖回报的手工目标函数的期望值，而本文直接优化配置的运行时间，减去了设计中间成本模型所需的时间。</p>
<p>其次介绍了图分割的相关应用，利用谱分析和图的矩阵表示进行划分。图划分算法可以应用于计算图的划分，但是计算非常昂贵，原因在于为了应用这些算法，需要为图构建代价模型，这样的模型构建要模拟各种情况，非常昂贵，并不现实。</p>
<p>一种非常著名的开源图划分算法是Scotch优化方法（Pellegrini 2009），该方法作为本论文的基准测试。Scotch试图在一组连接的处理节点之间平衡任务集合的计算负载，同时通过在附近的节点上保持密集的通信任务来降低通信成本。</p>
<p>该方法需要两个图，第一张图被称为目标架构图，它的顶点表示硬件资源，例如CPU或者GPU，它们的边表示可用的通信路径，例如PCIe总线和网络通信。第二张图是源图，它将计算映射到目标架构图进行建模。在TensorFlow的实例中，程序的计算被建模成图，改图的顶点表示操作，边表示他们之间的张量通信。Scotch用户必须选择如何以及何时图应该划分。然而，本篇论文的实验中，依赖于Scotch中软件的默认策略实现，这些策略已经被广泛调整过了。</p>
<h2 id="框架方法">框架方法</h2>
<p>思考TensorFlow的计算图<span class="math inline">\(\mathcal{G}\)</span> ，它是由M个操作<span class="math inline">\(\left\{O_{1}, O_{2}, \ldots, O_{M}\right\}\)</span>以及一系列<span class="math inline">\(D\)</span>个可用设备资源组成。配置方法 <span class="math inline">\(\mathcal{P}=\left\{p_{1}, p_{2}, \ldots, p_{M}\right\}\)</span>是将操作 <span class="math inline">\(o_{i} \in \mathcal{G}\)</span>分配到设备<span class="math inline">\(p_i\)</span>，其中<span class="math inline">\(p_{i} \in\{1, \ldots, D\}\)</span>。令<span class="math inline">\(r(\mathcal{P})\)</span>表示完整执行<span class="math inline">\(\mathcal{P}\)</span>配置下计算图<span class="math inline">\(\mathcal{G}\)</span>所需要的花费的时间。我们的目标是找到<span class="math inline">\(\mathcal{P}\)</span>使得<span class="math inline">\(r(\mathcal{P})\)</span>最小。</p>
<p>如果直接对<span class="math inline">\(r(\mathcal{P})\)</span>并不是很合适，存在如下两个问题：（1）刚开始训练的时候，由于不好的采样，导致<span class="math inline">\(r(\mathcal{P})\)</span>会有很多噪音，导致不好的学习信号；（2）快要达到瘦脸之后，采样变得非常相似，微笑的变化导致学习信号的可识别性比较差。所以这里采用<span class="math inline">\(R(\mathcal{P})=\sqrt{r(\mathcal{P})}\)</span>代替，鲁棒性更好。</p>
<p>首先是该方法的整体框架</p>
<p><img src="/archives/40cbe9ff/image-20200910171246846.png" alt="image-20200910171246846" style="zoom: 67%;"></p>
<p>配置（Placement）是该框架的输入，Environment是Tensorflow按照这种配置在实际系统中的运行，Runtime作为运行时间进行输出。该输出经过处理（和Baseline）得到Loss，根据Loss进一步优化Placement配置。</p>
<p>其中的Placement是由序列到序列模型（Seq2Seq）也就是LSTM模型预测得到，该模型框架如下：</p>
<figure>
<img src="/archives/40cbe9ff/image-20200910190545553.png" alt="image-20200910190545553"><figcaption aria-hidden="true">image-20200910190545553</figcaption>
</figure>
<h3 id="步骤一placement由来">步骤一：Placement由来</h3>
<ul>
<li><p>模型输入</p>
<p>先收集计算图中的所有操作（operations），该模型输入是有关操作（operations）的属性，图中可以看到计算图一共是有100个operations，也就会有100个operations的属性输入进来。</p>
<p>每个操作（operations）有三个部分组成：</p>
<ol type="1">
<li><p>type：类型，例如矩阵乘法（MatMul）或者Conv2d（卷积操作），对操作的类型进行embedding操作，它是可以通过参数调整改变embedding之后向量长度的，所以是可变长（tunable）向量</p>
<blockquote>
<p>论文中并没有说明是如何进行embedding 的</p>
</blockquote></li>
<li><p>outputshape：定长向量，该操作输出的形状，拼接shape的时候按照output中shape维度最高的分配空间，就是论文中称为：<code>fixed-size zero-padded</code>.</p>
<blockquote>
<p>例如：有两个输出，其中一个形状是四维的[20. 40, 20, 30]，另一个形状是二维的[20, 30]，拼接在一起之后就是[20, 40, 20, 30, 0, 20, 30, 0]。</p>
</blockquote></li>
<li><p>adj：one-hot编码的属性，定长向量统计计算图中一共有多少个操作，并分别编号。然后对某op的输入输出进行one-hot编码</p></li>
</ol></li>
<li><p>模型输出</p>
<p>每个操作所对应的设备，计算图中有多少个操作（operations），这里就有多少个输出，图中有100个，这里的输出就是100个。</p></li>
</ul>
<h3 id="步骤二运行得到runtime并计算loss">步骤二：运行得到Runtime并计算Loss</h3>
<p><span class="math display">\[
J(\theta)=\mathbf{E}_{\mathcal{P} \sim \pi(\mathcal{P} \mid \mathcal{G} ; \theta)}[R(\mathcal{P}) \mid \mathcal{G}]
\]</span></p>
<p>最小化上述式子，其中<span class="math inline">\(\pi(\mathcal{P} \mid \mathcal{G} ; \theta)\)</span>表示策略就是第一步中的Placement，策略梯度下降方法计算如下： <span class="math display">\[
\nabla_{\theta} J(\theta)=\mathbf{E}_{\mathcal{P} \sim \pi(\mathcal{P} \mid \mathcal{G} ; \theta)}\left[R(\mathcal{P}) \cdot \nabla_{\theta} \log p(\mathcal{P} \mid \mathcal{G} ; \theta)\right]
\]</span> 实际上，论文中采用了均值的方法代替公式中的期望： <span class="math display">\[
\nabla_{\theta} J(\theta) \approx \frac{1}{K} \sum_{i=1}^{K}\left(R\left(\mathcal{P}_{i}\right)-B\right) \cdot \nabla_{\theta} \log p\left(\mathcal{P}_{i} \mid \mathcal{G} ; \theta\right)
\]</span></p>
<blockquote>
<p>含义：根据误差改变参数<span class="math inline">\(\theta\)</span>, 再根据新的<span class="math inline">\(\theta\)</span>修改LSTM模型得到新的配置（Placement），其中B表示历史平均的运行时间，作为基准（BaseLine）。</p>
</blockquote>
<ul>
<li><p>特殊情况：</p>
<ol type="1">
<li>某个配置（Placement）使得太多的操作放在同一个设备上导致内存不足，将该配置的runtime设置为很大的常数，可以带来巨大的Loss。</li>
<li>上述解决方案又会导致<span class="math inline">\(R(\mathcal{P}_i)\)</span>和<span class="math inline">\(B\)</span>的差距很大，特别在训练最后阶段导致局部最小范围内的剧烈抖动，解决方式是在5000步之后，采用硬编码方式，只有策略执行成功后，才作更新。</li>
</ol></li>
</ul>
<h3 id="分布式训练">分布式训练</h3>
<p>上述过程需要将其异步分布式运行，运行结构如下图所示：</p>
<p><img src="/archives/40cbe9ff/image-20200910194424134.png" alt="image-20200910194424134" style="zoom:80%;"></p>
<p>有多个Controller，每个Conctroller执行LSTM模型，生成Placement，并且他们与参数服务器通信。所有的参数服务器存储全局的LSTM模型参数。执行过程如下：</p>
<ol type="1">
<li>每个Controller按照公式（3）生成<span class="math inline">\(K\)</span>个Placement策略，同时<span class="math inline">\(K\)</span>也对应这<span class="math inline">\(K\)</span>个工作节点，Controller将K个Placement发给工作节点运行，每个工作节点运行一个Placement</li>
<li>运行完成后工作节点回传运行时间Runtime给Controller，也就是公式（3）中的<span class="math inline">\(R(\mathcal{P}_i)\)</span>。</li>
<li>Controller的参数<span class="math inline">\(\theta\)</span>会在参数服务器中做聚合操作，得到新模型后，Controller又会根据新的到的参数做MCMC采样，得到K个Placement策略继续迭代运行。</li>
</ol>
<h2 id="实验结果">实验结果</h2>
<h3 id="单步运行时间">单步运行时间</h3>
<p>下表提供了该方法和其他基准方法单步运行时间的对比：</p>
<figure>
<img src="/archives/40cbe9ff/image-20200911100320455.png" alt="image-20200911100320455"><figcaption aria-hidden="true">image-20200911100320455</figcaption>
</figure>
<p>对于每个模型来说，第一行表示1个CPU和2个GPU的结果；第二行表示1个CPU和4个GPU的结果。最后一列表示基于RL的配置方法和其他基准测试方法时间性能上的提升。</p>
<p>同时，作者还扩展了实验，将RNNLM和NMT的批量大小提高到了256，这两个模型中的LSTM提高到了4096和2048.这使得即使模型的单层都无法在单台设备中存储。从而排除了人为设计并行方案的可能。但是通过RL方法却能够找到可执行的分布式配置方案。</p>
<p>配置方案如下图所示:</p>
<figure>
<img src="/archives/40cbe9ff/image-20200911101244256.png" alt="image-20200911101244256"><figcaption aria-hidden="true">image-20200911101244256</figcaption>
</figure>
<h3 id="整体测试">整体测试</h3>
<p>下图中，人为最佳配置达到了229.57个小时的训练时间，采用RL方法达到了165.73的训练时间，速度上提升了27.8%。</p>
<p><img src="/archives/40cbe9ff/image-20200911102538193.png" alt="image-20200911102538193" style="zoom:67%;"></p>
<p>下图展示了三种不同模式下的Inception-V3训练曲线，从图中可以看到，与同步的模式相比，基于RL的配置方式可以将训练时间加速19.7%。然而，异步的方法每步的执行时间更少，同步方法的收敛速率更快。基于RL的方法在刚开始时候的收敛速率比较慢，但是最终可以赶超异步的方法。</p>
<h2 id="总结">总结</h2>
<p>优点：</p>
<ol type="1">
<li><p>具有可一致性和普遍性，如果人为的根据异构的设备结构和网络结构设计并行策略，只能用于特定的环境，可移植性较差。</p></li>
<li><p>提供了用机器学习的方法来制定并行策略的方式，提供了这种新思路。</p></li>
<li><p>速度上有20%的提升</p></li>
</ol>
<p>缺点：</p>
<ol type="1">
<li>结果的提升只有20%多一点，效果可能不是非常明显</li>
<li>寻找并行策略的过程本身需要投入大量的资源进行运算，例如本论文中需要20个Controller节点，每个Controller节点又要分配4-8个Worker进行计算，其投入量相当巨大，只为了计算出较为合适的并行策略，有一些不值当。</li>
</ol>
]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>论文阅读笔记</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>科研</tag>
        <tag>数据并行</tag>
        <tag>模型并行</tag>
        <tag>自动化并行策略</tag>
      </tags>
  </entry>
  <entry>
    <title>Communication Optimal Parallel Multiplication of Sparse Random Matrices</title>
    <url>/archives/60fdd68b.html</url>
    <content><![CDATA[
]]></content>
  </entry>
  <entry>
    <title>Beyond Data and Model Parallelism for Deep Neural Networks</title>
    <url>/archives/62b3642.html</url>
    <content><![CDATA[<h1 id="beyond-data-and-model-parallelism-for-deep-neural-networks">Beyond Data and Model Parallelism for Deep Neural Networks</h1>
<ul>
<li><p>题目：深度神经网络的数据和模型并行性</p>
<p>英文：<a href="https://arxiv.org/pdf/1807.05358" target="_blank" rel="noopener external nofollow noreferrer">Beyond Data and Model Parallelism for Deep Neural Networks</a></p></li>
<li><p>作者：贾志豪 斯坦福大学</p></li>
</ul>
<h2 id="摘要">摘要</h2>
<p>现有的深度网络的并行主要是通过数据和模型并行实现，这些方法往往是次优的，而且考虑并行的维度比较少。本文定义了一种更宽泛的DNN并行搜索策略，称为SOAP，它将从样本（Sample），操作（Opration）、属性（Attribute）以及参数（Parameter）这四个维度对最优的并行策略进行探索和优化。同时本文还提出了FlexFlow，在SOAP范围内随机搜索并行策略的方法。为了加速搜索，FlexFlow提出了一种新的执行模拟器（Execution Optimizer），模拟执行比真实环境运行的吞吐量提高了3.8倍。</p>
<h2 id="主要贡献">主要贡献</h2>
<ol type="1">
<li>为并行DNN应用定义了SOAP搜索空间，它包括了样本（Sample），操作（Opration）、属性（Attribute）以及参数（Parameter）这四个维度下的并行策略。</li>
<li>在合理假设下，DNN的并行仿真所用时间比DNN直接在真实硬件系统下运行时间少三个数量级</li>
<li>描述了FlexFlow框架，能够从SOAP空间寻找并行执行策略，从而加速DNN训练</li>
<li>FlewFlow与现有框架相比，能够提升3.8倍的训练吞吐量，并且提升了可扩展性。</li>
</ol>
<h2 id="简介和背景">简介和背景</h2>
<p>神经网络并行最常用的方法是数据和模型并行，但是数据并行和模型并行都有如下特点和弊端：</p>
<ol type="1">
<li>数据并行（Data Parallelism）</li>
</ol>
<p>适用于参数较少，且计算集中的DNN，但是对于具有大量参数的操作性能不佳（例如：矩阵乘法）。</p>
<p>数据并行<a href="#refer-anchor-1"><sup>[1]</sup></a>广泛应用于现有的深度学习系统（例如：Tensorflow、Caffe2以及Pytorch），但数据并行需要在每个工作节点上都复制一份完整网络，在参数量较大的情况下将成为性能瓶颈。</p>
<ol start="2" type="1">
<li>模型并行（model parallelism）</li>
</ol>
<p>模型并行[15]消除了参数在设备之间同步的开销，但是需要在操作时的数据转换，并且不允许内部操作的并行化。</p>
<ol start="3" type="1">
<li>专家设计策略（expert-desgned strategies）</li>
</ol>
<p>根据专家的经验和知识手动优化并行策略，例如<a href="#refer-anchor-3"><sup>[3]</sup></a> <a href="#refer-anchor-4"><sup>[4]</sup></a>对<code>卷积层</code>和<code>池化层</code>采用<code>数据并行</code>，对<code>全连接层</code>转换为<code>模型并行</code>加速训练卷积神经网络。这样的方法相比于数据和模型并行提高了性能，但是依然是次优的。</p>
<ol start="4" type="1">
<li>自动并行化策略（automated frameworks）</li>
</ol>
<p>在特定的搜索域内自动化寻找最优的并行策略.</p>
<ul>
<li>REINFORCE <a href="#refer-anchor-6"><sup>[6]</sup></a></li>
</ul>
<p>采用强化学习模型在实际设备上运行不同策略来为模型并行学习得到高效操作策略。但是该方法通过对每种并行策略执行真实迭代来衡量执行时间的方式依然非常低效，而且所需硬件要求非常高。</p>
<ul>
<li>OptCNN <a href="#refer-anchor-5"><sup>[5]</sup></a></li>
</ul>
<p>OptCNN也是本文作者所提出，是一种基于线性计算图的CNN逐层并行化方法。它使用动态编程的方法联合优化每种算法，考虑了运算内部的并行，但没有考虑运算操作之间的并行。</p>
<p>现有的自动化框架只是探究了不同操作的并行化（例如REINFORCE[33]）或者在单个操作中的并行（例如OptCNN），忽略了在两个维度上都使用并行性的更快策略。</p>
<blockquote>
<p>除了数据并行和模型并行之外的并行维度可以进一步替身DNN的训练效率。因此作者首先提出了SOAP的概念。</p>
</blockquote>
<h2 id="soap并行搜索空间">SOAP并行搜索空间</h2>
<p>SOAP表示样本（Sample），操作（Opration）、属性（Attribute）以及参数（Parameter）这四个维度：在SOAP空间中搜索可能的并行策略。</p>
<ul>
<li>Sample 划分训练样本（数据并行）</li>
</ul>
<p><img src="/archives/62b3642/image-20200915145646678.png" alt="image-20200915145646678" style="zoom: 50%;"></p>
<ul>
<li>Operators 划分DNN操作（模型并行）</li>
</ul>
<p><img src="/archives/62b3642/image-20200915150006162.png" alt="image-20200915150006162" style="zoom:50%;"></p>
<ul>
<li><p>Attributs 划分样本的特征（数据并行）</p>
<p><img src="/archives/62b3642/image-20200915150454252.png" alt="image-20200915150454252" style="zoom:50%;"></p></li>
<li><p>Parameter 划分操作中的参数</p>
<p><img src="/archives/62b3642/image-20200915150831384.png" alt="image-20200915150831384" style="zoom: 33%;"></p></li>
</ul>
<p>混合并行的模型如下图所示：</p>
<p><img src="/archives/62b3642/image-20200915150952707.png" alt="image-20200915150952707" style="zoom:67%;"></p>
<p>下表展示了现有并行技术所涉及的到的一些的并行维度：</p>
<p><img src="/archives/62b3642/image-20200915151116742.png" alt="image-20200915151116742" style="zoom: 80%;"></p>
<figure>
<img src="/archives/62b3642/image-20200915151437838.png" alt="image-20200915151437838"><figcaption aria-hidden="true">image-20200915151437838</figcaption>
</figure>
<blockquote>
<p>接下来的任务就是如何从SOAP这几个维度对复杂DNN的并行策略进行搜索，找到最佳的并行策略。</p>
</blockquote>
<h2 id="架构概述">架构概述</h2>
<p>实现了FlexFlow框架，如下图所示，将两个图作为输入，操作图（Operator Graph），描述了操作之间的通信情况；设备结构图（Device Topology），描述了设备之间的内在联系和结构。这两个图将作为输入传入执行优化器（Execution Optimizer）中，在该执行器中，将采用MCMC马尔科夫蒙特卡罗采样生成候选的并行策略，并将该并行策略传入执行模拟器（Execution Smulator）（本质上是一个Cost Model）模拟产生在该并行策略下的执行性能（时间），并传回到MCMC采样，用于后续生成候选策略。</p>
<p>这个迭代过程完成后，最佳的并行策略将发送至分布式执行引擎中，完成分布式训练。</p>
<p><img src="/archives/62b3642/image-20200910084035262.png" alt="image-20200910084035262" style="zoom: 80%;"></p>
<p>FlexFlow采用操作图<span class="math inline">\(\mathcal{G}\)</span>描述所有的DNN操作和状态。每个节点<span class="math inline">\(o_{i} \in \mathcal{G}\)</span>都表示一个操作（例如：矩阵乘法和卷积等），每个边<span class="math inline">\((o_i, o_j) \in \mathcal{G}\)</span>表示 输出<span class="math inline">\(o_i\)</span>和输入<span class="math inline">\(o_j\)</span>的张量。FlexFlow将设备拓扑结构记为<span class="math inline">\(\mathcal{D} = \left(\mathcal{D}_{N}, \mathcal{D}_{E}\right)\)</span>，描述了所有可能的硬件设备和它们的内在联系，每个节点<span class="math inline">\(d_{i} \in \mathcal{D}_{N}\)</span>代表设备（例如CPU或者是GPU），每条边<span class="math inline">\(\left(d_{i}, d_{j}\right) \in \mathcal{D}_{E}\)</span>代表硬件之间的连接（例如NVLink, PCI-e或者是网络连接）。每条边都标注有带宽或者延迟。FlexFlow会为操作图和设备拓扑找到一个并行策略，对比现有的框架，FlexFlow具有如下优点：</p>
<ol type="1">
<li>可编程性：对于在拓扑结构非常深的集群上运行的复杂操作图，设计高效的操作是非常困难的，FlexFlow可以找到高效的并行策略，并提供更加丰富的可编程接口。</li>
<li>可移植性，一种并行策略在一个集群中适用，但在别的集群中是不适用的，而然，FlewFlow可以自动根据集群中硬件的配置，根据应用特点自动寻找适合的并行策略。</li>
</ol>
<h3 id="采样方法马尔科夫链蒙特卡罗采样">采样方法（马尔科夫链蒙特卡罗采样）</h3>
<p>对于MCMC采样本本身不再赘述，主要针对该应用场景下，论文的描述：</p>
<p>MCMC采样技术是为了在已有的概率分布下获得样本。一种通用的方法是将该策略所要花费的时间转换为概率分布： <span class="math display">\[
p(\mathcal{S}) \propto \exp (-\beta \cdot \operatorname{cost}(\mathcal{S}))
\]</span> MCMC开始时（随机或其他初始化方法）生成初始策略，然后生成一系列能够保证所采样得到的样本点在极限状况下接近<span class="math inline">\(p(.)\)</span>所给定的分布。在本文中，从<span class="math inline">\(\mathcal{S}_0\)</span>这个策略开始生成一系列策略<span class="math inline">\(\mathcal{S}_{0}, \mathcal{S}_{1}, \ldots\)</span>。</p>
<p>这里采用MH算法（MCMC采样方法的一个变种）来生成马尔科夫链，它包含了当前策略<span class="math inline">\(\mathcal{S}_0\)</span>和新提出的另一种策略<span class="math inline">\(\mathcal{S}\)</span>。并且使得分布式满足<span class="math inline">\(q\left(\mathcal{S} \mid \mathcal{S}^{*}\right)=q\left(\mathcal{S}^{*} \mid \mathcal{S}\right)\)</span>。从而可以将接受率变为： <span class="math display">\[
\begin{array}{l}
\alpha\left(\mathcal{S} \rightarrow \mathcal{S}^{*}\right)=\min \left(1, p\left(\mathcal{S}^{*}\right) / p(\mathcal{S})\right) \\
=\min \left(1, \exp \left(\beta \cdot\left(\operatorname{cost}(\mathcal{S})-\operatorname{cost}\left(\mathcal{S}^{*}\right)\right)\right)\right.
\end{array}
\]</span> 如果<span class="math inline">\(\mathcal{S}^{*}\)</span>的成本比<span class="math inline">\(\mathcal{S}\)</span>低，那么<span class="math inline">\(\mathcal{S}^{*}\)</span>总是被接收；如果<span class="math inline">\(\mathcal{S}^{*}\)</span>的成本比<span class="math inline">\(\mathcal{S}\)</span>高，那么<span class="math inline">\(\mathcal{S}^{*}\)</span>也有可能被接受，接受概率如上。</p>
<p>该搜索不会自动停止，我们设置满足下面两个条件之一可自动停止：（1）当前初始策略搜索时间预算耗尽（在本方法中不至于到达该条件）；（2）在当前搜索时间一半时间内，搜索过程不能进一步改进发现的最佳策略则停止。</p>
<h3 id="cost-model">Cost Model</h3>
<p>由于在真实的硬件设备上执行候选并行策略非常缓慢，而且需要耗费大量的物理硬件。所以采用仿真的方式，在研究过程中，DNN具有如下两个特性：</p>
<ol type="1">
<li>DNN操作的计算性能具有高度的可预测性</li>
<li>几乎大量的操作都是类似的重复操作，只有少部分是特有的操作</li>
</ol>
<p>所以执行模拟（Execution Simulator）将会衡量每个特有的操作，并将得到结果去模拟不同的并行策略</p>
<h4 id="例子">例子</h4>
<p>下图是比较简单的循环神经网络的执行拓扑，包括了Embedding层，Recurrent层和Linear层，图a下方展示了某种并行策略的例子，对于前四个操作，分别采用两个任务的数据并行（Sample维度）策略。</p>
<figure>
<img src="/archives/62b3642/image-20200915161836032.png" alt="image-20200915161836032"><figcaption aria-hidden="true">image-20200915161836032</figcaption>
</figure>
<p>右侧是任务图，其中四边形代表计算任务，六边形的代表通信任务，任务的运行时间使用操作模拟的值，数据通信转换的时间采用张量的尺寸/通道带宽进行表示（这里的假设是，通信带宽能够被完全使用，达到最佳）。</p>
<h3 id="delta模拟算法delta-simulation">Delta模拟算法（Delta Simulation）</h3>
<p>在有新的并行候选策略生成时，并不完全重构任务图模型，而只是做拒不修改，所以大部分的图模型是不发生改变的，所以可以采用增量更新的方式重用之前的仿真模拟，这样的方法被称为Delta仿真算法。还是以上述例子为例，</p>
<figure>
<img src="/archives/62b3642/image-20200915163749550.png" alt="image-20200915163749550"><figcaption aria-hidden="true">image-20200915163749550</figcaption>
</figure>
<p>假设此时并行策略此时发生了改变，第五个操作从原来的分派两个任务进行执行，变为单任务执行，那此时只需要对灰色部分进行重新模拟仿真即可，而不需要重构真个计算图模型。</p>
<h4 id="delta模拟的性能表现">Delta模拟的性能表现</h4>
<p>作者做了实验，对比了是否使用Delta模拟算法的计算性能</p>
<p><img src="/archives/62b3642/image-20200915164059189.png" alt="image-20200915164059189" style="zoom: 50%;"></p>
<p>横坐标表示时间，纵坐标表示找到的最好的并行策略，可以发现，采用Delta Simulation的时间可以缩短2.3倍，具有极大的提升。</p>
<p>从图中我们还可以发现FlexFlow找到最佳并行策略的时间只需要几分钟，在单个节点上就能完成。这就和REINFORCE方法形成了强烈的反差，REINFORCE方法在策略的寻找上就需要分布式的环境，并需要耗费几个小时的时间。</p>
<h2 id="实验性能">实验性能</h2>
<p>该实验主要针对以下两种GPU架构体系，图中箭头表示NVLink连接。实线表示PCI-e连接，虚线表示跨不同节点的无线带宽连接。</p>
<p><img src="/archives/62b3642/image-20200921104739363.png" alt="image-20200921104739363" style="zoom:67%;"></p>
<p>左边第一个集群包含了四个计算节点，每个计算节点配备了两个Intel 10-core E5-2600 CPU, 256GB内存，以及四个NVIDIA Tesla P100 GPU，GPU之间都通过VNLink进行连接。节点通过100GB/s EDR的无线带宽技术。</p>
<p>右边的集群包含了16个节点，每个节点配备两个Intel 10-core E5-2600 CPU, 256GB内存，以及四个NVIDIA Tesla K80 GPU。GPU之间通过PCI-e连接，集群中的计算节点连接超过56GB/s EDR的无线带宽技术。</p>
<p>从实验的角度来说，GPU之间都是同构的设备，但我感觉是从算法的角度考虑，如果在异构的环境下，他可以通过计算时间这个reward去衡量那种策略更优，感觉它已经将异构的情况考虑在内了，选择最优策略的参数会偏向于将更复杂的内容交给性能更好的GPU，这样最后的时间会更快。</p>
<ul>
<li>与数据并行，人为设计的并行策略在单次迭代执行时间的对比</li>
</ul>
<figure>
<img src="/archives/62b3642/image-20200915164847178.png" alt="image-20200915164847178"><figcaption aria-hidden="true">image-20200915164847178</figcaption>
</figure>
<ul>
<li><p>训练吞吐量上和REINFORCE和OptCNN等自动并行策略的现有方法做对比</p>
<figure>
<img src="/archives/62b3642/image-20200915164707545.png" alt="image-20200915164707545"><figcaption aria-hidden="true">image-20200915164707545</figcaption>
</figure></li>
</ul>
<p>可以发现在吞吐量上有明显的提升。</p>
<ul>
<li>Simulated Execution仿真模拟的准确率</li>
</ul>
<figure>
<img src="/archives/62b3642/image-20200915164938253.png" alt="image-20200915164938253"><figcaption aria-hidden="true">image-20200915164938253</figcaption>
</figure>
<p>可以看到在各种设备拓扑结构下，结果基本是准确的。</p>
<h2 id="总结">总结</h2>
<p>本文定义了一种更宽泛的DNN并行搜索策略，称为SOAP，它将从样本（Sample），操作（Opration）、属性（Attribute）以及参数（Parameter）这四个维度对最优的并行策略进行探索和优化。并提出了FlexFlow自动搜索并行方案的框架，能在时间性能上比Google的REINFORCE方法提高了3.8倍。</p>
<div id="refer-anchor-1">

</div>
<ul>
<li>[1] <a href="http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf" target="_blank" rel="noopener external nofollow noreferrer">Krizhevsky A, Sutskever I, Hinton G E. Imagenet classification with deep convolutional neural networks[C]//Advances in neural information processing systems. 2012: 1097-1105.</a>
<div id="refer-anchor-2">

</div></li>
<li>[2] <a href="http://papers.nips.cc/paper/4687-large-scale-distributed-deep-networks.pdf" target="_blank" rel="noopener external nofollow noreferrer">Dean J, Corrado G, Monga R, et al. Large scale distributed deep networks[C]//Advances in neural information processing systems. 2012: 1223-1231.</a>
<div id="refer-anchor-3">

</div></li>
<li>[3] <a href="https://arxiv.org/pdf/1404.5997" target="_blank" rel="noopener external nofollow noreferrer">Krizhevsky A. One weird trick for parallelizing convolutional neural networks[J]. arXiv preprint arXiv:1404.5997, 2014.</a>
<div id="refer-anchor-4">

</div></li>
<li>[4] <a href="https://arxiv.org/pdf/1609.08144.pdf%20(7)" target="_blank" rel="noopener external nofollow noreferrer">Wu Y, Schuster M, Chen Z, et al. Google's neural machine translation system: Bridging the gap between human and machine translation[J]. arXiv preprint arXiv:1609.08144, 2016.</a>
<div id="refer-anchor-5">

</div></li>
<li>[5] <a href="https://arxiv.org/abs/1802.04924" target="_blank" rel="noopener external nofollow noreferrer">Jia Z, Lin S, Qi C R, et al. Exploring hidden dimensions in parallelizing convolutional neural networks[J]. arXiv preprint arXiv:1802.04924, 2018.</a>
<div id="refer-anchor-6">

</div></li>
<li>[6] <a href="https://patentimages.storage.googleapis.com/2b/03/41/324a4ae429b203/US10692003.pdf" target="_blank" rel="noopener external nofollow noreferrer">Mirhoseini A, Pham H, Le Q V, et al. Device placement optimization with reinforcement learning[J]. arXiv preprint arXiv:1706.04972, 2017.</a></li>
</ul>
]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>论文阅读笔记</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>科研</tag>
        <tag>数据并行</tag>
        <tag>模型并行</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.08.26小组汇报</title>
    <url>/archives/6fa57430.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码" /><label>请输入密码</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="3f873b7de2d4ecdb4ba9f17b315544fe38f5472ce26fe76ae725907bd72892dd">5c6a9dd09fe3caca8b2fd44d9397f07075f90ac87123602055a8f4934530826a697c43df1711644aae0225b9e03c7cadd3e00671b9a5504a66d9691d89ee18adfafd05c94e72710a151a24697c18e5aeba37389f5c0121483c307a6d24015add3326de9cce89fae093419b7feeb98cc8b5bc26b931dd63fef0d83189406ed1c1779fdb36975b587587a20af220d4d7c835bd7fb860fcf06deb59e72609020b9eab7df726d569565f254d94de80305458a1281262ff57d26d7c4cff271c2d7d91e71acb6be331b1de352e29697c4df6c615593cb46be4a5bec8532ea73e01fd6a685165c9f48d865561f903039f31f275b8bde1850612dbc5b16b2d94739aefecb6b9a9c7418335a5a6a8073736eb2bb00c8e6914725a7c338aa35b2a37c56f1d43dc4d51af80f39fbd9d8758dfbaa8ec4b639ad8008ec1d4891ebc871d64095dcd8335cefecd18738fdb918af94cd1d1a0e8da0035e147bb2043c4873f4961270c6b422f5e6fc753d952c09d4af510787cbcf3db02def0d1e1e3556fcb0db69acd61ccf3336414697e14f8e205146b2e3ba072969216693200e815d275a8c599f4cee19e0dcf2977aa1f64113fce1b5d2bc8b661aa9d196df14b32895dd6a4accb962eba87a4e37f633c9c3b7d66e54ebc73c4c1e48819d198083cf1871367450e84d0f03812c9d08943702afd6ea9a188cc38b26bdb9f165b684ed4da37b4450089574756640892e8f7a2a04eb8196d7a19d48b249ea57755ba969e85b6b1ac10d60aadaeb71ba627664e9511e8356b89fdaa28e27ad1428d7cf4aa2ab54690d9f88f6414bf6cf6930b80e92c7b1d6c203c53215748e7f5a6222e5fdbd967cb94694f39fea5386052bbb2b58044e34960510cb3731c1022de3984a710047e3001450b8db7b26ac6cc34b141626ea14e1575f644b77b631116060835d7d6201b68ff16f082d85661333069d92e61b93a56ada26170d89cac7eb2acb37a065c76ecc1b7277cc9aebdd711a8b807f91fbc9f2591f2aae8f0bcdf753f66e62bc4c17e7f0f192920924e164a4b9348e1f8cb68ba6af12b6762bbbbd8c028dd18e6d599747b2bf689a875e3971fa88261bdec976d320531d7bdd7dacff7babc59bc117778bbdc68eead73b40ac7d71179d51c2a0970be0b847e251a85d3a922c0539db1859d641397820a54378fe6a9bd2962fea366bd6e9b7e2eb582b939743f965d385d9bb7b0154f2603cffc0414afd81ee1992dc259c3bdd3b29185e431fb92dbac317814dcbda48dafa5f6897038cbeb25d231c3387b1bb261740652ea0c566fc5e4938d06ac24552715ece330f252028930a2fe6df3ebfeb134a4d8e323bf71492eb0ad02ce79eab7ef2f6d63998593e7ab6a7a1cde2db2532d850d6cf780a05d6a6c0e0d6f5437811b6388d88e240a1ffb2400dbb290067eaf142a0a7cd0016467457cc7c052309fae15aefe78e29a7f16bb94202bf24234f62daebfc0eb4c4954efb610f20d5d0bbc6cee33fc119458260be3a11241df5187b6b5d705facc900a42583329e7a8cb2534aac3c0d898616ec028be9da241668e64a46fd188c2453bfdebae9714dc6a5c0961a5658544681dd2543c936afeeadb76e72f1895cb836dad1a3f5f909f9cf2b4e67e0bfad7e24dc3e1134d88d910cc72ff8d1238f4e3d1861e820b04ca6cfc94ba316705ae52649d734fcbdbf63b2ff2e3fcfa80bdfcd1a6e672cc221b2bc35fa50a9ea8ca166c742723519d51ad3ce29d217414806750d5032eb572ea54affa4a8a798335bdf728e777789fc533557688219efc8dc8ae62846448f9e41cacd69cf6ae975c6953671a8f30f80aea909f1543a583301d4ca52d7fd52f46f8d7e02a62a5b94174a55c532db6ce8f6c8f467768a8eac5c610d5e27e81bde6c643994f551c2569c7a627dd13e024ada9d35019a07ed0a184903c5f33e909bbda552984bed556a97613777fb825c792f63487003ad129b339f47a7d78c403556c6a57150b2043bdf6926592a700af71a4a31780c6da1f6a67fdd26e92a167924221c3dc1b604dcaf119849f52045b26f370f9d048a19dc81de9b3a8e65fa940deb607ab8d31c303bffa2b7eb85c81d5464ef152dd4ce6acfaf4f2fdf50d3224378e000ab66e003172723968a886c3e72012dc3dd8de62f962359199a6951617461aa1a35abe5a445a6195e9ed0255543aa47d992d9f02c6c95d4168bef593af10c9c675bb7d6bfa74556e76aa8503033ce86d6204d40ed0b97dbd1034b2fc6f1d75011a1253c309c0322c4c740b24bb2747851ce94e0faa9a06e02e6d0924e96fdc9d64b06f3abe1da0b5c74213cf831b8bd360a99faccce5f1e23fe1df965abd58a96eeb1b00b1835ede32d9172d804013ec1dab95303e7e1fc0be5a2889d12fad337de24ed9c1336c801692ec7ca9539c51745acc950431571ca16269cb1eafb48aee3deff636aae719bff508df94b87fe29e3714b4feb7f6faa26a9946f215909601d697daaab2fd7a26805deeca7a025751151342f4a371a1ee3578fd7afd89e41f4edbb67d9cebe41fa80c6f992bbcb92530a4972cb8130f9777d4ccc70cd38f99969f6e3ebe0820dc5f29475a03591f58df17082d5ecc513e7dee025ebc5ab445cc48d741a0a630f55766a0dc1bfa756da6eb68d3a2e542e8cae9f588207cc42cd58cc4508c634132539ad4854a1c3ef8f3d8e18e91aed27762b3d323ec5ef155ac0d5b9a</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科研</category>
        <category>小组汇报</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>通信优化</tag>
        <tag>梯度压缩</tag>
        <tag>科研</tag>
        <tag>同步并行（SGD）</tag>
        <tag>异步并行（ASGD）</tag>
        <tag>加速比分析</tag>
        <tag>Ray</tag>
        <tag>小组汇报</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式学习通信优化综述（2020香港大学）</title>
    <url>/archives/5cf57987.html</url>
    <content><![CDATA[<p><strong>综述名</strong>：Communication-Efficient Distributed Deep Learning: A Comprehensive Survey</p>
<p><strong>发表年限：</strong>2020</p>
<p><strong>简介：</strong>从以下四个维度对分布式训练算法进行介绍</p>
<ol type="1">
<li><p>通信同步和频次</p>
<p>主要有以下两个方向：</p>
<p>（1）宽松同步条件为异步并行（ASGD）或延迟同步并行（SSP）</p>
<p>（2）本地多次迭代后进行通信</p></li>
<li><p>系统架构和梯度聚合</p>
<p>（1）宽松参数服务器架构中的拥塞问题，MPI的去中心化拓扑</p>
<p>（2）Gossip架构</p>
<blockquote>
<p>工作节点能够从听一个或多个节点中获取模型，解决拥塞问题，并且减少了通信量</p>
</blockquote></li>
<li><p>压缩技术</p>
<p>（1）量化</p>
<p>（2）编码</p>
<p>（3）稀疏化</p></li>
<li><p>通信和计算的并行</p>
<p>简称为流水线算法，使得通信和计算充分并行。</p></li>
</ol>
<p>分布式SGD通信优化——以表格方式归纳如下：</p>
<table>
<thead>
<tr class="header">
<th>维度</th>
<th>方法</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>通信同步和频次</td>
<td>同步方法（SGD）<br>延迟受限同步<br>异步方法（ASGD）<br>本地SGD</td>
</tr>
<tr class="even">
<td>系统架构</td>
<td>参数服务器架构<br>All-Reduce架构<br>Gossip架构</td>
</tr>
<tr class="odd">
<td>压缩技术</td>
<td>量化<br>编码<br>稀疏化</td>
</tr>
<tr class="even">
<td>计算和同行并行</td>
<td>流水线方法<br>调度方法</td>
</tr>
</tbody>
</table>
<h2 id="分布式学习分类">分布式学习分类</h2>
<h3 id="通信同步和频次">通信同步和频次</h3>
<h4 id="同步并行">同步并行</h4>
<h4 id="受限同步并行">受限同步并行</h4>
<p>[Chen et al.] <a href="#refer-anchor-1"><sup>[1]</sup></a>提出了候补节点<span class="math inline">\(n_e\)</span>。主要思想是当有<span class="math inline">\(n\)</span>个节点到达之后，就不再等待梯度还未到达的<span class="math inline">\(n_e\)</span>个节点。它们的梯度值将会被舍去。</p>
<p>[Ho et al.] <a href="#refer-anchor-2"><sup>[2]</sup></a>提出了SSP模型，设定了一个阈值，允许在阈值之内，计算较快的工作节点迭代更多次数并更新全局参数，但是当最快节点和最慢节点到达阈值时，快速的节点需要等待慢速的节点回归合理阈值。</p>
<p>对于<code>拥塞问题</code>，[Chen et al] 提出了Round-Robin同步并行方法，该算法在整个训练过程中均匀交错工作节点更新，并以固定的循环顺序协调工作节点更新梯度。</p>
<h4 id="异步并行">异步并行</h4>
<p>[Mote et al.] <a href="#refer-anchor-3"><sup>[3]</sup></a>提出了高通信效率的分布式交替方向乘数法（D-ADMM），他是对ADMM算法的扩展。[Wei et al.] <a href="#refer-anchor-6"><sup>[6]</sup></a><a href="#refer-anchor-7"><sup>[7]</sup></a>将其拓展为去中心化的ADMM算法。</p>
<p>之后有更多的学者对ADMM算法进行优化 <a href="#refer-anchor-7"><sup>[7]</sup></a>，[Li et al.] <a href="#refer-anchor-8"><sup>[8]</sup></a>提出了延迟闭塞近端梯度法（Delayed Block Proximal Gradient Method），该算法只在每次迭代过程中异步更新参数中的一块内容，因此在通信的过程中只需要上传一部分参数。</p>
<p>[Grishchenko et al.]提出了一种异步分配算法，其特点是向上通信(从工人到主人)的稀疏化，他们通过对本地更新条目的统一抽样选择来实现稀疏化，这使得通信更加高效。</p>
<p>但是异步的方法往往收敛性得不到保证。</p>
<h4 id="本地sgd">本地SGD</h4>
<p>基本思想是在多轮迭代之后进行通信<a href="#refer-anchor-9"><sup>[9]</sup></a><a href="#refer-anchor-10"><sup>[10]</sup></a><a href="#refer-anchor-11"><sup>[11]</sup></a><a href="#refer-anchor-12"><sup>[12]</sup></a><a href="#refer-anchor-13"><sup>[13]</sup></a><a href="#refer-anchor-14"><sup>[14]</sup></a><a href="#refer-anchor-15"><sup>[15]</sup></a><a href="#refer-anchor-16"><sup>[16]</sup></a><a href="#refer-anchor-17"><sup>[17]</sup></a>。</p>
<p>[Yu et al.] <a href="#refer-anchor-18"><sup>[18]</sup></a>结合了分布式动量的SGD方法和PR-SGD<a href="#refer-anchor-19"><sup>[19]</sup></a>方法来提高了本地SGD方法的性能，并且证明了线性加速比。</p>
<p>[Jiang et al.] <a href="#refer-anchor-20"><sup>[20]</sup></a>将量化方法和本地SGD方法做了结合，降低了通信的复杂度。</p>
<p>其他能够减少通信数据量的方法是提高批量大小。[Yu et al.] <a href="#refer-anchor-21"><sup>[21]</sup></a>提出了Catalyst-like<a href="#refer-anchor-22"><sup>[22]</sup></a><a href="#refer-anchor-23"><sup>[23]</sup></a>算法，能够在每轮迭代之后动态提高批量大小，并达到和SSP方法下沟通的收敛速率。</p>
<p>大批量的SGD方法会使得泛化性能降低。[Lin et al.] <a href="#refer-anchor-24"><sup>[24]</sup></a>提出了post-local SGD方法来解决这个问题。该算法将整个训练过程分为两个阶段，第一阶段采用小批量SGD，第二阶段采用局部SGD。</p>
<h3 id="中心化和去中心化架构">中心化和去中心化架构</h3>
<h3 id="量化方法">量化方法</h3>
<h4 id="方法一">方法一</h4>
<p>数据并行下的梯度量化方法其实是一种分布式平均估计问题<a href="#refer-anchor-25"><sup>[25]</sup></a><a href="#refer-anchor-26"><sup>[26]</sup></a>。[Suresh et al] <a href="#refer-anchor-25"><sup>[25]</sup></a>和[Jakub et al] <a href="#refer-anchor-26"><sup>[26]</sup></a>对分布式平均估计进行了通信效率算法的分析。他们使用均方误差的方法，并提出了一种在给定通信成本下的编码策略以达到最佳的MSE。为了减少通信成本，[Suresh et al.] <a href="#refer-anchor-25"><sup>[25]</sup></a> 提出了两种方法，随机旋转量化（Stochastic Rotated Quantization），所有工作节点和中央服务器生成一个全局随机旋转矩阵，并尝试找到一个正交矩阵<span class="math inline">\(\mathbb{R}\)</span>。变长编码（Variable Length Coding）采用对应每个量化值出现次数的霍夫曼编码算法。</p>
<h4 id="方法二">方法二</h4>
<p>[Sei et al.] <a href="#refer-anchor-27"><sup>[27]</sup></a> 为了降低量化误差带来的负面影响，作者使用了误差补偿技术：每次量化时，把上一次迭代的量化误差加到本次迭代的梯度上，然后再进行量化，接着求出本次量化操作的误差。这种误差补偿机制可以确保所有的梯度都会再一定程度上对模型更新产生作用，只不过这种作用分散在不同的迭代中——类似于一种延迟更新的形式。作者指出，使用误差补偿后，就可以在几乎不损失模型精度的情况下将梯度由32位量化成1位。 <span class="math display">\[
\begin{aligned}
G_{i j \ell}^{\text {quant }}(t) &amp;=\mathcal{Q}\left(G_{i j \ell}(t)+\Delta_{i j \ell}(t-N)\right) \\
\Delta_{i j \ell}(t) &amp;=G_{i j \ell}(t)-\mathcal{Q}^{-1}\left(G_{i j \ell}^{\text {quant }}(t)\right)
\end{aligned}
\]</span> 其中<span class="math inline">\(\mathcal{Q}(\cdot)\)</span>表示量化函数，<span class="math inline">\(G_{i j \ell}^{\text {quant }}(t)\)</span>表示量化之后的整型数值。我们在量化过程中会保证<span class="math inline">\(\Delta_{i j \ell}(t)\)</span>被加到下一轮的梯度过程中（也称为了误差补偿机制）。</p>
<p>举个例子，在具体的实现上，比较简单的方法是将大于<span class="math inline">\(0\)</span>的梯度值编码成为<span class="math inline">\(1\)</span>，小于等于<span class="math inline">\(0\)</span>的梯度值编码为<span class="math inline">\(0\)</span>。在解码的时候，将<span class="math inline">\(1\)</span>编码为<span class="math inline">\(+1\)</span>，将<span class="math inline">\(0\)</span>解码为<span class="math inline">\(-1\)</span>，在进行聚合操作。</p>
<p>其他一些研究采用不精确的近端梯度提出了自适应的量化方法[168][169]，但是这些方法缺乏在深度学习模型种的实践。</p>
<p>考虑到需要同时具备高通信效率和好的收敛性，[Alistarh et al.] <a href="#refer-anchor-28"><sup>[28]</sup></a> 提出了一种基于量化的算法，而不仅仅只是量化方法。这种量化算法叫做QSGD，可以平衡传输的比特数与压缩梯度的方差。</p>
<h4 id="方法三">方法三</h4>
<p>[Wen et al.] <a href="#refer-anchor-29"><sup>[29]</sup></a> 提出了另一种叫做TernGrad的压缩通信量的模式，它可以使用三元梯度来加速分布式深度学习。在TernGrad中，梯度<span class="math inline">\(G(x)\)</span>被量化为三元组<span class="math inline">\(\{-1,0,1\}\)</span>来减少通信量化大小。梯度<span class="math inline">\(G(x)\)</span>量化如下： <span class="math display">\[
\tilde{Q}_{t}\left(G\left(\mathbf{x}_{t}\right)\right)=\operatorname{ternarize}\left(G\left(\mathbf{x}_{t}\right)\right)=s_{t} \cdot \operatorname{sign}\left(G\left(\mathbf{x}_{t}\right)\right) \circ \mathbf{b}_{t}
\]</span> 其中<span class="math inline">\(s_{t}:=\max \left(a b s\left(G\left(\mathbf{x}_{t}\right)\right)\right)\)</span>以及$ <span class="math inline">\(表示哈达玛积。\)</span>()<span class="math inline">\(和SGD中的\)</span>()<span class="math inline">\(是一致的。每个\)</span>b_t$元素遵循如下分布： <span class="math display">\[
\begin{array}{l}
P\left(b_{t, j}=1 \mid G_{t}\left(\mathbf{x}_{t}\right)\right)=\left|G_{t, j}\left(\mathbf{x}_{t}\right) / s_{t}\right| \\
P\left(b_{t, j}=0 \mid G_{t}\left(\mathbf{x}_{t}\right)\right)=1-\left|G_{t, j}\left(\mathbf{x}_{t}\right) / s_{t}\right|
\end{array}
\]</span></p>
<h4 id="方法四">方法四</h4>
<p>Sign-SGD是另外一种量化方法 <a href="#refer-anchor-30"><sup>[30]</sup></a>。在Sign-SGD中，每个工作节点将梯度量化为二进制值，它是梯度向量的每个坐标的符号。[Bernstein et al.] <a href="#refer-anchor-31"><sup>[31]</sup></a>提供了基于该方法在非凸优化上的理论分析。他们证明了当梯度与随机度和曲率一样稠密或更密集时，Sign-SGD可以以一个理论速率收敛。[Bernstein et al.] <a href="#refer-anchor-31"><sup>[31]</sup></a>还提出了一种具有大多数投票的Sign-SGD方法。在工作节点将他们的梯度向量的符号交换到服务器后，整体的更新由多数人投票决定。通过这种方法，将通信成本降低了32倍。</p>
<h4 id="方法五">方法五</h4>
<p>[Wang et al.] <a href="#refer-anchor-32"><sup>[32]</sup></a>提出了一种新的方法叫做原子稀疏化方法（Atomic Sparsification (ATOMO)）。他证明了梯度稀疏化和量化是原子分解过程中梯度稀疏化的一般方法的一部分，例如QSGD、奇异值分解（SVD）、傅里叶分解等。ATOMO的目标是最小化在原子基础上稀疏的稀疏梯度的方差，并保持它作为原始梯度的无偏估计量。它们说明了1位的QSGD和TernGrad是ATOMO的特殊情况。此外，他们用SVD改进了ATOMO，称为Spectral-ATOMO。在他们的实验中，与QSGD和TernGrad相比，Spectral-ATOMO分别减少了2倍和3倍的训练时间。</p>
<h4 id="方法六">方法六</h4>
<p>[Mishchenko et al.] <a href="#refer-anchor-33"><sup>[33]</sup></a>介绍了DIANA这种创新方法，它扩展了QSGD和Terngrad这两种方法，将这个梯度向量划分成多个子向量，并将每个子向量进行独立压缩。</p>
<h4 id="方法七">方法七</h4>
<p>[Sun et al.] <a href="#refer-anchor-34"><sup>[34]</sup></a>的LAQ方法</p>
<h4 id="方法八">方法八</h4>
<p>[Horvth et al.] <a href="#refer-anchor-36"><sup>[36]</sup></a>提出了一种新的压缩方法，叫做自然压缩(Natural Compression)。这种压缩方法定义如下： <span class="math display">\[
C_{n a t}(t):=\left\{\begin{array}{ll}
\operatorname{sign}(t) \cdot 2^{\left\lfloor\log _{2}|t|\right\rfloor}, &amp; \text { with probability } p(t) \\
\operatorname{sign}(t) \cdot 2^{\left\lfloor\log _{2}|t|\right\rfloor}, &amp; \text { with probability } 1-p(t)
\end{array}\right.
\]</span></p>
<p>其中<span class="math inline">\(p(t):=\frac{2^{\left\lceil\log _{2}|t|-|t|\right\rceil}}{2^{\left\lfloor\log _{2}|t|\right\rfloor}}\)</span>。他们提出的这种压缩方法能够将方差忽略不计，因此有较好的收敛性。这个方法的一个优势是<span class="math inline">\(C_{nat}\)</span>能够去掉二进制表示中的尾数。他们提出了与QSGD的抖动是类似的。</p>
<p>[Yu et al.] <a href="#refer-anchor-35"><sup>[35]</sup></a>提出了名为AsyLPGd低精度算法，在异步框架中使用，同时量化梯度和模型参数。它使用额外的要求来限制量化级别。他们将稀疏化方法和AsyLPG相结合，进一步降低通信的复杂度。</p>
<h3 id="稀疏化方法">稀疏化方法</h3>
<h3 id="计算和通信流水线调度">计算和通信流水线调度</h3>
<h2 id="未来优化方向">未来优化方向</h2>
<h2 id="参考文献">参考文献</h2>
<div id="refer-anchor-1">

</div>
<ul>
<li>[1] <a href="https://arxiv.org/abs/1604.00981" target="_blank" rel="noopener external nofollow noreferrer">Chen J, Pan X, Monga R, et al. Revisiting distributed synchronous SGD[J]. arXiv preprint arXiv:1604.00981, 2016.</a>
<div id="refer-anchor-2">

</div></li>
<li>[2] <a href="http://papers.nips.cc/paper/4894-more-effective-distributed-ml-via-as" target="_blank" rel="noopener external nofollow noreferrer">Ho Q, Cipar J, Cui H, et al. More effective distributed ml via a stale synchronous parallel parameter server[C]//Advances in neural information processing systems. 2013: 1223-1231.</a>
<div id="refer-anchor-3">

</div></li>
<li>[3] <a href="https://home.cse.ust.hk/~weiwa/papers/chen-infocom19.pdf" target="_blank" rel="noopener external nofollow noreferrer">Chen C, Wang W, Li B. Round-robin synchronization: Mitigating communication bottlenecks in parameter servers[C]//IEEE INFOCOM 2019-IEEE Conference on Computer Communications. IEEE, 2019: 532-540.</a>
<div id="refer-anchor-4">

</div></li>
<li>[4] <a href="https://ieeexplore.ieee.org/abstract/document/6484993/" target="_blank" rel="noopener external nofollow noreferrer">Mota J F C, Xavier J M F, Aguiar P M Q, et al. D-ADMM: A communication-efficient distributed algorithm for separable optimization[J]. IEEE Transactions on Signal Processing, 2013, 61(10): 2718-2723.</a>
<div id="refer-anchor-5">

</div></li>
<li>[5] <a href="https://ieeexplore.ieee.org/abstract/document/6425904/" target="_blank" rel="noopener external nofollow noreferrer">Wei E, Ozdaglar A. Distributed alternating direction method of multipliers[C]//2012 IEEE 51st IEEE Conference on Decision and Control (CDC). IEEE, 2012: 5445-5450.</a>
<div id="refer-anchor-6">

</div></li>
<li>[6] <a href="https://ieeexplore.ieee.org/abstract/document/7472585/" target="_blank" rel="noopener external nofollow noreferrer">Chang T H, Hong M, Liao W C, et al. Asynchronous distributed alternating direction method of multipliers: Algorithm and convergence analysis[C]//2016 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP). IEEE, 2016: 4781-4785.</a></li>
</ul>
<div id="refer-anchor-7">

</div>
<ul>
<li>[7] <a href="http://www.jmlr.org/proceedings/papers/v32/zhange14.pdf" target="_blank" rel="noopener external nofollow noreferrer">Zhang R, Kwok J. Asynchronous distributed ADMM for consensus optimization[C]//International conference on machine learning. 2014: 1701-1709.</a>
<div id="refer-anchor-8">

</div></li>
<li>[8] <a href="http://papers.nips.cc/paper/5597-communication-efficient-distributed-machine-learning-with-the-parameter-server" target="_blank" rel="noopener external nofollow noreferrer">Li M, Andersen D G, Smola A J, et al. Communication efficient distributed machine learning with the parameter server[C]//Advances in Neural Information Processing Systems. 2014: 19-27.</a>
<div id="refer-anchor-9">

</div></li>
<li>[9] <a href="https://arxiv.org/abs/1403.7550" target="_blank" rel="noopener external nofollow noreferrer">Zhang C, Ré C. Dimmwitted: A study of main-memory statistical analytics[J]. arXiv preprint arXiv:1403.7550, 2014.</a>
<div id="refer-anchor-10">

</div></li>
<li>[10] <a href="https://arxiv.org/abs/1603.04379" target="_blank" rel="noopener external nofollow noreferrer">Bijral A S, Sarwate A D, Srebro N. On data dependence in distributed stochastic optimization[J]. arXiv preprint arXiv:1603.04379, 2016.</a>
<div id="refer-anchor-11">

</div></li>
<li>[11] <a href="https://arxiv.org/abs/1606.07365" target="_blank" rel="noopener external nofollow noreferrer">Zhang J, De Sa C, Mitliagkas I, et al. Parallel SGD: When does averaging help?[J]. arXiv preprint arXiv:1606.07365, 2016.</a>
<div id="refer-anchor-12">

</div></li>
<li>[12] <a href="http://papers.nips.cc/paper/9288-local-sgd-with-periodic-averaging-tighter-analysis-and-adaptive-synchronization" target="_blank" rel="noopener external nofollow noreferrer">Haddadpour F, Kamani M M, Mahdavi M, et al. Local SGD with periodic averaging: Tighter analysis and adaptive synchronization[C]//Advances in Neural Information Processing Systems. 2019: 11082-11094.</a>
<div id="refer-anchor-13">

</div></li>
<li>[13] <a href="https://www.aclweb.org/anthology/N10-1069.pdf" target="_blank" rel="noopener external nofollow noreferrer">McDonald R, Hall K, Mann G. Distributed training strategies for the structured perceptron[C]//Human language technologies: The 2010 annual conference of the North American chapter of the association for computational linguistics. 2010: 456-464.</a>
<div id="refer-anchor-14">

</div></li>
<li>[14] <a href="http://papers.nips.cc/paper/3881-efficient-large-scale-distributed-training-of-conditional-maximum-entropy-models" target="_blank" rel="noopener external nofollow noreferrer">Mcdonald R, Mohri M, Silberman N, et al. Efficient large-scale distributed training of conditional maximum entropy models[C]//Advances in neural information processing systems. 2009: 1231-1239.</a>
<div id="refer-anchor-15">

</div></li>
<li>[15] <a href="https://ieeexplore.ieee.org/abstract/document/6853589/" target="_blank" rel="noopener external nofollow noreferrer">Zhang X, Trmal J, Povey D, et al. Improving deep neural network acoustic models using generalized maxout networks[C]//2014 IEEE international conference on acoustics, speech and signal processing (ICASSP). IEEE, 2014: 215-219.</a>
<div id="refer-anchor-16">

</div></li>
<li>[16] <a href="http://papers.nips.cc/paper/5761-deep-learning-with-elastic-averaging-sgd" target="_blank" rel="noopener external nofollow noreferrer">Zhang S, Choromanska A E, LeCun Y. Deep learning with elastic averaging SGD[C]//Advances in neural information processing systems. 2015: 685-693.</a>
<div id="refer-anchor-17">

</div></li>
<li>[17] <a href="https://www.aaai.org/ojs/index.php/AAAI/article/view/4514" target="_blank" rel="noopener external nofollow noreferrer">Yu H, Yang S, Zhu S. Parallel restarted SGD with faster convergence and less communication: Demystifying why model averaging works for deep learning[C]//Proceedings of the AAAI Conference on Artificial Intelligence. 2019, 33: 5693-5700.</a>
<div id="refer-anchor-18">

</div></li>
<li>[18] <a href="https://arxiv.org/abs/1905.03817" target="_blank" rel="noopener external nofollow noreferrer">Yu H, Jin R, Yang S. On the linear speedup analysis of communication efficient momentum sgd for distributed non-convex optimization[J]. arXiv preprint arXiv:1905.03817, 2019.</a>
<div id="refer-anchor-19">

</div></li>
<li>[19] <a href="https://www.aaai.org/ojs/index.php/AAAI/article/view/4514" target="_blank" rel="noopener external nofollow noreferrer">Yu H, Yang S, Zhu S. Parallel restarted SGD with faster convergence and less communication: Demystifying why model averaging works for deep learning[C]//Proceedings of the AAAI Conference on Artificial Intelligence. 2019, 33: 5693-5700.</a>
<div id="refer-anchor-20">

</div></li>
<li>[20] <a href="http://papers.nips.cc/paper/7519-a-linear-speedup-analysis-of-distributed-deep-learning-with-sparse-and-quantized-communication" target="_blank" rel="noopener external nofollow noreferrer">Jiang P, Agrawal G. A linear speedup analysis of distributed deep learning with sparse and quantized communication[C]//Advances in Neural Information Processing Systems. 2018: 2525-2536.</a>
<div id="refer-anchor-21">

</div></li>
<li>[21] <a href="https://arxiv.org/abs/1905.04346" target="_blank" rel="noopener external nofollow noreferrer">Yu H, Jin R. On the computation and communication complexity of parallel SGD with dynamic batch sizes for stochastic non-convex optimization[J]. arXiv preprint arXiv:1905.04346, 2019.</a>
<div id="refer-anchor-22">

</div></li>
<li>[22] <a href="http://papers.nips.cc/paper/5928-a-universal-catalyst-for-first-order-optimization" target="_blank" rel="noopener external nofollow noreferrer">Lin H, Mairal J, Harchaoui Z. A universal catalyst for first-order optimization[C]//Advances in neural information processing systems. 2015: 3384-3392.</a>
<div id="refer-anchor-23">

</div></li>
<li>[23] <a href="https://hal.inria.fr/hal-01773296/" target="_blank" rel="noopener external nofollow noreferrer">Paquette C, Lin H, Drusvyatskiy D, et al. Catalyst for gradient-based nonconvex optimization[C]. 2018.</a>
<div id="refer-anchor-24">

</div></li>
<li>[24] <a href="https://arxiv.org/abs/1808.07217" target="_blank" rel="noopener external nofollow noreferrer">Lin T, Stich S U, Patel K K, et al. Don't Use Large Mini-Batches, Use Local SGD[J]. arXiv preprint arXiv:1808.07217, 2018.</a>
<div id="refer-anchor-25">

</div></li>
<li>[25] <a href="http://proceedings.mlr.press/v70/suresh17a.html" target="_blank" rel="noopener external nofollow noreferrer">Suresh A T, Felix X Y, Kumar S, et al. Distributed mean estimation with limited communication[C]//International Conference on Machine Learning. 2017: 3329-3337.</a>
<div id="refer-anchor-26">

</div></li>
<li>[26] <a href="https://www.frontiersin.org/articles/10.3389/fams.2018.00062/full" target="_blank" rel="noopener external nofollow noreferrer">Konečný J, Richtárik P. Randomized distributed mean estimation: Accuracy vs. communication[J]. Frontiers in Applied Mathematics and Statistics, 2018, 4: 62.</a>
<div id="refer-anchor-27">

</div></li>
<li>[27] <a href="https://www.isca-speech.org/archive/interspeech_2014/i14_1058.html" target="_blank" rel="noopener external nofollow noreferrer">Seide F, Fu H, Droppo J, et al. 1-bit stochastic gradient descent and its application to data-parallel distributed training of speech dnns[C]//Fifteenth Annual Conference of the International Speech Communication Association. 2014.</a></li>
<li><div id="refer-anchor-28">

</div></li>
<li>[28] <a href="https://scholar.google.com.hk/scholar?hl=zh-CN&amp;as_sdt=0%2C5&amp;q=Qsgd%3A+Randomized+quantization+for+communication-optimal+stochastic+gradient+descent&amp;btnG=" target="_blank" rel="noopener external nofollow noreferrer">Alistarh D, Li J, Tomioka R, et al. Qsgd: Randomized quantization for communication-optimal stochastic gradient descent[J]. arXiv preprint arXiv:1610.02132, 2016.</a>
<div id="refer-anchor-29">

</div></li>
<li>[29] <a href="http://papers.nips.cc/paper/6749-terngrad-ternary-gradients-to-reduce-communication-in-distributed-deep-learning" target="_blank" rel="noopener external nofollow noreferrer">Wen W, Xu C, Yan F, et al. Terngrad: Ternary gradients to reduce communication in distributed deep learning[C]//Advances in neural information processing systems. 2017: 1509-1519.</a>
<div id="refer-anchor-30">

</div></li>
<li>[30] <a href="https://arxiv.org/abs/1802.04434" target="_blank" rel="noopener external nofollow noreferrer">Bernstein J, Wang Y X, Azizzadenesheli K, et al. signSGD: Compressed optimisation for non-convex problems[J]. arXiv preprint arXiv:1802.04434, 2018.</a>
<div id="refer-anchor-31">

</div></li>
<li>[31] <a href="https://arxiv.org/abs/1810.05291" target="_blank" rel="noopener external nofollow noreferrer">Bernstein J, Zhao J, Azizzadenesheli K, et al. signSGD with majority vote is communication efficient and fault tolerant[J]. arXiv preprint arXiv:1810.05291, 2018.</a>
<div id="refer-anchor-32">

</div></li>
<li>[32] <a href="http://papers.nips.cc/paper/8191-atomo-communication-efficient-learning-via-atomic-sparsification" target="_blank" rel="noopener external nofollow noreferrer">Wang H, Sievert S, Liu S, et al. Atomo: Communication-efficient learning via atomic sparsification[C]//Advances in Neural Information Processing Systems. 2018: 9850-9861.</a>
<div id="refer-anchor-33">

</div></li>
<li>[33] <a href="https://arxiv.org/abs/1901.09269" target="_blank" rel="noopener external nofollow noreferrer">Mishchenko K, Gorbunov E, Takáč M, et al. Distributed learning with compressed gradient differences[J]. arXiv preprint arXiv:1901.09269, 2019.</a>
<div id="refer-anchor-34">

</div></li>
<li>[34] <a href="http://papers.nips.cc/paper/8598-communication-efficient-distributed-learning-via-lazily-aggregated-quantified-grades" target="_blank" rel="noopener external nofollow noreferrer">Sun J, Chen T, Giannakis G, et al. Communication-efficient distributed learning via lazily aggregated quantized gradients[C]//Advances in Neural Information Processing Systems. 2019: 3370-3380.</a>
<div id="refer-anchor-35">

</div></li>
<li>[35] <a href="http://papers.nips.cc/paper/8694-double-quantization-for-communication-efficient-distributed-optimization" target="_blank" rel="noopener external nofollow noreferrer">Yu Y, Wu J, Huang L. Double quantization for communication-efficient distributed optimization[C]//Advances in Neural Information Processing Systems. 2019: 4438-4449.</a>
<div id="refer-anchor-36">

</div></li>
<li>[36] <a href="https://arxiv.org/abs/1905.10988" target="_blank" rel="noopener external nofollow noreferrer">Horvath S, Ho C Y, Horvath L, et al. Natural compression for distributed deep learning[J]. arXiv preprint arXiv:1905.10988, 2019.</a>
<div id="refer-anchor-37">

</div>
<div id="refer-anchor-38">

</div>
<div id="refer-anchor-27">

</div>
<div id="refer-anchor-27">

</div></li>
</ul>
]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>通信优化</category>
        <category>梯度压缩</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>通信优化</tag>
        <tag>梯度压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>Ray参数服务器性能测评实验</title>
    <url>/archives/d05bdbcf.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="a3b504e95037246e6038936fa898f4ec0feadaa6f5c3295b9c34114148644560"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>分布式框架</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>科研</tag>
        <tag>同步并行（SGD）</tag>
        <tag>异步并行（ASGD）</tag>
        <tag>加速比分析</tag>
        <tag>Ray</tag>
        <tag>Encrypted</tag>
      </tags>
  </entry>
  <entry>
    <title>Konga前端修改设计调研</title>
    <url>/archives/71d33514.html</url>
    <content><![CDATA[<h2 id="控制台">控制台</h2>
<p>控制台依然沿用Konga控制台，显示主要信息，明确信息的内容，检索有关节点通用的详细信息。</p>
<h2 id="主要信息">主要信息</h2>
<p>沿用Konga控制台，对Json解析以表格的方式进行显示可以沿用</p>
<h2 id="应用接入service">应用接入（Service）</h2>
<p>名称下方显示对该接口的主要描述</p>
<table>
<thead>
<tr class="header">
<th>名称</th>
<th>描述</th>
<th>协议</th>
<th>主机</th>
<th>端口</th>
<th>创建时间</th>
<th>DELETE</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>查询企业信用信息</td>
<td>描述信息</td>
<td>HTTP</td>
<td>192.168.105.197</td>
<td>8080</td>
<td>2020/8/12</td>
<td>按钮</td>
</tr>
</tbody>
</table>
<p>Kong当中只支持英文名，所以这里新增加一列支持中文表示（因为Kong当中的名称可以为空，所以这里可以直接在Konga数据库中增加一列存储表示中文名），可以在中文名后面跟着英文名。</p>
<p>其他内容可以保持不变。</p>
<p>（英文名称可以用正则表达式固定采用_或者.号将地址/进行连接）</p>
<p>前面部分折叠按钮，点击之后显示该服务所有的路由会比较方便。</p>
<h3 id="新建应用">新建应用</h3>
<p>这里部分逻辑是二选一，填写了URL下面部分就空着，不填写URL，就填写下面部分。这里的设计可以更好一些？</p>
<p><img src="/archives/71d33514/image-20200812193442901.png" alt="image-20200812193442901" style="zoom:67%;"></p>
<h3 id="应用详情">应用详情</h3>
<p>应用详情、接管路由、插件、可访问的角色（查询可以访问该路由的角色，点击角色可以查看该角色下的所有用户）</p>
<h4 id="接管路由">接管路由</h4>
<table>
<thead>
<tr class="header">
<th>名称/英文名/ID</th>
<th>描述</th>
<th>协议</th>
<th>路径</th>
<th>方法</th>
<th>创建时间</th>
<th>DELETE/EDIT</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>查询企业信用信息</td>
<td>描述信息</td>
<td>HTTP</td>
<td>/breedtailwater/list</td>
<td>GET</td>
<td>2020/8/12</td>
<td>按钮</td>
</tr>
</tbody>
</table>
<h4 id="插件">插件</h4>
<p>这里最好有个按钮能够支持一键开关所有该服务下面的插件</p>
<p>方案：1、只能通过Kong官方API控制：http://192.168.105.197:1337/kong/plugins/3e29dc4f-fcca-461f-a57e-07c8b4104c83（缺点是多次请求，无法回滚）。2、开发一键开关插件的插件</p>
<table>
<thead>
<tr class="header">
<th>名称/英文名/ID</th>
<th>适用角色</th>
<th>适用角色</th>
<th>创建角色</th>
<th>按钮</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h4 id="可访问的角色">可访问的角色</h4>
<p>（暂时没有想到解决方法）</p>
<h2 id="api发布">API发布</h2>
<p>这块内容不要了，全放在应用接入当中，现在的逻辑不容易理解。</p>
<h2 id="角色权限">角色权限</h2>
<p>两块内容：所有用户+所有权限组</p>
<h3 id="用户">用户</h3>
<table>
<thead>
<tr class="header">
<th>用户名</th>
<th>所属权限组</th>
<th>...</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>fishfarm</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>这里也可以在Konga表中增加对于用户的描述</p>
<p>点击每个用户，进入之后大致保留其所有布局，点击组之后显示所有可以访问路由的脉络。</p>
<h3 id="权限组">权限组</h3>
<p>将权限组单独列出来，点击权限组显示所有该权限组中的用户信息（还没想到如何实现），如果通过数据库查询，这样的方式会导致KONGA和KONG的耦合度非常高，无法分离了。</p>
<p>隐藏负载均衡和HTTPS证书</p>
]]></content>
      <categories>
        <category>API网关</category>
        <category>Kong&amp;Konga</category>
        <category>权限认证</category>
      </categories>
      <tags>
        <tag>Kong</tag>
        <tag>keycloak</tag>
        <tag>权限认证</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>LAQ和LAG代码研读</title>
    <url>/archives/d34fba27.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码" /><label>请输入密码</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="ec7bfbdb226b30318f6af2d48df17591736a66f21ba78cbaef3fd3d9cac3b184"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>通信优化</category>
        <category>梯度压缩</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>通信优化</tag>
        <tag>梯度压缩</tag>
        <tag>科研</tag>
      </tags>
  </entry>
  <entry>
    <title>上升和下降窗口</title>
    <url>/archives/fe577f0d.html</url>
    <content><![CDATA[<p>和“跳空”指代的是同一个意思：价格运动出现了一个没有发生任何交易行为的价格区域。</p>
<h2 id="上升窗口">上升窗口</h2>
<ul>
<li>最高点和后一根蜡烛线的最低点之间存在价格缺口</li>
<li>是一种看涨信号</li>
<li>上升窗口形成后将会称为支撑位</li>
</ul>
<p><img src="/archives/fe577f0d/image-20200802102757016.png" alt="image-20200802102757016" style="zoom:67%;"></p>
<h2 id="下降窗口">下降窗口</h2>
<p><img src="/archives/fe577f0d/image-20200802103136973.png" alt="image-20200802103136973" style="zoom: 50%;"></p>
]]></content>
      <categories>
        <category>投资</category>
        <category>技术面</category>
        <category>蜡烛图</category>
        <category>组合形态</category>
      </categories>
      <tags>
        <tag>蜡烛图</tag>
        <tag>K线</tag>
        <tag>投资</tag>
        <tag>股票</tag>
        <tag>期货</tag>
      </tags>
  </entry>
  <entry>
    <title>平头、乌鸦和士兵</title>
    <url>/archives/11684b86.html</url>
    <content><![CDATA[<h2 id="平头形态">平头形态</h2>
<ul>
<li>两根或者多根相同最高价和相同最低价的蜡烛线形成</li>
<li>理想情况
<ul>
<li>第一根蜡烛线是一个较长实体</li>
<li>第二交易日实体较小
<ul>
<li>可以是纺锤线，流星线，上吊线，乌云盖等极具变化的形态组合</li>
</ul></li>
</ul></li>
</ul>
<p><img src="/archives/11684b86/image-20200801205756971.png" alt="image-20200801205756971" style="zoom:67%;"></p>
<blockquote>
<p><code>注意：</code>平头形态在日线和日内分时并不重要（除非与其他指标相配合），但是在周线和月线级别需要引起重视</p>
</blockquote>
<h2 id="黑乌鸦">黑乌鸦</h2>
<p>该形态出现在一波上涨的高位处，预示着下跌还将继续</p>
<ul>
<li>组成：三根收盘价在当天最低点或者接近当天最低点的阴线构成</li>
<li>显示出现于上升趋势中，作为顶部的反转信号</li>
</ul>
<blockquote>
<p>立项情况下，每根黑色蜡烛线的开盘价位于前一根蜡烛实体的内部</p>
</blockquote>
<p><img src="/archives/11684b86/image-20200801210142084.png" alt="image-20200801210142084" style="zoom: 50%;"></p>
<h3 id="红色三兵">红色三兵</h3>
<ul>
<li>当天的收盘价都处于当天高点的附近</li>
</ul>
<p>和黑乌鸦相似，预示着上涨还将继续，最佳情况是开盘价都位于每根蜡烛的实体内部</p>
<p><img src="/archives/11684b86/image-20200801210437954.png" alt="image-20200801210437954" style="zoom:67%;"></p>
<blockquote>
<p>要注意以上两种形态并不是买入和卖出信号，只是意味着状态的持续，建仓需要格外小心，需要等待回落到支撑位、</p>
<p>它出现在上涨还是下跌行情中并不重要</p>
</blockquote>
]]></content>
      <categories>
        <category>投资</category>
        <category>技术面</category>
        <category>蜡烛图</category>
        <category>组合形态</category>
      </categories>
      <tags>
        <tag>蜡烛图</tag>
        <tag>K线</tag>
        <tag>投资</tag>
        <tag>股票</tag>
        <tag>期货</tag>
      </tags>
  </entry>
  <entry>
    <title>孕线与十字孕线、启明星与黄昏线</title>
    <url>/archives/70896bd9.html</url>
    <content><![CDATA[<h2 id="孕线">孕线</h2>
<ul>
<li>第一根蜡烛是一个远超一般长度的红色和绿色实体</li>
<li>第二根蜡烛实体被第一根蜡烛包裹</li>
</ul>
<p><img src="/archives/70896bd9/image-20200801173944948.png" alt="image-20200801173944948" style="zoom:67%;"></p>
<h2 id="十字孕线">十字孕线</h2>
<p>被包裹的蜡烛是一个十字星形态</p>
<p><img src="/archives/70896bd9/image-20200801174305878.png" alt="image-20200801174305878" style="zoom:67%;"></p>
<blockquote>
<p>该种形态可以和锤子线，流星线和十字星线等单根蜡烛形态结合来看</p>
</blockquote>
<h2 id="启明星">启明星</h2>
<ul>
<li>三根实体形成（中间一根是小实体，称为<code>星线</code>）</li>
<li>上升和下降趋势中，星线和第一根实体形成跳空缺口</li>
<li>第三根和星线之间也出现跳空缺口</li>
<li>使得星线实体孤立出现在趋势的末尾位置</li>
</ul>
<blockquote>
<p>理想状况下实体之间没有重叠，影线和中间蜡烛颜色无所谓</p>
</blockquote>
<p><img src="/archives/70896bd9/image-20200801202609720.png" alt="image-20200801202609720" style="zoom:67%;"></p>
<h2 id="十字启明星">十字启明星</h2>
<p>上方的星形蜡烛是一个十字星形态</p>
<p><img src="/archives/70896bd9/image-20200801202714455.png" alt="image-20200801202714455" style="zoom:67%;"></p>
<blockquote>
<p>启明星形态可以配合成交量，以底部形态为例，第一根阴线配合较小成交量，第三根阳线突然放出较大成交量，说明市场力量正在激起一波新的市场走势。</p>
</blockquote>
]]></content>
      <categories>
        <category>投资</category>
        <category>技术面</category>
        <category>蜡烛图</category>
        <category>组合形态</category>
      </categories>
      <tags>
        <tag>蜡烛图</tag>
        <tag>K线</tag>
        <tag>投资</tag>
        <tag>股票</tag>
        <tag>期货</tag>
      </tags>
  </entry>
  <entry>
    <title>刺透、乌云盖顶、吞没以及反击线</title>
    <url>/archives/b4c92d84.html</url>
    <content><![CDATA[<p>两根蜡烛图会比一根蜡烛传达的信息更加准确：</p>
<ul>
<li>第一根蜡说明市场达到顶部或者底部</li>
<li>第二根蜡烛进行确认</li>
</ul>
<p>三根蜡烛会更加准确</p>
<ul>
<li>第一根说明之前的趋势正在继续</li>
<li>第二根蜡烛传达见顶或者触底的信息</li>
<li>第三根蜡烛对反转信号的有效性进行确认</li>
</ul>
<h2 id="刺透形态">刺透形态</h2>
<h3 id="形态条件">形态条件</h3>
<ol type="1">
<li>处于下降趋势，超卖过程中</li>
<li>下降趋势中，第一根蜡烛是一个绿色实体</li>
<li>第二根红色蜡烛低开，向上穿入黑色实体内部超过<span class="math inline">\(1/2\)</span>位置处</li>
</ol>
<p><img src="/archives/b4c92d84/image-20200801105812622.png" alt="image-20200801105812622" style="zoom: 50%;"></p>
<h2 id="乌云盖形态">乌云盖形态</h2>
<ol type="1">
<li>处于上涨趋势中，超买状态</li>
<li>第一根蜡烛红色实体，第二根蜡烛绿色实体</li>
<li>第二根蜡烛开盘高于前一根红色实体最高或收盘价，收盘到前一根红色实体开盘价附近</li>
</ol>
<p><img src="/archives/b4c92d84/image-20200801110106072.png" alt="image-20200801110106072" style="zoom: 50%;"></p>
<h2 id="吞没形态">吞没形态</h2>
<ul>
<li>蜡烛的颜色需要被区分</li>
</ul>
<p>只需要吞没前一根线的实体部分，并不必须吞没影线</p>
<p><img src="/archives/b4c92d84/image-20200801110228675.png" alt="image-20200801110228675" style="zoom: 50%;"></p>
<h2 id="反击线形态">反击线形态</h2>
<p>反击线会稍微弱于乌云盖和吞没形态，但是同样会起到预示作用</p>
<p><img src="/archives/b4c92d84/image-20200801110551994.png" alt="image-20200801110551994" style="zoom: 50%;"></p>
<h2 id="实战例题">实战例题</h2>
<p><img src="/archives/b4c92d84/image-20200801172831061.png" alt="image-20200801172831061" style="zoom:67%;"></p>
<p>说明：上方虚线部分是我们需要反弹到的目标价位，我们需要寻找较为合适的买点，对比收盘价，X的收盘价不适合买入，来到Y收盘价后适合买入。</p>
<p>原因：</p>
<ul>
<li>X处出现了长下影线的锤子线，其最低价形成了一个局部的支撑位</li>
<li>考察X收盘距离目标价位和支撑位的距离，交易的收益和风险并不具有吸引力
<ul>
<li>支撑位变成了买入之后的止损位</li>
<li>而目标价位到止损位之间的距离差不多，所以综合衡量之下，并不诱人</li>
</ul></li>
<li>Y处的收盘价再非常接近局部支撑位附近
<ul>
<li>将支撑位设置为止损位</li>
<li>距离目标价位的距离显然大于止损位的距离，收益和风险比较好，适合买入</li>
</ul></li>
</ul>
]]></content>
      <categories>
        <category>投资</category>
        <category>技术面</category>
        <category>蜡烛图</category>
        <category>组合形态</category>
      </categories>
      <tags>
        <tag>蜡烛图</tag>
        <tag>K线</tag>
        <tag>投资</tag>
        <tag>股票</tag>
        <tag>期货</tag>
      </tags>
  </entry>
  <entry>
    <title>分布式机器学习量化通信综述</title>
    <url>/archives/88211b35.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码" /><label>请输入密码</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="fdafe9b73ee12c12f28a40d9c8e4aa2ac94d9c0e639fef1eba021c415ba101bd">53bccbed492fe741672cc289821ff260d55329b971f0ce9e038ef8ad363e3ff4170c6b5a23abe217b462cb0e304c5c205f232c208b02a238dd80067db562dc839110acc039d1741695229026e1675edde22846c107dcb02d8ec6b745931d81511186f0fb12c60e2ba99d6310ef7f087e5907ae073e744aa64d86450c80d77ab05203f89e0eb4a887349430cfa7408b9105b8fc0eb54c84751649a2659e8e3d8783ce398fecd0a1118bda8fd00c2e0bfe0f4b5663c76d7328c9486d91d6dd955f79ab39445360da213f0537062c90a56d016312ac5bb255eb57e8c8ec96b99b5388a924726a2837d8d946571fa54620848d61365052ef78a254b597629c29be0b84e7f9a2618b602a18d7e46bad394cee066b100058feacfffd4a9ffcaafc80cd8a2b9cf554e434439b5c5c673038df8804619b2d2d60ea394497f0e6258fcd4c8e24d43d1288cbe86e31e4f442e68af645bdc4491bbb235112b871b90c5465add09062e6cf6b2fb9c369a35c2f6acb2e30aee1b1593a0713dde651baef6d5033ff068a448f469a13351a9caa2595e6c479ca6742d47196dd3dd012edc7b8bc9176abd42b7d10c89bb95ca4c6ff133f6dbcbc3792fc21eaae3f4eabda5e8d4914cbc7d40190ebf3640c443b37c2fec6494240567ced010ba4f819b42ac6ddbc31c27aa67a6c659774e60e9916d0d92338be396589ba7398dae7030d2b17af4b3f516e3ef9f693ba95bf611cbe51d111f02f5288aa4c69c8e6752d8c6bb9d533b7e390d8524b76233f156760c9d327902a68352e162702510d9e6c9a6ef42fb0a54f668ea7ba8dac102aa6322d21c2d32370b6c2d34b9ed483da5e1c9f72733935a024472167e05640292f3fa3f3d16a660dbc18e42b61dca6e0ae778952de4687fcb146620b9bb1b81f900825784d5b67eec8cc7185d271729c8be89ef89dbedab21880571e4c5e652620bdb8d44f8f01432f4b4b4bc74f944f25d7d22aef3d2801eb98fb528da8afdcaaf2a6c36b800c40b0988cdf5b8b43d3422f2a442fad0b1dd58d5d806eae9317418ac610ce67eeae7ed5540170ded8a0f6c996f659a19c318c8a9df6f8be6cf3c1ed3c8f3ec37120c6b7d2df723d5c41a9ef619606b281507d47b123e8816c959719e57106d49c5eec5203df5b1d2de231949563a80617083e96d40ebe6baaa9e7f6f84cdf478286098141bb50af821f08deda30f1b6b760ae9d29c837fb470ea48d3ecb205ce5f0e2ef683c074bfa7d4b79702b974660b95bf423bd9f94edcb5b44383783979cb8a40c8c1ec081c3761a6cdc70bb7a61ad1a419a69f05a0a924c372a0a43f3a54bb7e83566e181bafbfaf40535a5d3efbfa10142efe07c1c643ce0c3dd91684ca33424d620f69a386b72708ff55b32c6eda1252870bcbb151d7c7b94b48d23b27e4537f7c9d39629bc6897785aafec59238d70f55bae3baf72aae5e673b666f37257c0e2af62e6b15433a1ba6e88f9b44cd80659605dcb9ba5436ce1addefe8a4a7142b68e89b3b946730d1e240b3e138b23cb0035cb66ca8afe75762133548e52a02bb2c17ce280019ebb58502128028631f656418d2e58064c964bdffe377d3e64fa63dae1bcaa5df9713f094685750bb76e1b8273ba0e698f8b49dfc20037e1782e2c4b2dab1e3c44bb469b0ff652b8401ea25d17cf95dcdcb95bdd2d647aa31f5f5f727be768d54a20cd3e1ff2b9ea90e9959ea81bf0446e6b2ce4b118fdcc6ae26d4dbd63d0b2995a22c7cdeee686675630a48db9d2e71e983b818213f1a2cf94d0b44cc039c948f32252deffb26e739982f6bce44d55c1ab401bff4794ca96119ec47b50aa595136d563813e9d5321e6c3b429e1487bdb6f2ca7e08a9adf28c270dedf31a3eedb7cdc622ac9464044fa48c8003936c4d463bb7a9cd4c0b79eaab4f503ee948807c3229176b910222ab4732b91cc5d673a3d050b8c0ea3452d40c56bd8bc476fd5c4f9969f2a16eec777172b3a2dd17d0bf6e18aadaec8e715fcd77ac7c9b7c5e3d339840899128d1b82e6e4cac5683630bf22d6676f8bf8c90b9a4c9a5e3665813e46197b678a17d8c9de32bf9e80992355fa05557a807a548835f5a8c860f63e5809320b21694b6fa8fd210cee24cb0490cda1a2fd6207880f638171dd1c7d519efaf455053503008c5aa48c1555ef1ecc3325994defcbf97bc9acc3cd636f0a3fc067b7c84ce1b23f1c90dd33c8d244ccd5fa2b399d2fea15bd8c63eee8c26934b3793ab30cb2ca1c46219f92d722f07101464b09eb329904098cc72a977dfa64b6bcfe75b7181e55a84c2bae84228071eaea9bd74f27b93be73d6c3eabca54a93574bc414e28398b2122ad1c397a214f30894fd44636752a20f2906b376b92151f9d96bb5821d1704703e2b0b45698bc4ac4bb98562d71c6d644132b985f2b9f57ddbe736f76fd80879de074c97079853b3ae1854bdf200614d3b5dce4182ca8fc4b01b7148c57ad9291ec2db4e9e4e8d715a0d22aed033967fede9e1601cc6c20f37da9707f8b2b812dc2ade1d4dd48cdcb446bed17f311a4c6d7f0a7d22b948fa42242ba81a9a307713a092d2a08835c0e9b204ddd8ae1104e2dc740af2f70f4546d28aefc055bb49d437722100029c2c3d4ba7e71d3064e281700050fe8b6f0185589e3954cb6061fbd303d84f47bbdd46403414b1db6006044b4eee80a470ba9c39432664d0110ae733439612414c656e216f75939ed28c3dc6737689750a4519a733c1d4cf8c1b99f8edaa1b045015e0118e7090893d1802309feefdae7564686b72fce3ccaf587e745cf8e982d2cafe7e654a8ea6038c7659b611dd24f009a7c55acbe9fe3c0e87ce9665052eb1c546e95f702f5c56882c45618dd9be7c07ee1d5c3788aac528d2b39cb690d32fd0d8113def48725d76b55d69748309eb37e2b21efa32cdf4090866a8a51a4777be9aeab54128217034215017ba3c5dc0c6bd2d4c72b0f5a54a96b40fe09b58741a02e6827b96a9e58d28304a69b6c8223756667cc523fa78104cd3b1ca5bac0fb115e2d15d71c49294e5c04c5237aa93a1d03e6c71972d4450bcc29633301aab987eb1794c893be499cc4c2003872b4bcdc73111e68e70952611508ad4a65ef909dfe1709525c7e0b18174e27ac2dac84ce5e8e8b9a9687b846ff9265db90f3c777cacf7e49840c3db331175de6c2f46880ca6c2fb62ec9bb1cda4581455ac57650222830cbd7da85316ea29ada98dd9eccd8811f99ade93c4cb53bbc7bec5b6fa478d4ece7cf6cd8ef5b8b97f2d218b9af2631696015186adae8ce37a749d3acac74e41e0acbc3dbd4892a40270f94f9aff409d417edff821c53e181b943e1ac594b3369ebb9f93f70d04adc4a9c8bb0c2b31034f90f6fd8e915ff4bfaa93dd11920bb9b38298f93cc3c13709d8ba73ac7d52a6c18d69b60545ba8ac47d4830d46c906fa17ba0a8d5f366fb38eace9a66f36e65c580f22d8535556569aece5e69e3f8a2b1a7811f7f02da7312ff9c8f15aff7063e34ef15c470e6e301a5887c73821ef33fadb5e309b8bd83cec99b170ac95e1c4c98b092e6978ef116fe28a92772d4300f0ce95c765634cc80e511b4326c324435fe265836ce8e99d8b4ecf6f13d56bbc0ec864d6d6627f65657760563cdc26de70d0900cd675b74cc6f50feaf40892b5204a21b944547efcb1871c8a2e2c4e07708681826cfd3c5a7d6c972849290f7d2072da633c6572e1f250751d04f94a456bca347f9e241d728f4797f85b10b6d81f5a44c5c517aa7d6a44509b9ba6b29d9ac621103bf178704aaa76d110e701011e574fa2d9b5870fbfe4088816c68daa4b320a1cbfb9db2dd2022f3b5af863f2ac2d8a63aeec8bb39c98342e693a7e2b627c36aa8c1864d73fa06bca53b943b008e054a24218f4f6c9f6fc855a2faac758c2373fc13f1e87c13bacc7b8d9d820fbc4e436140766e6a78360648ad5deb57e50c31cc5781fa3ee1a427a548d05e13138bbe9dfbaa76bd1d7614d59e4032deb07fa2813559281cca8e34af0a71e5363218f76edd21a9eb91b0a13c239416d404c7245dd58d062f037c42c44fe4daf3d7a651d21db4fa580e950d54f8bb13354143974824ca119303d4905845d547dd635b8b565b2873a4f05df9b18ad47ed49ded1515bd00830b11e380819df7183bdf7fee6a5aeeadcaddb134f473bd55ade4fab11ecce935cef800a813f23b6a66488bcff97bf3091c0dfb1b33721348e17e03c11bc83f432ad0bfb73e8da47de638601d8b20faa12fde2db2548b2b3e224c2d1c2f3fea5785772088852e4dd089db87009d509da9931a070c1decdd9d15d316bf1e00f24589b6750199c820ba687502c992fa2f92fc51c4721ed134636c62652861b6c3a5b36abbb44c490319b40fef67bb7639c91bf57d37b9897a3fe82157b5e76865d462963ac543d0359d8314c7f8b5fb23b6c7a5be51a6420b8f772dd20a2fbf9c7ad4511a2e26f524668b5222b189eba0f9f4a38134cfed401e2c4e63107dd4acd9a3f636fb1de96abe128e149eed69dfc9b87fe15dee3c4a951c1e48bf38056dd39fdaf033b4ec8f0afd01040942dd60cfc13ce13bdd3e47b9a7c28569531581e594fe88c2c4796d30a97d618471c2c1df47e2bbe92399975f87cc08e414cb79b73b9040049dfbaca12c9a511338f46bca335128191abe2522719f74fdbbb432b49927c4af0a8e86b7ee956154080a2e5c56dcc89ab27a450bc388123669666cdcb10d5b8d0a78f951a9c232153226f3cdbff93569e1248d806125eb381ed930b1ef1ca75534fe83ada26af594c69fbd762bed92d547cd4eb24414cce4c53c6636e50deafa8b996b058a9575d2e00bda24df2a364847bbc5f9aaf7488c304989610ef9ee26bc99a56300f92a2261e521c27d13c64b7b86282a17aab65591c4b4da9f7a458dc9c4c9bb1da7903aed9e8890c4662bb264d0b280e50e4057d357b2f0c75289f0d5f74883a6f460e8ad0a926cd3adf5e61960af85ccc8ad33d2138ebfebbe398ba73f81c9cf8c9a7b91feae59ffc0fa453196bc648bda2fbad3031123013fcb08992da3f4b2aac670290ceea91fd6fabf573e9379c5c8caa3d6df2e97eef5ca29f28115dba61c95a1668ef7684765115b534d478480742912965b5ba529523307c53cf128e83b2d3d731644aeaf72aed88c67f9d96b80db32dadf1b1bacb3b3dcfadea99916431d0c0ea2e5c7020fa622d5378040fa0d0749c14e3147621e0e516c6801adf32eccf5f0f0cf640f9c40d86638c5269a2384307c9dcec0338f34572acf2c4435da47c71533df80552e357abb8dd66535672ab1f7298bf4de48f60759a6f2ba66c491e2d4f576ee90d6e2209deb927f0fc51e0afbd880bfc017dc4df7cb7e77d3f6aaafe6b2d2be87d67f50b97c5a1e70930eac0c6c8eef9485f61520603336caa7bfb29be3922a6995f1b77c8d77b951abe25bc02e859e1aa9d56335955189e1d85898179bd1b93b9b1c5a2039987f4ea64c0de60fc691df30520fe2feb2c34f7d09d898e7ca0202a6300e34cc44e5807acaa7fcf155c7b19c4ae13c00ec28825b17ea43cd3875a079ae79ae67c3adc0b8cc5742e37528aa84eb559b4cd7b7c501f5bb65ced465c8a9c0172aa744d852783733c48a4729b82212b784333a6677f366646258a143de589757c66b685ae65b8f88fd0803a544b4cd151a8420d4b820e372f31e144eae8d200e2efeb31088500ac3f29720bd88b5f978b55c3ba32098f316db3daf2a43cd6d5d31ef28232d9c53141b6edb8ad00bb27433b7a34aa054d61fdf10fe57f6e691ef1fa94624ca8f679822341c60152af65300001499c1804c0ae76b2e222293ae2982b0dd460221062bbf04feb1caf1fd825e5876425187b6744e90f6255211397bbef96fbe5b24e6683bd7835c188adbc3f72988daefd42218d5001f3d29b3867456b886672379f4b31b68215af24b4c18b8dec299a4e745aab659bba15ae5af8d23373453babb4b22c3fdd377d72f61ae553794d281f858ab061c1d17e7ee53797dcc13577989f81b6f64dcb3edb97d8a0c480cfb66def67ed117aecd8105401f3c384c5f27c3168ac01c48dca42ef205a69cfdb968d6edd5210910730402746d8e332c29b13b4579180dd8ae8d528d82711ed2ffca44caa537b599ec788b8f16bbfdd41da6173d647550cbb2c6993bc66664a017af8bd869f882730b3d41274b9b21bea6e36d455649536853d8a308e9c1bfb357b75132f59c2101251a73bfdb24a4967d73ccec799ec945c4251eb98303ee0c5363f038af9d0540f79602cd45d97baa567a644f8e0ce2feea5fd43e87252b21207689969cf2589154e496848994838dca46a26a1fe07ef77d37b1c9cf407db9acbd5f0033802bd4d7a00e0f12c10802b5779b4854078787f8f481aaf3a5ffa4b12af5c75a6d8e412dc38701ff7b9d633116c5a148efff72cbe3e2227bbbd3d686acbac22cac8d5cdb315c57d1f2424185d581acc97471c8d2e3197ca84ff9157159c385056be3315e9e0c7736f7f3f0772b200239b4bb8233d44c69ac213730be1425d57b267af1fbbc67d6c74f440aaf07ea961917c57b12b13caeb2d19a2157b67237c376085120ed7dee91234b7577a439e81a5497c17c75e70c5bbd73c97ee55f1287ff2de4b6191c8882ef56b0814e54da0a69bfb61aff9d22378310750fc965a0b52cb9eb28febfb20b347d56eaee48c4869a4506689d32010b7d21d82fa59036079ba7ee6fdf62b27dfd635d570e0b1f17b4f2f716d59a6f8d5e647c8e7e6d48431a26e20b81f57e0c40c916e9f17f0bb98ecd208e5710cd55d748d22d585c2e125f555c391d9bd6db67f9a50926a1ac658e089dd3b19caa3b7712ba62b7b3d5165d69d58d77427a813a6c8dad01e6943deb66cb74f723fe813c946e55f18e71872c1b1a0e8a144c98e24ea6b3fcfa787b193f537cd3349d9a522c2c69732e608c2ec346b10d9869e9b2cb23742f133ba2f657ae3c383b83a6b4c350a509c37c9fc9b3b430044c7117591cbbe802edb9c9997a14abc717740e6af503b5948e09b7723b900a22f6de7748400144149fe30ad562178ac80518e1f4d8172792ac211156e7552a5604e380b06e25779e74dea9d137384e49f27feacff32179434ef791eeda7d4fa2a7271a85fa18ecd68edfa4ce4f8650b4c5fc13705f17f4d4b1d7feb06ecafcdd877eb5989fda08192672f824233bd3281834fcb855fe7dfdb2d8205cff353d8e87aa9826e98db268a44aceac4fb8cca7d7cae8e93e79d34eacf53e6401117f44b4d1616f9397f1d599dd5395fa53e21bdbee620eed9a0e70eaae423b0568aff594d8098cba43614310e21c2c86f24614c51a4ae340d36e9a4ec3b9af9e94f99ef969c2910f0a28ae48c31086635420ad9ece1147b460091c97dfc96f4a635ea0e66aabf8c900edaa536e6848de5f00c8a677cc23b4d290f62437b41463e1196d001693d0f6333259082dac6de4de5cfc583d11ff43be8083e3278ea874fe123a20feafde8377d676eb12205a124be98451f40f161c351c2f8a786e14fb359785937156aeed01e47587e8fbe057f0cf83a818176faa52c9eef2c868513b72bb3a211b048142247e81fcece0339d987cfe263ac836d207c095db105e5535803391fe449ad4106c23ecd413a9347d744ea683fd4387095dae2466474dfc7a236cbfe4256d00371168bbeaa3998e4a4b0cd84e3266fbec474d362d84a9e0767561faa287aff315a46e82ab93225486b9654f0866ee295df468b32477d31f810f9350fc9816033594cc196ba7547c861d588a282f486f94f22445e96c6acb82823ac17595361cfc6f49ef9d1b949c0388ee1e3eb83d5af009994ba9523f4ceb6ed57f38eda06657d3c4da2b5ad4f114160212dc902b21214d20516196667723670dbca24b442aedcd0d488d966a69ff337458a91a5a866888e08fce2b08450c86bbf81ef9ab8f7d9c28025e042e62c541aa782d3ad90a16ab1abbb79773b1a8d921791c755780aa88e31c7eddce754dd21ead326cd4f50b917a0e0cfd5a0d1fa78826ea534fc77adfdde6c5712c2082179c5009d56931d4b7b129a8796f9e87219f437fb193f92db315150e300f4b7393a0233cb32aa3ef17636366a6ffc676171959cb9253a6648a1d85bd6bbc3ec81a02b52a765a2e06dfae060441451ea2541c97afb04cb2a54aa9a3d2b948819f08756a6aa7d92314ab3fc58be2a8b0553f541e01c620865d23d7859959beebe36e8e7303cc0d9064132b3c8eec997e99e039e9d63169f700a849002965a980901f518d714c7fcf8ae46cd3f0cd27d2d422b87876c50b63c8670ff8e47c8eebb587d20827fe3942b8e2facfcc34909fc9f5361278e84001753193e01128871a1ab0d2615d91301ceb94d3cd72f9730e33f55421a16d0b77246906c9b1e173527c18d1839e6f9a10a96981f3186b1277c998fc54b1f0d38d89bb3b1154d1472675614d5f3f21597301e92a2f1caa4557ed7135bd84ed13dc2916d3846c73a3b043da1a85df38f2e1f5fdc09627eeb911ec06f2dd89c4bd6c6aa557e6b47cb42d3e9eeab173d326700c7cd00042b195b87e5f476a85892157b4aea73e0de79775b1d979aa03d7bad419438bcee73017c31237697b6fe8dcd224db8c74282e8f191ba1e8d46fbb0bf6beaf8fde4dcb73c6d6d272df78548f346e18fc0799cb21d5b87665a748ff76186c378aa5806bf8fdf80cb06e6b5879a07c4eaa77e07064be7b5c551528e111d7ea5f409000d1acf7203ec222cf85059507a2fdb1600a8441d322062f7144314ee27bdb79f01f1120d405b36b339c7d7e74c099eb761067345a8bcfa82329a2cd65f6666dd2c00a5ef7af9231545a99ff7bc18da07ca880e3df58641b4108a4a46605d614c365adf3e32148da08ef8e3fb80ded47f5b7127ab0d491e51eb35382028e7a970a2c3f3f8f85c8524f26d1c34e5e280ad36ebd80c2815aa0f09f60fae635803c00d02811ceb2005c18dd8d5358a4d4c7f79cee9ecdc67bfeb92a1d786cb76c8fa473caf54742665f73e6a31a9ab4353e20d8bc138832491dd83b027374783bacaa7491d0db69b254ac1197dcddbde6eefe43ec476d646e7e17939c54632a1f5a9efb420620f3d3d0ffe8f18a64d2241648a51a694875571391427e073b92cc4c66cfa7e851cd729ec0c7f00b8a21a12d25bb64c092aa5cf635c4bac30c65d53227e13661e18ada16d8a4f799423e69b7c7184cae9f6f9c5c3100d90cd5869de3b248adc3f86a190a0515453eeba41391289d9464efde50d674ad3100e776f5f9c00e7e636aac8d393bc7080513a80e3cf3c145fdad363e0bf266bf2051094ed2426fe17c2d4444a1f168a927c6c0a79b77106f92b99d1ac09d94a500fc43369e8aa2ea3f0192a5cdd7f9d534d6822c6ed24a3d3d2a6e16736acd990ffa71b6fb5616e199a637f92fefea91ad36e736741118e1595d26d709e4672f55f50d1dc62b17179026550498c5fba837b5c61c433d70583ad5188def2f090ecf896be54aea36bf77e97680c9b59418aca4ff5e52e7c3020019af8d0096e90926c534dfa7508b5652de632ad77d43bce3a68ca77fad1bc4c3e2a088dcbf564de72e6ebe52846a64552f6a6186579898bd1101ee9a851d0f9ad1b8f4ad3db3ead51e92f50ec3437f770339d656dff1e4639a1858647d921edb69652c23b14112bdc001d2d6b47fec3bc8a6cee463b3545b22bea3589097034ee1b4f7cecc48f4babe16cb1557be3361162456adbb1bca40b62f2b43afa01ce998ad496391a8e8aa69c81fbe9cf28094b54f5993691c7e169e5c683cc60e282ff0ad0b99041f7c1637d1de91de1ce40df2d2f328e327ebca4a7613299c252e8f2196debba71e0f2df13bb57fe20d073ac440e5941f8b0490e0ccbaa1a742ac916c2ef8243caa2008ae61ef52366f43c46a6ac1562a81532bbfa615f0e1e6d41b31a1c36cc13791de6f05e3300bc50c0fee4758defaeab109a6bb6e05d7ea31f184e1fc78cb2d535f03c5586caf10074553f84e265566a0e47d7cf4c62e12957b4c416fa95c721d9d8a1d6e4fd3dd3c81b734efc4e40ceb1e22cabc1636ec35d49350fe1edeb53df5be0f0a321c7f6527bedf1f5b1132de7201d895c054b48800a06834f7f8536c69b7768b2381e320ed3b61f0ad6a1e579a9fd4ca4f61488e351864c87dc6f309e3029f317c4e7e5324b7ef02007c68ff3c87ceb0614f13cfe3e9b5d29f7ce59e18939b860248b7f641bd27bf9442ec38a4b3bf0ac6056ad1336896d73d9db584297015ef06cb56c0f99535d92fab5e04e3a5850823f19615348e75a80d1bf2a393510e5c88da4f3a9f9180e3cd2dc92e4312879ed7250581657df276f23d9b5874ccf1eeaed7d05cc88ed2ed38e82377bb2b9e2e8883c0f292fa54a61aa10b83f1c6aeeb662be00d02f49a1b480b3b35969fb43f80ba3a36e8fad93fb50a841773b9fe6eab6eb09b1decb6dc3e3eda10e93bbc2a94a390bcdf5957c6ac27f9af0fa1e8370751cbfed0ef2e46a544594115e3da6f593dc0a84ea9045c7fd640b7c09fca6e1cbc184191a17569386928b11859824002d3f973b0a7f8dd55b2efd17612bd44673aaaea062d528041c9a744b0a36970bef07bc319d34e2a8c0185070201ebc5beccaadf7f48793e20d6b6cf98b6142d71ffb5dc7184d2c11b67d3d1d601b9d441928142f187b0e39c961ab057dd6e8e9c8267b8b89883a3cbaff1eb84fc6623915bd823e23ea74366d92d17201997bc21580b471d7efe27b59f7c79b6a0f64dc10503f17c1232040dcc753ecb9a91f8353f6f4d79e8764514c162a363f312a8dc42b8e05d6bbb222b59ee362a140b4e9376009cb5900fb9386a8e76bd4b5bce187642f3bf9b012f98472afd3bc14bab39954ed9736f1bf4864d56e362fc31a5b4bc7aa7515fb9ae61234b246d9a159ecaafa94c8d858cb154d25118f2b5ce9fdffaa002a9a3018b21a7700e581564b7ba40f82cbea8b9c837450b1f6fdc6b37cb40ce30bd3f693fce99d68680a00fa9b8d487896e606b46fc1ffc4913782ccd180d2a79b31b7b0294abc1a3866ca010fd1dfa2e17ecd66fdc80b44724034f2aabdfb4168dfd5d326bad13a22f87638534a0461b37127b507c3de287fb43ca9181cec0ac015fb048274958bf0b82fb4f826e16cffee37c179121e6a38831975890cfd12490b67b50fb90df07479adfe2df7919244053594f88f4efa550f6049f378c6666d2b16960e1f45bc583da9e8110c559f37e605d405653384c9d3867327de5dad0d7a9705f2d91332c66f9a15ff02875dbd28ba4df11ae0d3fd98bd4307c46dd7851aba6c6a7878de8128ca724547030bd6ddd13b655f23084321e3542a4172aad0b06cff2bc29d5e5ec08dfd1aaea3f6de6ca31aed6d9e690f5daea4b4252885b70922da87cea35bdbf368a00b8ab66dd8758e70ec59e9767c54e16b9fce6e51c017b6642f597d1247dee675882da5ccbaf2c8a8f017d48279c3dc4b2a879b956aaf364fc4b79ad40ffea61a0aa21510ba66572dc1beddc009b1ec9bb5e800f6c3095e606db7c68aa091585dd5a9655a49c7fabae9d5af8964157c85fa0014a7fafdfa459678e4112e2daf1e2c14e1f69a6a1a017ab499cb923f9e4f3d08af7a61153d8d833041a3aef681a744fa159be3ceeae57a4798a2719d8d51c189690d4f09fb99c3f43bb4614cd51ef27e20c27fc72ee1d9594da59c6481c782d5d8a24e819c74266611b3a5fd09337a142f38cc3cb4d18a7c0ea2e7bfa5167b2db564863844428d01833f17204e2403cba5b5f3adc48ed1b5f107d4e2f33e992395a31c227069951070c57388b863ccf7859e38a3d5ab2859c8209356e6d5470f95e0100d0fcf7893cad7ea46f84a05f50e0d5601859d0daa5f84011b39986f12889fae5f8d37b054687fa55dad6633cd4bc69b06d4170f3a6ca114092c37678edac2ef02f5fe90b3c4da6f32f23a2357fc7de52b0ecc47e1594b29f085a13ed88190d2ae35901e8c4d1b03249eab981e1de6feb1492db521541925ebf800faba14eddda5afe7e239c50d8d75e00d960e70211b3c507469dcdd31ecdf120e54c6b199614e756eaeecb0c30f29243498841fbb614e395f93e2315a26a2c55cd5eba19674062080ee05a82d841bea3f6dca52efe57f37633bd5a99de81d285e447b23b1351868fae96f3d18d2c0552e50072c56a15150888a082a9b9c7c9172724ca7f60929cd833debc94552b4d7232cc6312c527796c12b5e4a6fb417bab6632df348c3b28ee5ba3ae3ac9d08a5fcbd85423607a3a57c65f68fca52a7c908f513165df53fc19b930cabbbc59997e4d60a7adc6f721573a8a48e698bdb0ccd06fd457d0ed60b907926a53129c6292965ea1a6e7f518ae180bfb6d6e89c6bb5f0a8e6b196b081d373552532238c8360db348f9d99d65bd4ecc7f3ca477ee2164d6ee3bca12ab957b8630964776b326f84183e9b46b26701548e2b68e272ffd55b3202998e17920181e2586222c3620f44411642aaeabb1badd4413f33170089fc6ab2903beb5bb79519fec33650809937fbf448bbb52b4b0c30822087daee08570bd2a88898a7c8a561ac7f29fe0ad4eb2dcd288829c6ab5971eec5012ef3e46c1fb8737292fdbb67686cc64d84ff0431a483833ea23a6b0e8eaf6bd03797b0aa6a7e14db561f64f119e57fce84e9d350a54efdc1408d6903a8e977491de6252376a31f3d9fc67d55a27861f390d89341560fad912fddd48c6c07bf336aa781933191d2fb11fc884e3770e41fbed24815d215a3e802735eed2e6c07dcc5b49f9ca7fe50ce41371acc0a04820eaff7f0b3b3bf0c93763a30f29d0010912c810ef1b43bf51530a5ed907deec7a32409fcac437be7b5965b2ac9f801b2bf97ba5ad86c7c27352c9e90eb5d595b7d9fac9de08c72377d5a1840933cf5849ac3c3535feda4a94d1f40dd7fa925e3385d28f3bf46049d66a4bb0bea0f32f700bb3cc644c1dd9b9d15d1f6e68c35726c644aa89be19d6ab687450fdfb9a01236b37428b9e51003ac8a5c2b02a6df3ed8383d547f3956da4d34ef4e773fad73fa69b04763a359f727a1d835c20f50a4e73118e8bd66287e5c4a0adcb7af297ab914d9fcdf13565c5e6326b1c10a3816b2cfc9e838d60f73d77f40af67a96f33466fd61130780100d9a6b01145fa4c59664ed54714c822ab8cd467b83ad95f88bdd62669a5b0ca129f7afa6bf8cbdfe1bf707ac230bff4f39cfd693674bc686e82dedcc14e4894deef327c03c3fa8624e66aa7b58140d1140551c4606eedafbaf65601d1cfda3b981d947f4d8ade32fe9526b138b396dc14faa76eae30ac99e7dc51dea09adadcb89fe3a82d18b133335673a08ab7d885001dc3f9a0b48443e49ff631e83f4c59d3c5f15dd0d4813813ddedeca9e1de19b7a1d3cbe62d750eb6b46671eeb6d6ea771ef80302353b6fff585bc7a6f6fe66780433832499e427b800b14804dda830099cbe9b4743b95839687a232b40c387899736a821690ae9eedadbc02904f5fcbde3058a17e077ffd4d944b2273bc414a17d91a222f29d2715bfdf0bd296a8649ae5b1b0a52f91bc151399c84943f1e8585f92b216525f21fa14390368cf91b9f6a03472ab6100632b362fd9bec841280bfb39285ea52a7972a5a79e3879805592a72e3679e857458da3691f5ec144378c41c9ffe31c899b9f725118cd1ffb86c627bbda0261c119a2170a3e80be7aac25de8ce3db28d03e45a1f43628338ff138821acb101a3a0e2f5ff2767b74fbfb27155c12b9964c48117c2eb7c583baa38efc0192785b78df2e5418ec399f18e1caa29f2781276dffe67f1276b15cdf2e4acbf5d647d8dad3f594b721f4abf5db46d45b1a93716a6195ad89fe57ccf363848898fc90fc3bb8350f034b29189618752209f5c4dd23622d6f9dbac59f1e5442b435874b5882e1c92ffc7cae3e0c6e264bc298b371f7a743007fc296324f121fc891762f30ae25e1bcbb84395c0e693b45997ca14994d82fd0700e7f9aab07ec565d7e88d102bc148d38a94bb05f7335ad980a4c31219f6e8e48b2d1b9592eb9c90ac67ab694606734b3c67ea04aa510a5311a342d1a02bac3d5ed2dc48ce487d3410861966ec4a1eed94b6ccbac90a7dfcaf9d92e958475649f0bc8d5b1e20972b277b30ad5085e1c1dcb0a46d815b8ad598503158650efc70b4bc86b632da861edfb726f6ad9dde932813903ea92edbf2dbe5d4a2e0b8aa15bf74df540bdc33cf5c6bb10c16c8cf25ba07bc51055569011b755d539b495d32305266b4216f5181137780b71d6c9e1219297d52ef53d14df7bbbd7f2cbae4cc412481053cd0a39ac48c02b40e177cfba7119632c3e8465aca1fa6d28d08a7ea957712a302a32c6ca5784f90cd4d890644f3ff665e7810c741cb52452e3a43d47f58c1033397bf26cd9f89f99f86304937d5a4ef19d65312c742db9aed96e2bc138373e4ffba067901bb99bab4b003949e8ec08e15caa941cf92f56882dfda451f3cc33c893bc20d3e302508dd64c0360cb549a101aa24b6b93a6aafb3909f9d9df3a4709dcff29674c25e10b38c064b56f7206c216e7bb2afe3fa446f2493bcfa06bc321c3e9aa193424f753c8f5fca5a0d81ac55266466b34946f19e6a82ee86aafddb3e8a0d4d668ab1cb0296a6a8ad98b86b24508afabb26ee34a24b3802c1d20eeb667b3e3ef2085400d88ade77a7e468d02052802e05a27fef437520df35cf52807a37be1df44080c4a85831f52fbb64143283165bf229cf9f2cfd1a4fdf197da5ba0a5a4fe662128aa62ae16dedef44725d9fcdf57de563b8614ee14ca4d9bda96521ebb009b88c1c78640b9de37d4b208052bf027a6b043fa8d103ac063a62d7ecf5a329914edc4e35ca2dfacc9af00251ab60f2640d72c706ba40ddc33702b719b757d34f727dbc532f27a3b55fe0120829c76437ced3b75e0a0c21d11156f204838dc7b01a109e64509fe3f5f14210cc9917b2d5994a6e131037cffa54cc6141f88fe94a60e5d4b319f5488a9431c189c2ba13858f8e6fe8eff22d136f31a3a22749181245c2fe98e8e19acb13a3e35da3f29af37c4a4354174bb9da49e1a63a5c1f77fbe43984bd588e2d25467a8c39546c1e06ec1004a87dd9f8b721e77d043bb94a4e5fcde9d98ae05bb8c5b3d5fc39a032c799b928d1c41da97b186e3efdc7ef82324468839b9cfcea65bc3c477b751e3eeca14819f737e5e8b818f1cd6a03e7bcb61236fb605916310347b7457b3206811782e7db615bdfb059f6785864c32d0e32da6d6b380a47c25a584f3b2bee0767266424bd0928846e414bbad542bde53ddbdee339c19fa0dc30185b2632fedea8ac428ed35e17336a17a9b29f3907fb09f281ea0926c7616f63490fcfcfc247e60c242817a329b54d62ca215a0a3d1b75dc0058a449917c69c3467348cbe546c182734820ea29fed8bcbf211507a3995a5aedd5590ed4877c3ee0620475f4f9b21e3d6cb350c70c7268ffd6c918a9344c89dc2357f9371e053e28f5642e61daffe47df9cd2a3c8c639cb024b188a71cfbf156929f7496aa0024e2186524386cce19bc2d3db4eb240cdb8d2871c1243750cc52fc9aada42726f4ef7a6b0cc65151b478b6e328dd8547907034fb38bbdd0a47967eaa685b8ccdfa2f60d43e13fbb20e62e3f648755a0b1c9842c3e5314c4e55347b95b27bc773377041cb383177cb59f988ff01502335188954cfc0e6f93c7f54ae9ae480cd5857878ae29041aa832d2649eed01e11c08fb52aa1f200c77a2e870fb5eb723e6fd24090ea828113fa30726d433d69836b006086d7f65e20ae73e4ea4675d2582dc9437071d6626d01e08f963166f7a4cc1698593ad44bdd483b46b97da287e6427d5adc88cd58931840a36af32b57feb5835f584945d5d6f3e0d04ff05752830dfd8afc944d1f3e3ed59ffb1c7ffc24afd1fe86231bb708f5f77e105a5460a668da862d47b01565032fcb097d665c7b042a132f78b2e4b234324af64c45e57bb3772a609ca90f9f62174ca07348eeaba2a49a61d5051b4a78b074e8da8ecadc43dbc0202920fdddad33071cd825db9c189ad953fc1ece5a7c9879713ce6de18d7a64565f74bacd8411073490b4efd3697b9ae6cdad6aa35887e3ec0fbeee4ecdab1fe3ffd30283110eae3efdcd5b78ba3c4c1fb98a22aeaf4a67861eb1af8fa27b1985dc5cf2594bdf4a4ce63653cd2560dac03bf64497cd933df76668ee526ccf4cdc6f98ee8375387866c19485917699286418712f5a69618f683c4d968b3646db9022c58d41e88582824867cd333eade87fb9dceb456de38ca2ad041bf99c796fdf88105e7d3da47fc2358b77d9b26d6fce97f2aaaecfa9f5ae9639b4f9efd42d4081e6a02776841c338a2258cc3d7ea61de3bfef3ea5d78de6216b9208cadf81c72fd8140ff43c6f1e96d1601a55fbedc49705a192c872f89d77c7453dad2b26b42d793d6ba3b697232e7137b4b19944f7bd7e48d7569491c1c7b064e7da0374cf64fb0ac03556a026239b57ee9b1d0e63f4f9861c91c1e4db98019c11ceb320eb893ed79235a7e94bef9ebe16077882681eebdc3de364553e7dbaaf3547d9401aa74864d3daeb88c0b524cc2828545a7db0ae5bef97e49ff1e1d3018a0fadeaf03ac471780932c3ac4d5d143927b3d191ac39dd8ca31a1ad7d2a891dff3f4c00d5418341bfd0007846f719805bc8a2f4cdef6ecd809d7a1db8a3be63558ffffd80f67e9f2ae6f4ba48c4df119357fea83e004db390f53cfca7d3958ed6813ed5182902b5f3224476d5fc59c49cab7511851e399aeadb8478fb7ae873c69df8cc9bf05e62c62b866419edb2a1f437e9cba675c5ff3971369afb7be1f38e6d0952d181d557839d1ec449569a7e8eedc89ff4712c65646270abb1f94efd4e7d28cf13f807493d70f9eea762af8c528e51c9379772b150fe8be5b55e10c38688473b1461208b17c3114f6394d02c8eed29e28d673e6bdb69939672e9bd543ace121a69b68c0d9dffa2eca070d91ccf52fb6cc8e00ddd77a17a996b7ff472f242fa3ee5604840176ce9c3b1cbe4c734c097b0d6b4859f4529dffcae3ae09899e9bd9b44926824645eb78129ab21a88627bfde9ef4b95f587c7c4121984aba9845299244c39199f93fc3a3899ed6876c101e5706f5f384aee90de55b732460aba47e7137d80e943cf415ff2605b0d5ad51334d893da778cd5cb064ab02ab1fbadaf92cb0c502832f587adee500035b7e756b200a4eda3c77192772b6af5cbf2978acd2cfc6d31a0e0d1dd13ec3e809ebe5ba9efac7759c7c4d03009fb1a638a225a336e18576a1f9d9f9e0f79359fd2e8b6d301c18c150e1f41ff2ed90a6d4f1219c8f6ed9e86d8e48a3dc018796134f76f97ab5ba034631ec9e6ab15c47171f7c37b9d04b458c83bd1bb37273ee6a0cf555f367c1689c84dac1d01db268a62544a72a53a7b27324360ada8daed062c436bff5f85fd6ccc27ff8ff13d6092fdfa048df7c67630ba0b141754ce49faaf3d8d389ae2aa5ad6dbed813c4276c13f80f8571e1280fecf6c8f177dbcc89b6e46d92f260a0e56c39c27aadd4e15bb9a32e180c428c42d6fe36de3948e49d69b84985a615c98cd1430aa015f67cb82a8f1bc1df6ebf8c2fbf7f08feb40375d3ce6aa50dd9f2a012b4c180be629d7d6c2c298f1993db15fc79b98c7f828fd12509d26875271453a121746acbba535147e10527ec69741b70c638c1ab85288ce8e43fc4f4cc458db4e2cee2ad196f73453c3efb6a4fc8fbb590b1df33333cf9ccaacbf2bb5805265ee6d8ae4f88412846b2ed877dd5e90af180486344b59c84ae25c5162388cc8eb85a1f5ea256a6dcc5847c99e7e4be77df6301a4ff834c8d9786e82aa654b34cee5afa2d423717966dea54fa696b2d4b66108404c3e5dfc56d699de0777c34dfe38d1d33307edcf0d476cc5e5cd2422b8202269ff030d82c2e6ed2548b175ae4c12131d2fc031f57eb7142f31a548adc4617402effee550e029e5c47b96516888d6c96b48a7d98573d7374f00d6a04e9837789c950b3af406376f5a9975b17cad64baba8998a9567c42b7561d5e6149c8befa26de3ee4a958df1dd8c6f2dcbb84e21851976b0d8c842417259756aa64c6717f5706c160a417a0f647bb514a19840c3729c651e66f08a2b68c6f09ed0e8a4c732108ce375824f1d96a0230d1fea7455a54be8046e268cdbcc72a8aa2d8d933681ebcfd0e1ee1864a5eaa87730aeb99a6f857d66bcedc6546649d945696421b26566599b811606d0ab2b272acc21aa02b7dfe047f88a06388dc17191d8354778b55b9eaecd2eb4174c8628a059fe0c9c5a8fc230975cc5fdb6b52fed382e6ed79a77905be735a05eb99e08257920e5e8e20966ec4a853e732d71c7f41d39e6f4058db1c9b3ec88412f0d3a481b1909a51175943322aa85001d08bc434cdf7a26dc3bb4de8d57d9926509f5bbb7ed4de7b384de0a98951f1bcf89d85a59f4b2d40075aec6b57b058db38f85e501cabd4d642d141d9fe3180b2102f0bbd9f23965259e19f3aba02ba197ceb1f29ea0fa6000e4e285175595b8dfd1bd57c3fe4d4ebb7d74aa7df6d7e6bdfc424db1189bf01c723af3b65ae386549affa6fcdd8f138e01f3ca63572bf49531d8d6bc5b3ce79df0f99737260b51f57fbb180392f71128f746e1e4ec93f53f8046dede1835af331fd31c819bd038a85e0e65d029796f5ecf380e4e2d12048800b906993adc71d86f1b669a0fced90c26710bf9bd1f7c8211357a0973ae6ffb2ebba81673112e8708c45b4b4a5c6bdd18e472aa03675181de857dd76e342ee16ffa2d8171aa714fbaa634afc9f82e299848be11d16be81de5945b5e6a4bc7ce6a7ea0c28cd274c16049f5175cc2a7848d6a0d3a41dd2301b2875ece3ded390ca64808ad51b4c2e136f1bcab3d7d37c0f00fbc5e604e36831cc1d2e3c3af67fdbb6d9aa1940dd3c86d4efebb76991e6f0929af2823de0d5b98c523bc2a571932429d09e241a91c84cd5716e3bb11b8aba57c0eebd0c6e54db0a29ae1683190667e97b303b67e675e37bf703ddf4a15426bb6a50aabb500282c77e71699ada24fc177945d774fdb7d2039b5b8eed80cc3d6e519f4b611d75e2ef8b6d9bbd827a766c970e7c51b99e9a76f1450dee314ce4a69ee4e55490ca0cd9f5b9729f6b6ed50a14b591cb3f04c34888c6237060aff7042eff9207e861a92436962f19bc6616e78ff44ea8a561ccac0fcffa8ab31461cab2307675e188387350ccd060bbddd394375c733c192759ef44699483b8580cd6a161df5a1819171de342eef5da8fd3eba51b2292bb9ef2b24d4ff0d3e0592dbe1dffd23a1a178e3a624e3463496d6779c3c95cb0bbc08e6adac5a3c70d9f960bb84d03a57cdcbe28ebbf79ffa4ea98400a3df94eebdd4bb29901251326cfb0186f481b0bff322df38439f51dfafa5ed8473c9ffc1edd255ddc94cf71a089845c7ce7c18d7a988cf838ad180b16e4076ac5ab9bcff49e9aab910d09faed10b697545b92a603ce1f10247ee3e75dc8989c1ec15e828a9178c9241ccbc00bda2813dae736e94ba4fc46784662660c22df20cb53383b597422c22a1744b091d7da4e4217b762aea71b5866aa48de191d96cf650472d9c47ec6c114338ad40156db06d8813f771caa0cff5a0f8baa2e025a447971e775f34d3daaed7d9b77a2eda9e2644fe8a7d50b93d064f421961ac4207a95125b06c387e7c260e0a9eedd1f8073f87fd8799ae5f935ffed36b2a98cf5c0ad6e34a0aa78dc6a705025d1785d56b9cae7987ae67072fb0224e84d6193942dc97e26e55e301ff3889a948215a3a5612430ed519ccfc34212da48f9ddefc9fa98f0504c2fa5ba71c5f83cc3a319e7e5c7fbb37a98515a4a651cf0efb31fb3fe768f8255cd94d7a1f86e18b2548a0877005eda3c60eafbae8c952b8ef0c517cfde4d034815fe823733247172c97446ce48b9d04eb4c91ab680d052fe02b62c07c216ccf8dc804a6511ed7cdbe8e49651cea86308a292fc217b5a4f1f59fd558460dbc730d7cc184a06748ddc0bf1e0e2d2749c684fee1e5cbd5626f11b7fb153482361e57f3e51c97cd5828b968c0d30cb6bcab45db4cc4fe28e08275a31ff7e9b2759fe61d9a9ef3bb796da0061182d8ac411fb870646591c0dd6a90d6d72a6a713125db3958a8c1db99e66991aa63534b0eb8cb6bfbf1138f5d3fca8452f8c9b837aaab763b7b817184e11e7d9f77d7beb1789421a693173f0d1ea54be04cae8c08a8f48e67d95f44554a2cce9be6795e625061c7154bfe8309cbb5b9584dbb163f3f22dbdc4043dfca98c2d3844fccb61725fe326fc9f101475602684f9b8c292052b6bc58a15767768ebdf33a75a9a6575124f3dc98463e70483ea71851a32a94e3b52d7fecde741fae99f4956ea60f367c354be29d30c650eeef5baa6f8594e4283103ee50b856eeb5a6b8f49186b1db0ea675fec50fb1a81d88bda700ee1b396124be11c43b64ba34c3470c8a1f012bc82148471d8e9428b4149a6db80bfbd6b2f06862e0d16b01eaab0cad39d268614b944176c04dc7b3f18c0ace0b0493594332ade02a789d553cea7343f07a5a84a847cb5a1d789acc506c79bdae7fa0768c21c0f0f30303a67710dabe8faa95a50d635c67b9e4bcdbc764f95a3d3b19c8b56745973a7e76eef4870b6e3b15b82b7c89438be188413c6ce5aa68add54152848e71c7d78566adae1fe9e35923a2f279464aaf11d70e31bb66c0ba47700eb856b09a685b948aa5d04290a1643b1da98416608bb6937bbac099ae21cb286b477a597b6eb9ce59ac8f3cc3bba8a3614478a866517c8913ef12489d92994cd32fb0f6ea4c2eed1a3488d2be2db043d7c2c89de7ca2bbb2ac8a5aa7a8b20ec345001bec30e03b169e25ce3ebbf52d026c9bd457dcc8501a220e9c522d4dba339b0678e43f2d877bde5a46b963d8c5b8f477e46da661ff13b7b45b4d1fbe6acd5f864d4dc084d30610d6d63da2dbacc999a8b9386c17746f162ecd111f432e0651fd9e389e01b0eacd5efbd9e325d89ff88688dbdce714a9d284444bf9b6f74750cefe325b5e4af6db8dbcdc409dbd4e6b4118c93e4dd80cc865ff9de1d131ae520c61a14bf6deae4efe1bcc5173be12c1e7f85e87d34fd4962b16f6ac1268613d475ff7d61064ede1e47d04115963c556913a7a3bc72529a126eb478bb2d4500675c6aa41a661fefff2838a2f2a66499597295bbc7e0ec595d8e30b68d0259b6d13e1828fada75e02e071fc1bf8841413e25cad64e8997a1f15d75ddcb3164ae328aa2233a0ea73ee36fabbe0b37c17697ae1b4591cc02962b2d5417b73369f17de12d14c29965e28d0018fe5a444bcc763f891c20d97b252979006772d894f3399105e63b7cbf7c0c054f4a0a61fd3f44ace0c7f2524d1006e337889f29b3e35858bf0556e1fe20100bfa05d59964b18df3682bb9c6e224d30a57265dcb7e15f2dc1c664d5941fd46209b0bd0c89a8f78eb0f94a8fce1446330d30ddb745d9badb5787833fda24427555691d2d5bf76260398aa76bc3b4d5d91fac33f5ca5a171dfc838adcfcb89b467c0ac3c1cb6add8aaec50a2cffdd0517ee429ed04b747c5e145b08aeef0b5cc85bbfc4c07c58a176b60374e2e203dc96d3af22692af171b51a407f26806cdfb5283150c29850b66eaacb60fbcda483e3005b6c797e6192c794e70bdb02e5743720da79c1d1413c7f923a5c624d3c7dcde33a32c5b13ee031d37cce661074ad9b0864ac5c7563bcc7caf6e56ee876623c6adf917571cb1491918aedee9ecc8f85bb06f57c9b7e6a66c1f7458c6e08d594061e91809614f2c9230d4190da08e68450a6c40bfc2ad5bbb4b6b4f5720053cc2880aa24388135a9a870eba1bf468aefe231f1781685cfba0a1eb569e6cfc0071434a85a74f6df77674a1fed801345471fb552ae0e04e019bd9958765ff36ef25b4091f9c3812794cba289ab79be41390820ff93aa9d33fd8edc236e1d2b5abbe781bbc166fa051c37c625333087c98d53828fe357b0ec43ae609778562e625ec63dd1f1bb4030a901005d7c093359a4f37e3cdc5f901fd4c6f9f2ce65f4381ce5b25d9c32479c62e78b63ab8a4de4be98961b88db330a96771211d93251c755de035f12e40831893824bea14f32fc7fdebee90f7b94b59df03194b0596407b79886000fb7fca439ff473f5c156eab6303a3f9e001b81643ce17ec27d786ec683107dc4a07b0bd63a7016561e06227fa1df9881199f934ec60aeda3f5485dbf6bfe842ec2bbc18b8c00c16a25b7bd68abf2b058ba9182af11290673fdd3acb68b53bba1b4c7e80ec54fc54e569c1e847ef08f24de956db311ad9e8a4fdd713b46cc98212a196beadee62ee36ca8826b0ba9801b3eaa333b5f2c37715ab60385f853ebb89f3a0c541158374a0aa83373a91335b7b21fa99bacd4d6bbf1275e265de83257c3f10ca6ea3a63a58930f59983a205f96b04812444c16b0fae6f567d8d32086bb4e40af4eed6e9cf41a303168f1ac8efc911a614c2fcccc643c5600690cf3f7ccc617ea54a3c0d36429753c40870470ad1359d9d646806a95dd8a2db750184d69127fe4045ea9163e507d0ff1d763eb4bf3f7b1eda34dd7089dbaf0f4d468d51a418664ac61427c3a7f9dd95fd135c432d441fad8996e66afddecdf2340d20fa197cbbfbd5ad6b119a00a2bb4b53410f812f927356ad5e5c2633f8a76a5e1373381395e21c188c6746b0c392e9c55d339d002ab342a31150ea957c8396564dd51a881efe0f99f7bcc40905afdd61db5bbbf43f24c2c4da4789d4b53ca26e0c0a2499c15301a72362c8e9df3a73a2d5d6397462e86d8ceef2421da4f85311af286bfabb23313253c61ae3f9b4b43d9eeb3cd3aa051a34938b8cfa111ab61dc09be2db42131ce079c5e13f052a81ce02413d8fdfdff94535f5141d7c398043d54073e258028aafcf19bb3b87e4d8e242422d55db248f731cf52010ed944e28084ba13494a1398583733c24c0fec135079ecd866d4ffb8c1f7a08560aaa4c0670e59744928ed83f4593e7aceaee107cb53af98219e307c5b152cc680dd14a1f2ef787082ae2a61299d3d3224a4cdd5e143fc8477b5b5ba3d083984695132b4b1b66084a85925c0b1cf36697a1114345ecafe27458936bcb28ae7394436106b217aa98a553fa5900135a31927cc38ce66fa09e439ba7b01fde5f3926121455894d3eb24b90550f6f3e68b1664a3a6c97c5f8a93d017de11bfc47865399273ae5cdf4b01bf6dddf20524fe64b3aa48c0ac3be4a9830fce898466a69b340c4f304866c0008109c03d0bec19fde54ba7b606aea22fec1806c3c66277d62db1476f9902bfe37c09dd10449aaba1b703ae352387ebb11f1f895ac556ffaebc6c3de0c6d03371679443c71cfc94cf759f9e59390f29b42c7bfebe7e3331f3a89260d56d3db9e3b1557bbb5c68f1eaeece99cb9013d6617f2253d669e99ee684ee346f9edd79e604a924e34c10a95af8759afe914e68e14e38ad98d9a14db6f06465071ccb5bd7c655bad8127f32f8b7c0be30588ed341b8581c84f36e72f8068f93f45a044ee9bf6135b846b812a5ad01c359458b878db7315b2a20fa9225a98cf8d26ac1e24936a60469e69e6f388c95c18ecccd70f6b6fd1678aaf3e38c89f7038376752758d2f2ebfa5158438df9da0d8c40b925fb7ea36335a5023192dc27a99eb17b22b960136daffb76259b8b231f0e1492c8628926ecf9feb2cd8d301dcf59a4847ac8d8c0c0e9cd7c8aa57abd71b02532843ab3c13f192fa564d97183e335679d0bd0f5dfff57168d4539c21689cd48314a3a6f40cb586fa9a22c6d551656c26df5709b75a32e13e2e2dad430649de087abf6a6f68b17c20afba1ff35a710c0a39189225e46d676dcf57492a2902d98274642f64722fb838453e5d9d19a2841d49f5dadd8fbc95fdba04b8b50a67e85987ed86d14d1ba1fb4c85bfbb2da8c6abbc1f020b08dcb1190f5a6dc49a10412188a8627dcb90b416f34587400eed666d6e9538cb4df9eb93733c38c699da76dc2ced2ce756d66f320a1a03ee8a8d8cdcfb3773d55cc1e9109ae38dca85f4624103df204973ae0da7a120c1f6f4d25e59ddaa0a24a2d55fce43f754090018fd7b2f3de9e05ba3a4ae92e8d9fc3fe2fcf9c4c51b64a0b7b2c53f228dfd351dcdf1422ddd777f05956b98a50cf3b4ecd69d7a37581701107c5cc1a26db0beeac3fdd5daf0365ac9f0a16edc70ea7462b79c660684609f4a514dc584a637a20228e25be780dc079110665a3232cde3ee602de15fc5831a36d49070001b0796cd6efb9c093ac7033c386957ab2e8373400cbe128359ecc8f36bea6649f7da1db0947159f339b389b1ca35464a3be7cf02da121416834b57d93eb983e2114df0ef24f2b86796ea458e72783434121d897658e86402cf00cf150e167894c8142fec09bde79b997ce0ce77db9fd2c15d0c0412e6826ef9d968a82b899edba3b35076df9dd40e633c3a2a0eef5bd91a40b282b80cb9c0d39c656f42abaefe40a9e6269e33cef3a65b30f9f0e896c39a51d97ebb7f499c444e8012064ce71c69b8dbf4d482db9bc3457d03805fd6ec6b9a70f6a8366fd95fb9b074103c573a3a026dd45ecf7e8b30751194502f23a95188cb87977886881f6fafad6d18ede0c6d802927ae5a11f9b44781888dcb7e70dd7a29e8a51072fbdaf1b81794b5c1c99064443c05504f51614b21e0099ee4be28a9ce7bc85776dd09f96fddb98c0fb3cbdc90937d421790a181247f3329891bd26229328f374abd17f8f490be476230e02994ae6ffe8440bcb2d21c5057228ea2abdf2c1d50767cce4277b92b8c328e14cfdf3f9fa9b8a090f4e625e82a768682350e285bbc079d872953849bba1739197619198e68b62c251811d2405cd678b7c7a62bfc4efa486bdab942103d4342ec213fe6211aece3b97bb8e46e4fdba92c80fc0d308a59bcb042a7f82c640eeed9b020f8d2a0ef4fbada234bf98b2f7c627a6b568775794ddbf55d85b57dc0a07ace977e97c13d1e2f36d3f32f08628214c0e3a83fed9c7eeb66fd24c68f1054b833a743c477e3dff5574dcde44dce9d202ef903a95251a36e6bf8457dd805524c362a8261f0be63ff504ad1bbe55a79fb17e7b26bedbfb103a2ad1ee75495b47a29b484bbb4b587d2ff2965d078c6f751004653630b974f4413d656f3bac476a9d9e941158fdef61391984e42540b005b13397a75a0cb5204dabc5dc7e40302648961944a7069e45224a7cc594430e9b6dede4b3cf2171f22effa130d4221ff88aeaf8f920afc2f7fbe3efecf5fedf84fc6dc7dc16aa6b4b655c6e84fa165ee29448da4c67fb1621d1e5eefc510767b403e597866b257652f6d35cda792462f1465388392fd07b1fdb56c809c41d928a635b0aeb82248215f2740eb4963a7fd166bd8cbc6f7e792622e45e7cdf8ac182573be8b56d22550faf954d06495d2110f5c75b699cf19f8db93a35fa74e61e9bb570eb118200f1a8c4e0cb1c1d849f23f4f8ecd14be016ead89d98880fe55047b9448dd63446cbfcaab39da5ad316245c1555ba8683ec0fff5bd34eeda0dd495ed3ebe47a29b6b22aeeb60c71589e0b809fe2ac333876fa14b7d03da72188fef600ee2cf9d83548e54948f99f3f378a2dfeb3a24a5b923199d52ca614235c19eabce437f9dfc159b2bc5c7eb8acdbb18454387ba37cee8336b14191deb30ad286502080f862e5f963141d6c5cd580bb3c27d456afd05a5bbab42ed83c609d2f25f138eddc13df20f4eeb7b65eb7de6a5a74f590388b2fe6157e6601af749b8cad06e82fd3c1810e54477b42e53d2fe31c8e638ce6f0071a7c060ea235a45ee83f767311a2b06acf4ed59e172c1fa6e17a70c1d4745d4d187d702cddd50dc7321ad843194564c83a0d0fb54f8a0c3074078b7299fcec00d8329986ef1039f1d0f680f41136fc18a0aed718fb999709f385c6cf0dcd3c983628e9d4672eca413d068eeba0217281e138d477248d9976b912ac9589137be6dc3558e8d81f6d954eb6ff9f79207961e00b2bda33fddb607a413df64e550fbc07dae3aa6860d5d816c64901a5e66e66cca6543bfc4cfce4bfb0216a5f949e2cc443ba0d43f6e90ead856b6bcdc079889bba6386e73ce1148edb1fbb5812003a165655f38fca54d0262b84a7a7fbbdcd7cc1abf4fd76976cd64c0fad80c37aeb044fcea416f321ae9ffde117136c8beda5141e53d6c944da5c128cf486742223bfbaf66346eec1546fa1ad592afe43a7911c25cdaf4f2f313bcf82734e91300229f2d978f372b90e4bc231887cec5b40fa4ebfcab812a4577aaf61d770e4a3c5eb3ab1c414d34d78eea921af0e05e59f18f0ef9718a63432215a6ce2064874ca042226f7ed2d9d4da576ae0b9f7316dd8f5a811f151b677b5e3b4be8aa142eae4d636bdbb872bce135665c2723ce615ac42034e03b326d6b67737313acc500df82f9497dd5ae870059e036f0d457e2eeb495e95bf6a066f5416ed8a9a9265e9142a8a7c0b2d958843000869e17cff30135c97c81ee38d45f03782ed818f4c22f21cd7fb0aeeed1744471c5f1deda5f6d26d551f126e30b7d275c28ded8051198bcc99a800610cf8ca730d9074657874a4201c59d69b8d84685974dd2645eac2b7756ab1b97bc0f724824dcb65764ebbc4876af68299e6b15a0613a9562089c75f801f3792e0f3300776abf3306c234626ee10fc0b599c9edd753f04d771f4cffc4e22ca48a3a244c5e8041ebeb70214380641001c39c9aabc38631709d2582a5479be545386eb0c32f895bb2c3de87450eb3cb2a978748f50fe31dae7f002080108fab0f6a5c83925dc4986199ec560b589d320c39632b6eb71fbcf559384a5c9d0311f37f8179814242fb5afc4263c3abba8dfcf70b36fb5664ed513627daa69ea6ff241a058208fd2f3943ed97cab5254596941efe9bb64168ddb5197d26f04caf78cbb635cd65098cc350ddaf0078f0a7c015a9cdee409d0c77bd840e88a298332452c0a51ff7b3ae0e84a6c77b3412b34bdb6ee956257943f7eab35fa073730e09a749143fb0a8c586eba8f4b3ecee9b51682687fb688c515c90bf8b9a069ad248eb82d66ab60cbe695fb893350f7ef04ccc41b9675b484cd412dbc929e96b3e42f1e3c6b9d0a062bafb71c1bd29dc9116c6831c9429ac3e94ebe426725ddc897f7db4e411fd0325fbf32b7d40fbc020a3669ac8edce9a65b52dd71696a0ac793b41503cea0a06a5d8cb102fce88a7ecb66349034b3d748de533b7e52d55a87e7f6d7e98b5ddb5b644df6aae6bd0445f1dbb19223bbc128a74d5afe1640ca5f647febbbddbdab50f8ae71756532fa0696f6ee8c592a7096446cfff9f9a22ebd9d3e19cd42e001daa8fb84f687ac7c9580c1e9b0747ab768bae72e9a8d771f537d47baf6f9434571dc1b7676166838aa37f462168af600471db4dcacf307b6a8bf36ad30e02a534967600161c17b918b223e770a655fd55197f2ea8bbb1e54aea04d3fcaf301f38c1c99e9a5cf90a8f821407d8c4bb1fdb10a264c74a733ca2ef80c62357ad09e77d4bdef6539ee078f4c942b1540ad9bfb299f09a49baca8625d40bc21826ec920c5d313d98a619c12887618a48f0ae0ecba18fdef36ab9458d696b14bd90b5022a745997cc697757bb23e784d7c1c475fb049d9a1c139a92541ea348dc5ad86b7b7645eb4c77c57f6dd23ff52ab4b90e71273931d113117c12ba3da3d0f2f6c9cc17e5a2927344381dd772a1751aea96863ed07433f66365f85bfaa3fcb3615c2323dcfd670305569166d05ceaeb7adad7f56807e4738d0636b47c8528175508ce3258599e84ec626e62e2cde7332d6cf2c6fd5853a16e049c11c57c420913cae5b0f7bc58ddb9950386f0e4af75462a9a66176c024543a151641038d6f82d812e4d1e9ceb4633c0e5d99dd1d30dd3421ecb6991ca4a9dbf432335be7a7377b32a08a94147c47c46a5f1e9a511368d63e93620f11ea780d9a6486fa70831ef8fedf888f16f82441d24cc3dd7aa5e379fb94cdb4effdfab2f49c3c813aed927820ab58bd71d1879be50a923dc0edf6253f3d4856f2d09b5e1523c96f092cbb4497cc607bd755492e14174849ff4e3a3c178f40ccb9b242dde5747f54c48f14805a97c0e84529fc85fba234542d68a54c6fc511675b90a604a20d23d2f4905b1a99e09245e88d1771a9585d8daf3ce2c2482dba7cc09933969f69517f7fe1342645493aaee44d018a374e2750286228c73c4414ecb1b86e2e241f4fe1d5ba958fc5029e98202d24bc51a7abf0bc9b42ebc67d2c4444dfc04c84447ab901145b0a2ac4f0a53c215910def78fd1a55ddeca76dbe5565d10298cb0583ec36ab94d934a172a36ac31300af7da030ae6133ea62f66111d376e1a7ef1f72747ad863c114c2bea0046782821a11771b07549a36cb1089acb105fbb56e1988827cd28c7485f364fec13085ddb501a4333f85724a9fabf09205641155488feb23e14a203e4041cfd1653c1e81457278e5fd58ec4295f40b907ee95e77290b212dce8b8ad4b012102cc27b3fb5bbf7832fbdb1c34d7ea88074869bb8b1ae5231bb13327afae3fb528ded0d680d35b49f2a3a43ec6679e189937c02298bafeefe2cb9fdb1409ebcd31082e93979f75d27e393bc19ee09049bdb723c62f502075ab5ff876cb7d1e5250de5ae09f4f37bab8f83532cd655b837ea445bbd4435b138be15719413c66085573c5f313d6eb11dcce5f9fae9d1fd390b05e7f7e15ca772d837025069f2c1ed9b7dd8eb7ab29872041646357367d884addfdb5d6722461d3cacd5a3402f9e7facd409c9d260e2bcf2f9cdfb3a01e920dbd5c503d49289cfb9f12299c5e1ab40c5c38e5c20174946b67c0a4e62abe925fb33e9215f56cc9b54156de57082efd66d902e776c9a37379f476fa9d82002f94de2fba866a7075d687c3c16c4713efd4e7b4d07aaeb39634098fd519cbc06ddbc5ef094f783785e0f85f026c42ee64e7998e4a12c51a0e5fb84eeeef1e8b2f2537bca43648005b2702f9f5f8e5ccd11edcd749b75cb3ff6bb4417a78ac52e100e2011de477d1698787dc3d5e42e1299e7240daf146dcc70a3ccd3c3e271665bb015b90eab02a5e76b05a9db1eb9d3f4f2d18343fadd037740ad731de759a16a0e7a442f8f211b3255e76ea7cd0b6eed7f08ef0ba03f691c9921a9e643d3d939a00c78fef2bc0cda2e5bf2ae8ac21f42b16bcc715db2498d6b0841d07e6b8c246ae6d9738e3bc50f2778eb10eff141ef65d1531637c4cb26e76f85b51cb00f25e452b15454da518addb351eec531cb28a3bce9327e53fb85e7e59cb1885d9bf471bd53fbda7f591677d26ef7b391c2e0bb4c0e961fc105d2c864f4416b9020976aa3cd4faa468b12adf893325e49832a289a16bd43ed91c795be82d653d97e644db50ce15d82b04bec960ed1192cae84b030a2567872fc8ea6cffbc5f77f8f348e28c5cb8b87d6b3ab3108cbac45dd7bc3205446871e77bcd8bca0f8e09001f28c60be51f779fe1ac85bef3ccc14aa6ee309dc288df619934c879963898f6bc2ca856ffb7524ab4541d1821a6664aae06098322eff2e5b5c7a19838824af306b08d34b762b44200b4a0707b0873aada148196f5ae2024f8398b7e571b9554f56174a2df9d207f63596ea38ccd62bcc1f6a6f5dd0cb82fbd53a1a7eb6f633ff6e2285ffa50f41c410b493017b1c58cbd5c91c1d48e1df5c6f7dd889f893dc39126e5318f9d6abdf971a91da2db3d1b30794cad40e343f7fa80841762f9ff2a255fc48e3af00ab3eaa3932ac297420dd7e0a3d5cf9511c0c6225a615d2e043d2aea20ebf661813bb6a0aa27d0f105d6d71724dc26bcd07b9d187caba71e7ab746764de354dc8fb515d43a5ebb8d9b9daf1e6118a8fe346c745bd0903f4c08dfa96f16bd23a38842f4d338f7716e9dd2fce94af70b82f77b64088237ba4b630272962e2354bd49a54c14f96ad88588c752b697c4509bad1005b321dac4741ba44c2cd8625975e4d8d75656f33ac0bfcaec3b95ee4227d093767ec4845412312439cac8a83e305b26b3b4caacb576934510b7bb1beea70436a6128addc69e90011580c8e78e1d7e03ce311c76ca772f6287fa253c880a7ba2c20f58bae03d8a07e35fad012f915b75ce4bfab5495fda4b72d783fa29e6c22d8915598aa293cb8a84e4d3430b8c7adce7d9ce96e85fd0f1213ed70bbcca27003b0e32f1a8ce73addfd8b4b4f41d12775c6b8d6bb53d99825c5552896f73375a9ac66b67d09994a8652015b9c508dce733b7223547333494d8c0d80e5a965a121c11987be3fc339e37cf755c14e066547b87689da9de1c8f31eaeff56b7d173ea3a42a828e1bb4955c0dec6c362059dc3234411148438a95506f33d9837e08c08d12a65dd49d9c1ec71bb265fe7b5e4f7e659d55d3be6f7bf1fa28309e21fef84ab0b6c4210579ddf7b96d13b5e1e17b51faabcb6dc0f5b64cd695aed43c17337878a97b84c9dc45dc25064663f2d6bbfcb47305f1f6cd2ece066c763c530adaedc971e8cd6a5cc5b68654122ce50a5ecd513c8b2ab7ced556bdc214419c307da5d5a1481b096bd79574d6ea9a2bfb0622f94023dfd83b62eefa16d7128430126b350d2286c10c95fc1d4bc3101c247b972b0fb37c24b32b1633ffbd85f36d8760d96894b3e491e07620f1024a55af2440b596ec615c38aba43dd2fa863ccb85999d3efc1ad2982ad922fe681bf49f385a369d399b1b2bf13698a5d2d80beffec2291a53e030df831604e9488590647df16838c06aaf094a9577afb6f94e40a2a021b1c26d2ff12dd0d91119d8b67f87c037a533e73e95e9cc425a086b93e2b48ccaf854e9826af11d0d5b92b5165553df660346285abe4bcee9e71cd61ad8a74607611b719d7fb825414426a14af1854803307e33b72297a52c8ea65a1bf0e6d2efd57c356aad0a41ca4afa8977919b8cb8e15eeaa367cd1611894e16a35b7525c4c1f34f38527cd31aafa03fc074ec9ae1c149cd94a860deeea55efb76d05e7ace39f260b617edc71ad8d8854a4b957625efe643a5e5a0eea1eda086ef1ff4fff9660cc28c102a446842049c5c04c841d19a511dfc02cac8c8cbdfa6de954aaa16028c53f1d5e77c49a575353607713a0204bb34a5cfb6313d98759efc22b57676a36485367a12c58f8c76f42b51bcd45419b62749511b545b3e2b208bc98fefa91a4337394015a733ceb4a78b37c7b38a439a671b85419e6ff0ef293bc671baf0f5db90b41b6b364eeaee4478bd9d03351b66dc414e6173b50b5c384dbab0a4965e256c66874cfba407be15922dae98bf360c2051ce15d2688c26ced40eecd6fdafd2a3005e4cc7abf04811eaf32a68d18c215d74e08f1e0aeac0e26643acae881accd23fb413c91a0853027c420a363c3174370c76d7ca0cdeaaad1a360d08a70166780078fc8cf05b0327f8c96c2b085e45579b1513972fb91dd5783e7fc0fc303bd1dda98bdc855fe75324858d4bd60d7ddac2f23e4e9f0878ef1120267ae950cec621788c07ade7723efeba7040fb547eb89a50b05ddfa7a35b4287a798ac2596f04835dad6376f8ed8d30942134d486796a5c68b9f3bea06bc39e05dcf37294a8dd2be7bd8f1433bac847439a9932a882d20e9ce99d35b358d501716a8966465f5ac674a5af3161147bc645ce766f6f2500cb2ebd068899aa336229831f8cf5fd8764235ea8e8b588c0cf33a967967a570d5c0347c16f40622f9350ea21a612236c3efbf88f985cac538d688e2559d7894b52b9201d8ca659b70452fe5e633ddde61c1d780c8ab966b8230999ed631007309f43f1785e6d7458d963b377b47faef050892c9340a2d1961afe00bc9a45f0e77ea17221470ac9a10534b96a60dd3b814b09bf988ac98944cc652966bea8de6d2455d572acb2a14c202637960a8d410181ec895f0738cbb1cc04b22d06a6b40ffe2328215d81c72b6a16f0cbf74ad745da4b9e38c200d44f06b96453d25a3ecc6a78b5bb8865ce2be15638a855a716d072d42b6bc36913faea1baf2ef2c33063de4c898d620e48dbbf0f5b9fa3143b4a203c531228471f09e10ff016a957b7827aed58261ccbe33cd2069909da4c7584194a1f6933a04cbca8a3bdf59888c2baf520a29b31466da989b13507646b797f7ef0c0588885f00991ad1951b3a8682d713d293568c3af2fe5ff824348feec44ee405a697caa825367706145c68e3092844d9de156442c7364c15ea45fc4560c16e8b37479c0c4650b196ccb991905dd8655e34aa3ab9408ee6d7db515292e36fb141d421246183ab5ea62c322002bbd40737259a8e859c6cd095eaa26754ae61540db0d39817bcde733b43d99b9e3cc88f6ffa0a89cc280945690cc3b179ce040bd48820bfd51909bb430f0ab12835a6fee57d7737c67b58ecdc912dd30dd92a434bb955048027eec7c7765a7dc4649b31de52824374f8ac027cf0c28f61713bcfcf0635e4c932ac23767a34dd5422992a7d074a610910c5a065f397dc64a4990ea73b7baaf5f34d1546675fcb0880fa35aa3de0a83908f3c7b6071f35b7bd397fce8ecccb47037e9938faaf807fe373ff36df24fe53c9da84290b41a3b8a96da1ec4e1d2907adf564eaa2a62ce51a8e812e33e4c729eabb708d070cf397ec340461f85f304c0dc3239e37249719b07c5fbff8b1d9fd6b4bf318933e4edbd1b4a807dda9f13e691006dcebca70aaf858eb9bc7b2f310d66d6d992a45881841c74f7f93a7d589fe77d6a7009f13b967b12235726e57cf58739ea7e15cbe75af934d885a3a008218de2c1e29c8d9483a15da75e36950eaf64d907eeb8fe9a1796f7d584eacbcc42575a0cc5fe55c34f4a2482fe3dce97dcf4dd383fe9ddad7a703397f1b7ed05503af3863adef045257e53235289be8c4364a0aac0e4b5984f7e1297f259acb7e7726798fe3dac79350ab6290eab5c7cc14dcc4f278cfdecd3f347facc87cbbd21fb2840321f2604d46426cebc123777ef3e2477156818098c12b1c97e6bec7b22d3a435a8b8165ef80c89099cb1de35d63ff682859b4d29e76018ffa8fb9480fe620268cc9336f214b525fa7903fc16f836ca9fe1e6f9c413b64679a60b555f5945902f7f49d9d62d84333713417864d23f7e595dcc2909d5880d7975cc6f8b0b4ecb39197eb873dae230de91a582beaed08e7ea32b832855d018fa200a912fc22b275a8da3b10d6363bc4ce6a25fa339275d5a6a2602acc1df5b1cd6c968a5dec1ae0a0a7fda3aea5c8b36be09c36904101e735cb6e7e3770822663c537ff26dcef2a115e06cd2a94305c1109b21ea2b89ca806320c8a85e240f56146c14724f98195822aed687bb9d7b4812b0fc4690a6c76002722e1a3675b27329162732131c23dcb94f0f73bb5106f337ee38952e11c9d557e2297a571504d74916d661f61890e6bf5946ba3ab87aab13b79660a0d1b8b06a01c2fc1c8da8c420e913720218a628013c2fd1f41762bd3193bacf6efac8d26ec8d3275f7cb1bbb7c0b6c7c8bd9c3f9be0127f33aaca5601519514d3d7f95960eaf080cbe1077d74e66d3ddd2db0d6b89ade63d9b2daf845744f28ec614a5c06bb6602db2dd60139318a07eafb70b3dc06ee8fdb3dd8f94424d745e0a11e8cc113c6810ef59553f24d2977a00fc958ff69ac6a44d2bdfc85321928170745cb3092d4115004aa384b87885fabaa3ad720fe9e32a55c0b5ec3ea5052a875a5969ad8407e283ed98479e197af9f2b70100f3000160cacf54cd524d821bcb0fc221f27487a0f5847484a643ce087169093cd87d8c7eeab1099f5038772eb241680b213c011c44345c5607c661cb3cc8d28ce8b0532cd56a22fe5e9bb41261bbd896d84eb130aaaa6a1de432fbaff927f7aee0703751d19c2d747d93a2bdec8817e0b2e8e9559133b1a28cd21c5e95745b8e69b81c0609613aed3f019e0dd6c37a72179594a167b2ec2879b1b922fe3ad4c3f846a735f0605dc014e8614628ef9c491aca65dd4002b4632b0ede18cc180c600e79e8088957205a104e10966373dce3513074738ad00fa08ad64afe11c82eade4722db691b3faea9bab197774a5b3be60126dd5637c0ec0e32d1bf87cef652fe9e690289472c072a6329c073374ecd76177a725a0d612c1270df00e9e8582d0d25409777907c8f34e9653e783b32b043e1667132cc59f07f1f2cd318edd4de8f81a5f8cfe9a9b8c8f843962750e84fcd0b4dc1e0d2c358ba76366784a70e06eaddf6b3fb81c9c2ba039ab4c6d00c4b70775d2a72bc2ec173467206e9affcd6dcf06de99e16e34369080602dff9ea832cee16eb67f66e3f9ae4878f4843255c715df11b91edea8dcbeed9df02f50bde93c22fb01b7aaa20b4dddcf5efdd2461121a4cbfc964edfbe7631b8b8850fb918707e06ab697a97d1dcd869a253e2b5a7c3add838b904422efcee2fc50a63d46dcbb6e565eafe2eda6db97e47a5cb3a6361433170974d2507a052817fa474f7eb44f11e2800d57a04872d01b9b1f0458abbb314f76cce0d907faf0e1b98dc06b92021a3e7505876b0243a2ed162edd1a73ea7278811bea43755b3d97ccacfc03e05b24955216ba83d2cac856a85f6c40a79380ee0194bf58bb2f7c67b858c7545ae525e459b06dd86b0be7c8015b8b4dcabc88365f9557d302e0b2be99d63f54a17ea63363215c7dd0a0f6db63096eb20dc0e7517a247c0ed4533037aabbef93b6d3b0d541fe962f54e0b6ed860c605f100a645cf014e030c2b2629e20382beffb5acfcc62aac7d9f342e5bb872565659026f40644e738923594e6834c3fd759dbb728f5a34d8fb7fd01228a820d53105942905964030bbbe15d904d325becc0ea374d033ca591249b08dfdf4962005b63ffe901520533fb51b6ba7bd63d8dcbdeb1983452a8c6bff0c98a26e3653f4005718f70ee61853e2bcc2882cf3e58e2fa35921f38192abbc137d759df7e987a8c6aee8d9748e313ece380ad233fe2800e80bf5990bd8194763b5bb946557fe92fe6e7e556d52f301ec1fe6afb0b960e499ea8c3f7b55fccb9389c333799fd05edc44bd02c02ffd912d56f44372af749cd70c8b25901d03272321f73096a99ed7f53887c4dfa6176592729846865ec67dc828e37a286a87458efea2dd2c3d914a9267b315170ce51bdbdcdab29a24bde0a63a82241c359076c0a9c20acfc71fd7192209b7a1841d735f4cc5c026ba662e5a8dfaabdde5cc9e72ccdf7fac6b20932a087f71c6ca24a1f01457502b20673f050daae42e49a18e4c876f5488f041a4befdbae72eda16baef1116b5a78ce958329b0f986e7197339d84eb39f2b04a2d3bbf2abb34d9dfe6209934ac7b5bc2ff663dd295e7246fb4e4c801410da48f7518563b13ae6bb5fd383b65a997688b5d54bdd708b6c063d6492013fc3ffa11930ad7b4820768c0bd6212013717138fb4bc0be157442ee8e195cee20240b6c991c2fe6b156b12a2f64fe89b1d5bdc4bb2a8e24134c736ebdef9289281ba913c3f3168c0b905009395d3a038fca5cd65d4788015f83614777104bea9b5341f2e01018d211d46e6eb1bcecc921f091f83ed28aea75c4d45473f555c32df6b8c7f46ce40ff44be5e185a6350dc21dd93a476630ae15f5cc206e77eb1dac724a823902c52fd4535a6a34531669e8fd170a755d1ede496df4cffdb5345c8236843134f2e22bddc9467dd196bd45eebd52c820f07a6cc4a740e30508be0dcf800be563c3b1b2589a9d4c7f37a50967438125143e0989f87574aa9fe32377067b916cc33ed26e87b9e1cdc68590653efec1c316a0a9093a1addb1aed627ce512e2e623b4b7e604a904dfbb4433b1fc20883b82a72305dbb49e1ce7be20ae691ff8e2f2d47b7b66d53a2a3ed949aff24d8c73e5ebb4278236d595bbfa1a89ec09dea70995955b74e6793a09e7f8be9be961aa2374c7a81c1caad46a5db86fec0082a23e41f4832d5dd44646cf43198c39ab6835fc1840d3985ff73c80d2979225b2454debd9d86a8fe048e461c158d9866cf22da0dfb6b6f2e6d8f67da9e4658cddbb409d268b18483490d3274cad94596ea8a2406b387909d12ea212b0118eb55e0bf48646e6f841f3cabcfeb5b9544e3e6072c961d18e9180badefd616aa01d09514c758ca26c6ed79fce182ddb5dff7984f651e9981b3573a972fc507ded2627c547c655142fab5cadb08673842e39301b1917653c678577aebce2cf5b9bb6083e7de1a3819c2b93c215c0d4f3c1c6243214bc56757047e2f2442d98f480695147c7b8a5830fea575c9e2bb3798a444758a918e26943def288d869f366cacf6ed4e76974559951259da20585e0f6245bc68d4f6a747443f7914803c200c274d07042ac389c81d0aeb2fbb8700d861a4a61b1ac2f793fee845dbe2caa2f24d75b56a28c01a41f94695f80bb4a3b7ac30295371bcb13c866955f8e05256540e3619dca2fa0d3b28cd31eacf9d7641ec37935cc1fa6a8e350582b9d7e5a5d757c201c537fcaad6a350cf1058b5156dca5e3ed81be9d66266c6ecf90275380300e7b066715adc15d8a3e8c7d468ea370022deccbb6251d72dd191612afb83c1ca95e45933c955000e49a4a303898d42c67dc2b7c660b5d66f53a2d820bd96733fa2b44f4efb6931e9f9314607b2b967b36c76a39d362d22102f24475efda1163586e045305f9d2830a0590222806fb40e9e2c2fd3f6625c09c62b44f5bded68fbea3805c2cebb9d413ac885aa264fbfe7dab9cba83cd88ad845d30e1f21ee9497bff2ba3d4867e2c34fbfc4be21892a7a7c25fca2b40fe1b663365bb74eea1f8161da5be1ae631bea84006737e4aca4cfb9053a354c1da64c6c91aaa1938dcca65905dda8c415f0393ac8cfb7861a9bad263cfb0cdb334b4527ff439add77fbd54d05d4a240ee0d7e76d0b72721ca082335add1b312395b40dab607b29414ea9ae265cbc5d3c8f59464d3f04e8c4729fcd59a362bf86684c38e4fe62f4e54929182bf0a97ea717ed619f0b25404fbffbb77361dd13beb238a4641b120e3413f14c4f8a92a818c7260d42989a22ce742921911eda515dba22fb47409e1e896518074af899e8c42e9d402eaba691c30562b78e9a804d0eef1b3ec7def781d30a5396319be1b1ca2501eeb6f14e5f55ef41a3a66fcc0ef83fcecced909188b8fe7ddc93b2e67fdfbafc031d094d8efab3efdd7459fbba2b8e2b896c0afd0759258079d8a9a52dfcc11c5e5772705ca8d66985ada4a914a6ee2cf4f55655628cecf0706167409ac545684349c311f0cc49ab6503e892e1d959e6162aaddf042ae830b8259eaff7b7908ec2ac8b23bf9fde02e56dae8baa9713260786aa26c18fdfb6dc8706eebd4399a4f5b7deedd62849545fb1f0dfc0b48c04fcfccbc1e14a84d32ae84a058143411d0640b5a9df0a9046959f93f378ab6dacbb35242caa10ecbd9ae37c0f3d30c59c7698b62059c1a93cdf3876f7ff5f744d2d01c48d31f7b701419c861506ce14d205a40ab028c358a9de5491a0c59d7fa33812a8e95f934a1cb9e4114b6901a470c7770734cac5d820ee444a33c664499facd64b06fe1ac905ec63f53a904641d47a5801967abd9a438a43ec1c59d966dbe2291dec7e15ee069d5c266dce65bfed4122dd2a3dfafc915e48ec0ca8c35c6f7a81b0f3b4bd5ff42cf87297ea8e24224d8621ad94566e21ae57f9eb761f3bdb834e0ce2555e85ae24a28fe10f2d6df703bcd8b24c8e82b371992e53a8e6dc3d95a4744d37b6504bf586dda449d062fc19dfc48d04cbf9dfa6b0e0d475a582f96f0c70c0e3cde39aa8f36348c67b020c6b301c3a31902de806650f751a3373b3c609fea9a552437f3dbbb410896b7b4e6c71e0ee63fb3ff887183af7de2fa0a2b7209822f678a925f3f30e3765ca25435500f3ef24812b2870e3b942a851c504e616add76d90ff6d22ea086ef974c522cc04a9d7e09f9ad12eb1ace7f82411128058820261c49d31d5aba240d96355beacdc17db493d528be08dfe7cfbd0460228c815b675d6d3e4ab89b502f3f81968b50e630f4f360bf66b5f4a52afb7ffa51b414b2eb5de417f83f5d6e4957cdda510afda4736e7e9bca9cd5b56920c0503d4c21d31c2c2601bf1f2e4a9dfdd365d617a70b7de6fb34fead15fc2d73343e81c6758f4893597213cd1fbaf031c122a38c879190fda766bf5eaab82d9d3fe287dce199592f06877226bf6e211c78a602316b22b249faf20b918625c2e9cb36634729b8c85bfd188dc2488c5ee1f5fd0ddb15517ffa52f11d38f43341f4c21e17e69af309bda74bae1e4d3c958919c3b263624b494843998a78b8ca2a1d19a8d9dbf09d78eb70c31edf5b44e360c2193d09a4bcb0758af2556dc3a1a883ab0a2a6444fd59508f710db1e1c3b6b5b0c9bf425bffbfc6a6519db73d42e41411586a0d36fa4b9ce2d003861832e31943517eb3acaf96714830f992bf4abe426b211d365d4a39fa520f4f4a5cf86d34bd9a46d8fefccdd99e2760b9490805fd4626440b596f9124f8c8f3095400ea0d7dddf547bc6e66c7a65add630347dd43e1c43d86f78354ad686e9ab927b1261908612f3b050c08b37ed11f62fb6b10d930f8ebf44f3c1f2101234754926128e9473d99d5061e7983232b6d88a3746b5b63e050ad32387296f9e864570201e7eee0cadca2bdff6eaf7b8eaec5e97d3993c3a7781f46a9b906830938b72e1f86563054b6a045b62aa92354b344553bee71c21bf16958381eced1d760d84244eaeb1b8ff4e4132d66bf4890676b4c59a8247f839ad3e09c546808436d731b7dc471b36b133cf963c79f4230eec70b19394e13a6f0d4ac12c3201e747c2703dbed5471ee568581c800e99d9e453f873bff133a94202645445d9c3d9a068fa14cb5184daf17513d5caaf48ae0f45b654ce4b1ed3f2976320ac2cc3955d06e48198ff45a73e31b7967ec416ac0d4a25f89895351745ab5c1e0460ea8230e42dc3d905006fc88745463397e4e61c9455ed41f91dab189f3f78f14152ac4d89efa566fc3a75eb59925cc975571b669214c701c0eccac9726f6acdb3270022476fce8d8287d5973f6e92d05d54b6a016ab1575467e069eb4be094fdb8488d962210c2d518b7f9a8c3e37d1f124e4068ec2f2ecb71b414b59ee9a842c7d3f5397910749d5497848a9a6da8af68a0e7f9609871d390604a812c6986700c87149fd0bf4e4c750948a9ee0d9e2da02d7a08cfc5d3595575a2b5297f7367026cf828e991b9cd8cd94166c9b1f9a91890facaf7529106c764bacea3a67cb59ef915868c894a16d0c9bb82ebd9c524e3699a870e008aee0ad1e8c274d2396ce60cb8090693c1f6c3363600a060c298718ffeef0e287f64ca246dcd1e2bd93b43a74f98c5c0ffba1b3576c3f6d5befe62a4307e42b30332abca7fd8b8f233bb8835b5535033ef63df60eed566096abfc7cffe3734fa920b43c8d4d6f33257c18b8cc0605bc006e984b47e24f307916101a94021e137edf95528b67669b1a44250e682987faae7111d94091a357752a0ad844fe2889fd70d123a3c8eade1e4646cd3a1141cc84db3bbb25c8f21cf7316d1d327674f051ea6691e34c994004168d8e1850f7198472a0dded61e98952c63ee3b05c497acd6e0b4c28268184fb61949530201a376fddb1a7bad20a96d618e1aa19cdc97aa109066287de6a4e609532c207ac6ec92426aa2aa88a83a898856298b07e6411ff1201963eec58cfba44891cd9b6833d10e967448c63136ed4eba825e02971c069f877fd1bfad9731d46044d317954c664b45448656099cdda79a7eaf83a9e2ab9eed2ef51a71fe7bee0336e9432219f9f1a68f78f235d2d7fe79e1a0221497da17f24690bdd4ca8e68cf08cb5b0cef9d95415238800c1fd61b1b098d08e2de134208984f931300dda65498b75823c2a7a62cf942e25d3ee26031947b7ba04d6d0df5e561c84b920cafdd2a36b54b5d79a2856fd75f25a3369f814736042cac64cf3e9872ffdbeb7c144a7c289bb904c6a1088d3c4dde5931b208ea1f87d9be33a8d4dda20b56d156c91e92ea8061fc5d4dd415fe20f2300bd420ce9e8a1cd02c861dc17706367d1113676a5f9dca23d555c06b14f9441a95ebcd7f3880644cd8212acf75d961086b9b25d80bcd07c8557b83d6d943a6a5f43906a0e1bd0eb59780334856e3319b2fa2dc0894e0ee7393ff93727c52b1260dc24c999934479cde785e8f76c5d667822abd206e6aa07268d4135acb0783f11262101d85387bbb4dcf35ff8fd877445863bdf30ddefba90045ffc5c92741ecafbfbd2a1581a4f5afc0a166f16c6494e8f83193f90d3c083f59a979311851b23224bbe61d6c18c7966ee6a00a7ecd5a356fd17c280ac3c12f1be0e972255867dd68477786800a9e5d90c5b6769f7af8bbf9a71760936cfe77d5412b77867990840bb042f96a55ff9b5b3b54e3df79760f5591c3ca29deded5881c3f37e02fd1b3c90f3d3d01988d9559afabbb17cd6f4be41c075ba3f35634a2077250bc36673d29fafc08e350b8e4d39108db1911d72f13af21b1164265248201953a5e50e3bed3c6023ff90130096e9a5aee0ad5e7ae3f7b12efd8f4d35d2bc0becc1783c1753c63083d62af585fafca4dc64670f4b2680f14faf39244ea48b100b4b7db28121bab8459469ae239ec1d28b25b9b5197c1a22404164e528c2ec82a4d9e72da00c808943332e106872f2fce3652ad932ff3d37e2729be95c841ac60fff78ae8840b253bebea50e38ba2067d6e380e1064c82eb8cbdb45de1e5987da22b0c04b39467774193b7fe3e157a7d698ebb7074cc4adb9d360d36e135660de1d2ae40626c432216ff02aab242cf12d1d81ca2c18105179c6688a82b464b37215ad93297269482d8e40818f97cec8e96cc0e42d0f51b22caa793c53ab3d1ed929d0b568a2fc4c3399a4d2736a2c52862cdbd884e43b6ab202fd8b305ed3fadee3a9e5c3dbf74b528288e1d2276d5e8e1d131af8a08c36d2e53e32fc5b2fb927fa6f013a74fb391f426a97ef46db7e4a422eabfdc9dab05457927473cfffb783f171f89cb73d71adbec181350e997428a67bcfc50cb97e10955b2a149a708b2848c1b242b69c21080b5075e1b27fa4c323279918c3c26d2034491849521b62b208d03f6517b865862254212f02f6456494cb5be7cef6b5df97f76e6c16c565f422c0b4a0a759c393aeb7d1f96652cb9947b77d05e5a2f950c6a4e8b208c63418b2bffbbbea2b09e684eb0a8ede87f0cbd41e36ce1d8003e46d9f00beccc840157f2112e71b0e05339a04024f4db02aab965ffdc601c7745da82d0cd58684bc4948eeebf8e4d322a1001dd157717c337e389d3203a1caa08f2649f89b35dfa7bd2cc21514352e8951469cc87917bad7b28c6a91c2a3d9c9215a566b3814d28e90ed3f5c6a12442635cc3c63db990c0770cecb9905b339f685f9369521f9c4c9b26f8911f36735819aeae422d6d9a7a4cca29d75c2df43deea821e230b9fe3a89f8c7c630a54fc40b16f4c525c21da4dd4f6cd5cdecfac6264691f8e2378d58bcb0d6d0439da90b232fad10fde9bdc44ba6afc0fe6a447236df9e79658815bcb7ab863796eea7c29ce1e36e937ca0d329de00fd30769f667a940333050610cbe013fd6631f1032c0dbd35e319033e9d6966f7be61be5c8413c0ade534915ea3104aa77c55798efb6cc59380b2e16e08ad8ed89f9dda40dad806ded79c9952b79a24fe9714cbdbebf656f9e6932c6d6d4164cdf03d15d294dcc81f15f2363250f24bedccb0e5d4ab8a4fad2b3536e69d149b96408de3e6bf1c7151fca99ab355b18e87bfce04bc2875e2feca481cfb4f931faf6dfef2eee2515b2b2ed4a0a9aaa89b7753eca1a36ba6fd05c2aa4d98a62937a43ec290199e1fad8f0a6de680918ce25e216e94536b974fd0cbddbc7fc088d3b587f31df3ad7aab47fc819a8d81ce72b26f8c61e35688271b51ccde94b4796e51bd73bc008a0f120311445885ae2dae8abc3781d2a81ee1711db3c9da665636f1652892e253c9f435001b4ba515efbe62b3d56fe28beaa60ac2bb1eb1d4fcfb7585162a7c3f42d92ae99a3b6936baa36391ec81ab20097eceb66a5a54225c0d6539de2eebb7c76dbe3ce6151a18359c428c589f0ed5a49e4c4c7b482dd9ddb8b22f0e765a1a20f0e75129ac07b91bd57cefce6905a5c6903ae5de3b47c59f45b56d65c8152c9a20206e7841e4f3511634bbb326391a5d0ff29ebb4400ee1dcec8180220a4dc49e505ca5771f55e2951df4c194f012baf2d3ecf262bbd94e06f14ac37d1702b297ad4243029d1a30f85b22951e0f1021c5d9a38f192e418d19ab16abc442c9117a5a90f682bcd920dbcd5ce061abf749fc0210766705c042f2b513fa25a4d61e17bcc81c2df1667647ba0cf1cb37f364b82cea99f666b96b0c3f6c913dfd575b13dfbfb8bd589d845938ae9e97e793de7b2cdf2875514266aa5eca4e0b3c20f71a661791900084fe1beb5994d38a0fa0430150565423b140eb1d5a9255f2b92d300a618bbab31c20d6af85bcae90b5327b3597e5e44b0275bb68f78f5f4cb8900eb55ecc6c80f52e137e6b25022cb1f1ca7a5c72258dbaaf71c39dfe6eaf8212c62e37f1ae9543f2b148920ea4a63a23dd7179b5af14ef2dfc16df0113312200ee7a83b808a68e14a4d4fcde2f60a170d3334a6cb7c30f96bba6863f5f5e54d3ae45bb3a731649dc226492e3352125d6f45dca98416087fdfb7d65a6a2b2258e5317109f991d8afe26f2adec915921405bf255ee625ca1e1821d594f3c614934d8aa7c5a133431521fb2c5dc434d4a87c128072b5e7313e8af6d85edc0fe13234a664996a7d5075dc7714fcac6c5b50998b529a449bfaedca1acfd1246ad74237b73b9eb91b461a6f1b045c985d94f6ceeb3ead55454ad1329de24a3e0f9500b95ddf1eabbf53b114f5004e02d966c26535559ef2ec2f6663578fa79f197ca88ac84e6aa4c37163a2725b12b3092c33053b921cae88bb5f698d69faa83ddd3ee96f1b089b1fac78ad723536680d28d8d27b88b0f03c0fc3463cb494133b8e836343d3998005ac2d2503023f834d27d6b111924de2059616cb366ea17930952c76b3d0def2382d48d6e71c770f819191831ffec3405573ac0fc9a172abe47433b3fe691b5cf9de0c84c5d02bbe56bf5460fb2ca8a1c1d1e4523cf5356156a30407f6848e4fea66aa98a3e648bf49e6f03c112df2582b3b2498aa3968b22f4cf156c77a4a3283e12524332f8685690d50b08b44770797bcb27c913a663aa45a0e1389374ddda43586b9a59eace1fadb79c40a03134614e8374f0179a57d5a7843a3d144c0c057c4112b465679f32b27940c13d35528f71876473e3c64a504f4e71830be0afe740a3078106d9863a046a30878c4e15220de1ff216fe4f46f122ee3b9bdcf77a81e072fbadf8f29ceead5808cbdd9cca93310da6efc3f0d6588f46b3b557fd748858922d612e45c1fc5ed1b29af627200e3fae67db1789b8fd1e40c0682be5b5305527a3a86424592e60a6050ca0e253e21a4dda58bd9e8a7d85393bc544daa32418d6fa53016c5c3b65108a715be69180903371b3cbc05b7ba1095187146abd0f66aeb5e9a8391d987bf752fb53eee0460f77221d00a4eb87bd88a0252736e7fa2160d88f5f4c33ee6f8c356d957df8c8eb54ba8e07ed1d6d20aa65624290acec6371401a020f97ebf8639e1941b80e748e643e3315f726beefc0fea8f74702e027ab29f7f805c5776d6d67c6dfe65382f469ae6601fe362066401998495c2b3edecf1cd3f2ef800acd9494ad0e33a6a4b5a0d2248f893e0237b0d9acd0591134b2d34085a46c537d418639d72bd6d9de3e2d085ef474df7209f4762ddf7910466ab1d30b8b01e50620a38ac414ce69ca072c5fb3fb712b5c7ed5f0bc73e3c8203bf729a60b9438a725dc55cf9400f72055704f1786f7234fd33b12a6ba7b25a4be2a2d84e5dbac80b797665083415231c14a8b6683c4f7708ef71fdd0693555933c26aa48f9f741c265341f1119b689574f9a7349560d1592f0482c55d20cf8b63a2c58155a0322e2602216b78380991c0f38eeb99b87792e730164a205429a354920f75f00a33d32c8042f351cca17c178f34f836bc07afaa3669d9171e9c303e71dd9d9eea5b031bce2237190be44c9391a6716732e89b510f317b8cb87b4ad5da47bbe14a5219890e24bbe1894a554f484d45caf359017555de55b57cf79d4dd3d1ce9f511049ac50eff74f796d0dcf07eb3c95415d7b671222d607c0f9f25c9f857a2d2ce79b5e3fb526e01653fc178ee0bf1c0ffa19cfcb2ed5ed57ac1f8a59ad5abed58c243599cf398cbf515ed0b5b4fecc36b34ab132cd19e60b02fc2a6701fe983def04f7c469cb6971c726a96363f3a1bb965474f14affeff139b26e8ac4eee9e643bc5a22e0489166e3dee9671eaa5df9e4888aa67ea06c151a759904c9c72b884774cf636a6f5de51122cb3f4ed47b194dc6cdcc795e137a963c493eae6c192f5aaf8ec6cbe4e0054e18e99fba3cac4e25696c3750e1c6f5827e293c7a1ce1dcf4cee2095123c304cc4592b72497db7901272ed26db0c4393b5e15500b130a72605e54e02718cf4d681dd5cf01496102285679addb0ec3fcf8535ddfc9705ebff88dcc7bcc10272279275a79725151526f63c664bb340577f528cf26a1285451296fdbb27440d5f393d7792a5875b6a5b1340af39629d3c8dbbc1b6fb31519b0d1e595a482ce825d4f156b1f2c1801b383e8c2409913887bf781e03dde805eee5f5e795b57f6d38eed45e64056ed1d2d70a9aae4c2e53b1c01cb1351cbbaf52b80508433372ff71c8ecd91e18a9ffc8a51461ff8f3110849207bfa500ed03aed7240ae3405514027ccd53d6d88a74a2eaa6638cd8d2174652698392a088a94de7b9e32c652df7d3b3e91a07ee75c908023d0fec2500ffa3b3fd57055f27b111e52d4b0bef1dc28712bcf32f4e7a541fffd946d0ee22db7342ea476501ddb5ca91b1031cd59e1407959e091a5be4f71fd2721bf48ebf8f7b46bc6c7eb9375a5325339de304cd5be1a533ef7f9977ee7bd7b95d9a401690c7798f4e3ea5843d06c61298f97f72b2b1e55c500ed9310a76ae5e7fe0f591dd618b4135811256e44b3b831b1518202c5fb77c27b9305322b3ebe265c310bad323ea8f8cd822933c1834c430af8aafbd2efd43a17a980a26da5f95c19d5b31cbc3dd3a7919cc4bae0043dec41db90b45df908c98de9733429bbb9f9d6b4aaaf34d5b5db2abdfa0adb32a0eeaa5826e67d40ad4951e08f08e6e7db698f2d6eae3aec657d98530391d6227748273c5d47c259f351bb8953f7683be82f9e043e4b8d402a3b2a1a15ef22cfa0b656706fa6b1a5eb0c2a29bb63dd1f778a186e09a8cc311e980328ea0ff5ec5fbdc882c8b73e821f4dc814255c8db90d8a567ddcafe4b8738ab205f14508632ae2e2d155e9e79c0356d7f3c8e669db7fe8b353c03a716e6280e9bd71e39263c10fa27e0e5f705986312785b1ba6322d08510c5480a42d784c270f2f103466a06407bd264b0bba850e044035fabb5a6bd4ef576c9f4efafeaffb7949bab4a62abf85d2530a08a30a436b3ff49373e69a0830aebc9fd46364693072a1c7823613067cd3f130cdbfddb28c359b509056a4ccb6aa53a62fb95fb8eb6d7ee82bfe2501823fe70fdb381def6baf4059aa9133daef730e4f816c3564e939a26f42966702cf93a386e07e5ce064ceb0d01314dfd224838a745a870b63abac1e1e8438ed73477bad67306193b8dbcf0d32f90330beee835937a86058fe4acfe72b4bc57885b17bc7448a6f3b15e8215e28ae4350ccbf550d4c480b8d74770f876349699de619642fb3ed031865cb5b43f27dc54adbc222254663c6ca4995389b6a5490904c887fd48b507acc6b0d0c9a07b0803d7f9e664ccaa67ed5d9468e917451165e9408c9c632a3b423037301826302cf8d88d1de2635df36fe10c8068b8c1ceed00bf777246b52c37406e4cbd3a82008f7a48019790dd2be584d59f98d2ae8423f46b6839ddde4d79d2a34a319415ea8fea6bf4e8552c06565e3bd6741dc5c3ec85077540798d54b373f6e17fa05762b867cdd76a9b69254f38f5804f09f2120d99407b80203433a508638547cfcf057a9ea649bea8283186295556c3a2ee6c1ffc5298b7f06c6483548f3435ac2c9fc1a514a3988de7876146b391f6c5de3b1d283489a8e4311eca5f727da2740a0362df72f5c967bd6ab37b836b7fc68d5a2e95b425d40c3a49be24f5a53a049c2d992d744f4db5da063c7b395b7e5cba5f32c920b2ec112cfbcc2083ee2ddc06e3f4840e9add7c399b0f73a431a40a50ed42308bb981a17a46686c4d547bb63ceb7c1b1e7715bf09c4a4133c2e6edc881ff11d162f24fc9a38d56fca05761271ac4563c5428f72bd906091d70b0b62d35c26930f79e9a8314d969035747006b0ad6194a46bec96d7a19e3129bd55b9b7384b399f9bbbd10079157c8def350d425ca0749a8d51a50e2ebe01a8eb98727f0f57a935c5c9a6a23a759f92667ec37c2ac9d0860d4f511eb20369b22d79681ffbdf60571ab38d9c608fd7d3bd898a5194ee78df5b486c4d0651e311113c01843b7fdcf5e61400b045443c2e2374f177c22967ebbc07ed50bc61151f9cedc8baa46881bfbfd94480e29b848a5f7586b37689b215f809d034943a4884a520aa6d765689c8df1924c6187173b7c190f6afdcbd803d741e31b0b4b5ab3d6142d1353e72ea7b878fbf2a283aee12390ba64d0a093d318023b6f3d8d0519a67eab76daa42f40d328ab7559bf602bad1d37cf45c8450eab4a8fd3c088da05ed5c06da818b6b9924fd17deec11123311791a77d3a4bf583402f73f78bc090f2331d1f15f79215e4db9c3016204fcd192e5473cc8072c6d64c8bfd7ff1c3b484d424bf71d06dff6d0c93beb040cce8474c7efa758d34e80d6a5cc38eff55ad3ed256549caa4430c97d63dff8d3f18f5a3f219bbfca4bd10c62b1f7be0446eb4455eac4ffe4125bb267ae6ccef76bbfafae9af6cf644e03c6ce20c181df8590d1adf40114f1e7159a7fb4fe6c1e826413e7daa6eefede36b4f01e047e6c4bbcd4bf7eeccb1c78af25dad971dc17a9b1bbe6781d4031fc695e4d763a16750596d04205d1c729ba67aba63cf226c039f1a4acfd2636adb9baa979f0b380dcad97ab5b4f925266078a99a95dd8b210dfa3cde5c25737318884bfdb8656e7c9a3e141edd9257d6c57d3bb6ca13acd316dda0cfea04a32605bbdc21c370d477ab3def3b1e5a08a495fb158532caf18985530f6c11ad6c82901404d9d02ee9132761a5fde518f4220f08f2f02f764fe23894728260f173ef4cbfecc26c30cdbe75fe412eec39d6ffc409762c0e1510e762912efadb370242d1147a05d63590827eaf3d5665f886174bdc9f7cea3ad57320597e5803497ad20d55250cd792b0adb30ad168aec3a2bdbd0e5fa35654e2a8ddb6ec406c8ab59f3325ed7b55c26c99e6177a098ee9ab17a8a7c719a0950cbed47cb55197e37e51de8b233ee6fafb25422d82e8996e92d68d8db588184e2d8ed0d41bb62ba3a60817e0bf3cb1a0e47a256a9f9f9f6e2b8108e7c8e768043eea02eebf4b6052d2bb59f3ec077e7fd3ec5ed7996de8341d633ad01db4e7237fff58ffa648b2ee7534f9130e181421aa8c86188445e2b02e3d5e4d5c66da43a1e527ce56fe5fe448631667cb0ba5231c96c57676d483ba3d990558a9cfaab09f28203a25b119720bb64af4c956b348da9d33160e6492d2c2efee8ce63e9f6aa2ba7655f95f1a8355fbc9d5cc6380ff0930987117779a05db8c00c89f1668c8d45c6f365b16c1abeba14514b9318a8d18c5c379ded016eefd98c878cc02713e56dc1eb59c0c59890d0d163a4fcc26580d39db491e73e050352c951e6355657429704ed89615442acf178979897686458646e01181b1d7455d93bfa4bbcbf2c69a54e62b7f237689ef7f15ec2faeedad91c757bc90f961df570a8582898c0cc47a550f5ad230d67dd842a5e1e51f22ed154350b0ee0e3c7d5c0ce0fd1b122fe2dc659cff6c116a08c9a2a217524f1e6f3668826c427c5b3e9d9c4e0de2377864674d01291af42ae73c75b4bc955440ac65c9d91427b312337a3b02a0b53a4dd222be25403f51bad8d5cdb3ac995b39163cde868871de9fa587579bd3f3391124c5f022f9b0a4b9f52d7ec8c79fd746b518f2f2f0c6eb2c49bbfdc3a22983e3f54adabf02f2c0367448aa5e2ccc34fccc319b79b5616304178017a818a974604462eeb5cdfb0e44f8ece97e11b36532481494aa0bf80ddd2b9550d4f9b78a95ed00e41498749a3dbb4b96bd9e450ba97ac2790027652afa3accc81d16f2cd6ad0a1f7e56f883053d5e00950797d4f5bba9420c784a989366d1da6c9641057e7add50e8a645b6d300d5992d0da085cd06bddc783ee7e7fda9ea5e4f20233fd7c1f75fa152bc8d889b160fb88ea67ddf7f164c17972703fbd176ecd116db402491e9a3d31b90d7d141daac2bf80ad889f38386ec4596635f4dc18ebb3599c58d47742445b7cd7d75408451739e1c6290ced9910b7fe579f9eb17e7b48b549c8ccfeba73b6fd0041e0acb5d39eaf4d09818e5baf342dca68db3014fccffda453d61f0453bd0708a130f57db274aa8344add07fe1e5838d6f52ffc8d76dd57ffd8e0a615c85a98095ebab2262a34f866305684d990b4b07bcc93375811c725c7964450531003df29a50f3271b4e864689cffc802a18334958b4c0e7f3887280b4974f26dbd4af43720243485b6b72caba2da97866db89dc6c4253c427d633e008b3fdc60f4807ca704767c1990634c339fcca167a0c62ae4b5e1783fbfd6f6ae4784114d17a3232f242f629088ad95dfc40c93baaf99181dc57c254c327e8e376d951830cf26e5a8d07b93a1d3b95c52a93e1f6a4de34f71ba0a44c59e26d24f46b8e39931cbf712c351f6d161af5b5557b9311eccea2de1a5fa6a2861f40695455b5d06e31e22d9bb42318684394d1baf4a0adda7c627f16132320967eaa2d8c14d624564da8863649ac912dfab51c62e3b5c965875d56dbc715c44da7255b34a69e8b2cea5a2ebdf733d5b34f9e4db9a37c4f08ed1c966ead3de150943a5646ae865b50ff1005bd9c41ac666124837197733e71cfdca2a6eaa064f793e8b455bfe718563bbec43fd87dfcfd87f476d3a4503ad05dfd41eee259f6432b70f474373ebcd6658736f81cf3ffa5e8f9c551b0de5418fc1f3bfd10f7a101c9ea62791b0e1676e8c5c79d7e13dae707ad89c7bf04828314ce4ba537d69f08f83550521d51e02f9641bde542e9247d1be4d77187f38ec0b7b32b5409dd295bbf4f1748f0569549e408640c27e0115fa781fd9f9bde599110c3e7735a9b64784e3eadbda045ce046d362fb1caff9ef209b2f61e307f1a86655f343c484a035fefe1b87608d611ac1e063417708c9857b469c181c1b0dbfc40c97784896858ba5e4184a8179db4a55b089975723239a421d6d7a84730e19a43f72331323fbb63d5285d89d109295a399e56ac203744d70954c0ca411632f492cb9d44e1933d9a781af1f6f6889215ee865a7ebcdcf4d1d4a02ea41234c3837960f7c62fba41f9d56b73e0f428b0ccf03791060311f91f1ffce71d8580a47ddd31669d4521a33a0afb0c504dce36eda1a06e89fd3c468a1c3860f7f0a33ea5fae663de832e76b5901613e1c3875b464aba171b7a34f7010cb0fed1aacb750a8a974e71b182bc36b641d8e38482732e0559014a51b7ea43bca8bfa44b2c9be802b89a393ae4ee9f08d30331f226a19b35e7518c50f90a2e37163616ee61adf7edb5e6d7b336b42e0baca99f6f0c396532e1b4dec1fb9c94df0e2977b8e6fb3f06fa2167c0627155a8860d775635c8ab42ce0a193686a1fcb478b6a9c906fa58c6b2818bbf47c332e9d07df65da707585b0ddd7382b2117b0eba660c60170d2dd1ea441749a37c5e6b02d272b4de8301491e580e59c494f30a3eb82fbbbeb3cda3ec80013bab5c059dba63b497826c5dd5c3765472b57fda8b12cfc78bd1eb67057d1ff0d46e2aad339c85539d53af49b62908cfa730324f4cba189ac8851257a6b69a376e82aedb0d4c433a1952934bbe00e3793d9c0544aa422d855bb098a36ee8f126762edfdb63bd74374d20f6209a9c7da2769f0b1cb724d34d4bfd3b07864a948be5cee566a757a61a415d6b0b68f7ecdf2b8b72052dcfa49b926d9b6be5bdb1525b5a62eb5ea709490fd8e7360aedbd6d56e970c8459230ef608ec8d201d588481c4fa5955c93ba306104e13460b7a930b060bbaf6dee487c92e51fcce20a0191c8c4455ca42d0ffbcd35ba877926fbc99b37e6800659ebd4495289ec89833de0a30c36929deb402ae60f05391e6bad6fe0a7b7346379bc4b189854ac92b0e0b464016e947fee53a31d954db98ef5624467c4178fc813edfbb4c931b9594ea8f843876b7b75823a0af89459a1a09deb15aeefc5186801f42bd3c64b329c2a07681d2b90917ac7ffb1adcfbc6efc23aaf752871ccb9c6193fa6f5e8a04b514b9a6ec2c4908df5b9878c54c2ebf33fb5ae931f3cd4ef7fe2c2e9ff4b498e6550c7c32739e9b9df4427cbc2d1e06e6f7c18e21599974ced266efb6ed19b2be4e07c38347d912a51200667866c1dc1330cde98460d783f2670e74cd6022ca6ef0c53d0e8dd348e20fe2da8f4298a5ebf78a9596fe83c80ce1871cbf59670a01b240f4ab01312e069c67a3c1b4d8040d2169f96ede8b8113f64ad03869caec5ff0f8eaa4a45199613d0b8fee0fe0821e445efe68761a636a5a17b5eedf4cc59a754a3ccd80262ccd2cc33b1a05c3ffca89d64d0c0dbcce21484eca625bbdc5b0fced84f0b0e84322e835f16ee8258317f3283b7d8e517410d412ecacc4bfe1da07da1d6202a71e8d599e7c753a5a631fdbecaec0839191b1d562557aa5520e40749af31f2297a35a89fbf47b3717d94ab3522b09a044448a6260342c34df56e4da943957c42e7ff730a89b5166567a223d32cfcc6855cac994abf1bcbb9c23a0d017b32f15c6d8085f6e9bd630fa60e3d81af558c615d388dfaf3ecca2af38f4e0b41c00312ed2dc1004f131f35c1fc3693e77ba9799aaaa03c2b60b36fa93cd5d2f164c54f7958b0075308aac3890ae48dadc1fa3211108e5b6242bd3798bf8f49b1b552469f55eb8185c4cf791b3e648b8953db9e2ef0d64f4e0bafda3ae6f9562997a968c8a53947665ba348b5d5093c8bfeb279b7b1d8cd17344535f0a0103595bb8e54b5754b9a37ed6a850f7b6b022492425429bdb88f83ebcb1e2a0982e71eb9e4c79e49c1b3816f3b3c02782a7b011ae1f9e9974081e0542256f366ac3e433dec05dd5502983c5f17c8c2a7d68599275e1ccf20e227410927d9e06bd72b82bbf5c3bd85101d2d202b33190cf7d753e2b94ba8043ea8192d17e11a0bfd190593b724e88157f5ada9e2a579cae4708e14d7cd0faaeb279feb12cb4f64104f77c569dae429aa6355cd2ee8e0c3637b0ce446326d3f4431e4fdf86c4007cbbd94a5b83591c292a7a9efcbdd9830899db632345d6054a1a43ffb9b55a4b29f5f6a6ac4a80aa50e32c16df4f1ebc61868235e61af5ca325f5592038d5f8ff17eb98ba49e8856cfe4aaa5dfd4852d85007fbd4b7f4e87d1bb477ab41e6d83beb3c4d8d38dc9fa1d987595ee6665ee8d28b257a52e40219d4688ae155a096b9f340513ee617fd5cb3be28fb6051a491f76fa9e1fe6c78234b6a98a9c1fc030d1382b5ecd31c6e285dd33ae6254262b56c138aa02cd515501ac6a2ab53b3319c1526d62f1f75c89db88026c00449ea69cbacd5a4972ea4853c87268dc9b745d8451589279788af9599fd29d15dd7f3220a26fb14bc9103effd1864e8b0a0f67288ca8b0fe9d54a0a52d5394d5ef4c64431a6252cc6326d57b088b8e5cb64319803a27ee1f158fd931d01466e8cee43cf4f7d6171f14f578bf6ebc5eae5df12814c525888c0b53590c2c978f0f869a8a9dcfef2e0d2462939d58fc7c1d0f43a27dcaa5fae0aeadd759f88a553e056bf18259a2fe29e2e8eb09cb36f5cfa468c3bb078a4a119211a5146815c6768af74f89af4e9005ee11191de42ff46a8900b73d8bfa2e72284d5b1fc7fa57419a5879b073c5ec230bb3a6ae9c485c0d408ea57824b2eb226d63d45b3604514fa9cab17d01b43b8462589443a2a35c371efd4fe9994b76207d66def1ae3bec549298ea4a3bfd5f2a4985c1001bfc3afbdd7c0926dc48248466e0cac6132f5f76f3cf3d98f847238b25f4224af8436e4813ef080e55d302a299cb60d6168e98b2ccf2fac0d2182d86b13b6a364b546b8def154fcab74c49ee0d106fcaf89d080e0415436767cd754b8834c57c4ceb703b6e6b68aea46dc62580b7c991a1a0e10ab04423742fb8e7bef5095dda047577ba4a9d1209936200f5468f367a31b86eead776ce840effadcfa9c7530cddce09c878ba63dceb51b946838c70954057b7972df613b1f28b315bf5a1ad613abd9e4076c5774d7b5c5d173b0492827ad5aa3d12b17ebe34530a48041175c6613425668ce7cddedd5bcafd9c1fc6074f659a612468204d6a8a942bb3cab6e4e337e3daa6bd035f6745bb2e9b8d0d1439905df63f283dd3b86ed4bb91ec00e76de53039a8dbb09142cad2c8687e2bb1783354bcbbcb6d692c0c6718b6e92fe06021d50b4ffbbd4ea733aafe04d746dc05eb1b7368d85966421448e7a86696a011372f2f4b94c7164ff2434e2bf74483e4e2826f675fd28cdb5be3efdb9579a05fb6e6403f3f91b583223f4ad3474853c46c8d2a599893b3b9c8b9cbc903add26129026f316d5a53c4d1a8f5dfb56c682c8e961dfc189103e55a10d0221a07ed169545e6680351c021a4bc61d3fd63d389f701abd29f8d6158e3197b2960cc50e7f8683b9ba1235cb252ac4f61461e11d1e184bafd3f096ca623ebea07222d3e9b6d4efed9d534fbb2dd4490e265f7a858eeef3b668fae2de5e0d4fc3c4e9734dc330606df06012e5b93c7a0cd9fc7b83cbb3c0d0e2693dd0626f30fe9127a7b1fb86877983652fcdc328ea60ea40126b7279d428087826638d103587779b30e93cddcc58cf26173e16fe3ad4cb2c3ac91315b7521b375a49fad3610089f43712cf7b90238922218cc38134087fe6629a51c5248b7065006ac3743013b2bb3b75203c9f4de3dbdc728b4f5fb8b7b917546bd714884501d9169a33f06b7d82ffeb392d38213ca30651220f3a3d25f7792be55fe657b10c2df610b082ff6c610ad32fcd95ca003ec6eabd634f7bfa884dad8223fff87feaea829d3d09424e0c3ad890693b516a8d704775d26a691f1a61da6e17c20597d492425b993eef7aa41c975fbf096764766138d81e2ee27c61fe4bbd670a5a1d0a291bba3a5e1d41a284158ee4adecb4ca440bdb7fcd641597363226a271e19899d2b00e3baf5bcba89330ebb2db2d9d1962c6a8daaa7fd91d89165e29794572bb38f6c02bec951f4703acd09ce671c54c267b1da236641f6c4f2e267c4dacb962ed140152d2fe86c3af68ebf6612fe7ee2f8efefe691492e7f23ca907f14656005c78ececc33842ff916f4b198164f8800373bdaaf7dcdb579e729bc1571e8bdee5e3b8b1f901ae45ec09403465ec09869c186861ffffc5b233baee5d7e282dfddd469557dc1cce40f17ca9c606e24ed53febeaac1573acc261cddbb041f0325fdfa24107be6b8f5bf3c7d9593de80217a4d2c8539ea3db62a2bc12dea63f4040e6af33d889abf2656a434daf236deae46d14d748ac15f74e8e9e54b8579e182fb1f304efa96c29372795aee6a4ac1b29fc80d56af9ac91967a36c1b01c2fe3c5ede0da7a8d2338157f62b47ad14aedc2ff7fe19dc9073014087134d2884690236cb3d9d6fd6f24db229df5f04fe92bd05dba9c37db924e5a1ec9ac70e6018485f6e85e1114a8613a2b5d3114bac56b29f44b5d75ae4daba0422f3b3197f3dbbb5a343a26ce0c545ccfc3be9f545c1ce534d3a6e445196594c534142a285434a434a555c0d503330b4fdc2c8f2f1eff809238f46052cb472e5afff95e9f7dc71861464462377dc583a3f56746f6269674d905f8568e697d73907f31d346898455e4f5fb6b4d4823c6f407260ff667c67fd314fedff2f90a1d75f8ed31c7c66f88b892002a08d98058bcf6ebf114322a2326dd4c671babcd8629b599de92ffff970d8b3d6e74768be69c1ba71f4ff56a499a7e2ca7a09697233afc78d0814765bcd8f8b1f6026b2530cd2e6a9708ca46adc2f0e5a67063d86cad6b47aada605a61e8bf0b3f974f2e2eb4beed5bed098429aac6466e278c7f3932d784ff31d00557769152319466a1e698f39da45e4761071eb0c4157940cea182ff4c2a3f628b3954e9d8e2609c822a0f70d2e38d4eeef34599ea43cd4e19cebb38097ee250d908170fcfa5a03348640c46e68e4a924ddf0fe3edffc0355b40b15ede32b5ec4da5ec0b772f40ac2cc2fb64ef3b6a3f3e83621134687b409a26b52f5ea27a8fe15ed92e90a75f3fa3248f26416c079def13bb1a0256e3ec00d1684d44f9965246546c4403fad4686ed6ae9aa11c76ce6b70d02f94d3c858e0876f3fef7e0a1a2ab1da06c75c47c1914a5fbef05575b790b98e229a1afc11f0bee84f84d96d4c72c65c7fc40556c5f9fc0f0c0958dc9cd5b9392934fee3b164cd56a2194db6ca766bc17b142755fa90ea12b89beb6c0847b730f353048ba2fb4ccc894225e2b6a5499a2f5136559c022dd921ac11acb5346de7140463df459aaa7a4b1d6fcf632c0d1e9ceb2e267152fad22c002c12a14001518a2935e4a8981b7db920729cbdaf61a77928ac9a1f8ccc4d2d31c2ab54c44f223da5deb37b59e11538694a9a92c48bf9916fecae47ad343f59d1f9e6a5fe4eb74de5b20f839cfc829a1ca03aeac35492fc89ac8719ae6a92400db886caf5f480fc5792d7297c8ddafb2834985a540fb93f88701c8bbbf9223679d37c9466767945d20c3f4dbac308a33c55f0b584beedbb67bf29e46fe3f48351320b5ece32a371359e673d6404738723885eb5101347c060a187488969c2c638890993d824d92e0a647e040d8d23507415f71a9ea55a8c2e477f4cc68759f9fdc48d2793e481b220210140f3a6afeef5ace72b8eaf351a6414cb353b758b16ce933d6f1c7ded5cad0e0dd6ad130755628b29c24be637ac3508c3f47ccf442c211248505998461f76bc73dd2544a4fc2591e727eb2c8a0bb058a049daf68316dcb01af40dee416be38fa6f037aa80d90c23a5edb184bb1611a750b16162bb17a61290dabd3c328318ae97f9fc37a0a6564a8b30ca1aa603b6dce012360e2a435ef922ec93f7517e880b4337b1618f0cb9051ef533d66f0f75015281e9d097073b6923c0fda389b34b3fcccf632a59891efd398d7ef1d748d406670b18ff36ba5d6f1dd382f743f77a3891c7bc48eda0bb4f1b1d4aa6fd0af5bd16428bc5ac0b92f66caa8c1ac69da1f7fb781ebe6d3bab8306766a5ef541069021b0431c38a54cdac3b642aa748094cc675ce3c464f84c58e9b3382b7af83da255c3c7c0372fea110d1088d634add1a8b6f28e2a3132b50df1d721c2ea130e0a3ea74a042b8a26da73468518173b417df60b4ad8541780a87cd0aadc1df3512bc38a87d52e1f554f3fbec091e81c5c48e4121850d758c21d4dd7179b9e8b68f87600c295cc694596ae0c2dda61c2767a96364f8cd0d53ef0783a5414ad2485215fd34637af1de40364cc28f9f0cdc94945019a339d6a717495eea40da57690eabd5bbbaca5146394ee2d6f3dd1b812bbb541d022b7fa86252edc7f3f4fc49c6f96b2dc285ada123d2453504f5eb90da94c1a41aec56583c03d53594193ee89902cb9fd876924262d6e65de741df299d8111e0b44bab98cb3288a7af24f9be24dfa8b4f4d7721f4039e80a72bff4e97d822289dfaa59a0772baefae33cb3f4ea4a250867d199f45c1fdd0762074f00056b8b596bcffcfd9bcb2c0d76c495d96d9d4d476f01c497c209ce29dca0e6566716aec919b5df5833e5880753a2195e5a86c6db904d887e1f452303000ac2caea84501c054cdfc57745bb16cb049ed561b0c9a3bf1cdf45de419dbd0aba30111015a43b93563a38d8ed0e69c07a4d30be217c487c391f092b2487c88f2434640dc419f65c9aa5019229f54d546ccfbc86d7b24591ec9070d33162382b69c46e8b5c9c7fc3339c3234930c1a9b263b93d9502d91964d9fbc1b9344f3569baa3921aa5cf326f094bad9367b453e75c287d4a484d51e36f14bca5a611e03a7bda97f6c2b3cfab1503c2b152986fc44256d857f829a593da8b767678258ba272f1003b835bf415ab56bcf510802b0e6c43aa1accf82cf36d1ba8c9c76b1a72598d0cd56a0f0741a8793183ba49645fe62580e269530db05648497fe3cd0351846bd27ccbdb1699eabfd90cff6129c2fe03739a7b4c0261bc4e879e82cea1093b7342404c4d303e11a6138e5bf0edb5faafc2dd36d4d11923bda2464373d5b3b6b4be8b01cd2f5c88ce4b1472c26eb453a341097cb2dfa0b04847e03b084767f34b0343fdec1a818acbd70b4ceace8668c68ee08a8a01d3997e5ea0f3bf38c37eeedf93867f086fc59ef8ed9ec5f633b6d56ed2c76a81f625419cf3e08e07e7cb813286b02b2b58abc77f0a104e0b15d3e9489758636e2f3561d95ed1b104626b96f6172b703230fe3b27cb1d226eefc39bf0a47566cbcc90a5c264c545c47ff9de3a112e23da60d2a5f0dfe7277642989ea54e22f640a09954e8a36324ee73f20aa9cd9ac11c4f644b9ce2bd4221aada79dc17881fb41d6fbd9066fda685a8c57fbc7b09d6b85710bf29270444469725baec1bdac3098c77e460d1f39d26b323c5c41999bc39420ac7f1b4b2540d92be4d8b04411d9ebaf3e8ad91fe184c4895525bb659e87c0591b3283ab16956df5c5c8357fe2a517f8cd572e97b123de0e8ca3cee286ab491da2ab509c0fb124c56200cdfec56812f0a58ad35811f058ceb4fa941b83227b9340c021b5f5c6c51b182de73c624c5662516486806c3d4eb5c2e68517ff44a15f4f669e9d617d7b0d79eb9e7e56255531c9b78eb6411ab9d90115fa2172449b0be07debbe576f4e01a6016982c5ef6db5feb276fa6b720d1ebb5dbda36b1b04c18cc5f909a047c29dce897b2a30536de8836552d896e234a28472d1ce6a664cf30bce64191e69475be2c41d1476019b0d830ff2fa209328afa588f2e70898096a8e767b4ea134c4ebc92110bae1ae0680a916747ab073b6890b53438a7270f1c20cca99d8fe99198c3d98248d0759f8c65983adfc82f7acbdf9eb8970f42c319c27f02be27c15b52fd449264d18ac39bf290a7ec8ed3d59cef5c333a47fe7f80d820c009f851bd3648ea301643f158aa1adc4364f52f2d926ff3aa38aab39f31711e4e8d2c0f345f5a4c12c5a8e7aad3a1203cc780322ca042a0f6d26cc5683aa0cfd4edc7ea914da0a7517257315779e3be16187c78f9e08fb77794bdf9b17694ab2e7ceb9573e9e3c6d2d08955188f292b0ccd67c0fbeca3b3b3ba34fa45aad03d775cb3fe2d9cacf441dc4665dff7e8903f95973fae45d07f7358292e3fd535bc80b84b84a1d3dcb4e38e11a10e9d70b25cf0283a67eac9ef94fd19e0dd236b439c8c6f6f3c536bff057fa40501bc42b29a4071d9de5d23035d5282473f1203e4b7cc6c9396db3b433d0fcde0772f9203556e1efcaf0e9ce86d2713db9db7fbd147ae12cf22bf66d914fee058cb7e7edb9f382d634bc81e63ad87754275dbbc27c607fbe160ebd83dbb5ea3dbc50f35c359e1f32b3eee876e1b43379ce67f86dea0b89632852fbf31e2b1578e3595f10ec0876cd023e028c333e9d9c17a65a6177f7e5c352b691d6864b6503bcd8fe057513fe44a139f34fb851623b9938453b9c1882cdf763ef4972cdaa21b08fb8f8478231ef8718e36a08aeb525c41ada91e08b2f497cd85dbccb6f0e93306f41f20355b495b32b6a8320e2408950d9132958fd9480d651bd6b76df514259d78de3b0c069e2104597a3fef0f85c7f36558eaaf03a0036c3feffa245d88fc1b421b2bf9355f1775beb188b361c935c3abecad3d3dd32dcfc9c6cfb8034cdb7da71161ed6450485fee362043a306f27ee94188ec0dba73b8d485e87b38b2410dba39b92750bbf8608cd570325db30082057f26ca22a7f1a16dcf29feb822e87962babeed1b96d770e7a10027cb85e781cec08b2424753e2cfe3c8347da2acf130fa4e90a260eee045efe7e13ea084cadbab729284e08873de25a67ae81a7fda0effba939c529902edf70f2dabd50585083d0657ac8c93115cd081205247214f8345c4652a3f662c8ec986c2ba645f1bc6b6bfad19bac9b7e3f444e057839f499a80c977cf0018698630fef2eb19561bd2f8358b313bc59d7c16dae97b879cf4b8ca74cb4484a2848fd7ac60624e7fd289b7135d159a096674928e5aa97f146fe46137e97e7fc8b7466294cd35299b389a1ba6a47e8ddd3728de6bc01047ce7b72f0ffa7a7cc5caef1c4544d44be1d14407997f461c618a9576a0218ea99540857b17f7162764508bcbe8b8ec94f97ceead0314c6d5bd1e176fea223144ff03c09d311abd2998a85698c7bd25004cdbc34a3138d1626f92523e5f74c22a56eba26ef4b69450f9a42940ca9e96017f470f87fbfb39a8d7fd3b103d880adddb642793dcc4be0d6e09c29e40f1d98c13163f05ad4c4cbbb05d521de95f73fbb968fd379ff523398fec659628c47d13e7380ab0f113f7667a5f1a3aad5bf9b0106576c2b3e61d2d58b6bac032b91d3e15e368d7f4a48c95dde9a2abeb0586d0514d0461b4a6cf80a7346c14fa3064046b5edf13d12068633fe173b03e4e6849540a952b4b3bf124d42ccfd07b3ac0d6298944be5af4da30209e056f6bb17b87aec811ae73d7969b55c33af87629c0cdd1af53f476f3587b9f0e08e8beb89bb68331cd0c7cecb574af6ed683be41ed01732b9ccabff696a081e52d4f480a438c0c606885cf0b217e5527dd8fb47b2e21dbcf934d48dd9e7e90bdd676a50cb399acd3991d5dbee42b24b1185b00a5a9eb53f2e4de1503a39a4819e42b9afaffe60c895c93aa4a3d64e17c5adcb328f61035483ae4969d8325effffd4a287847cdffff52cd05334b13723fbbcf5d12c6cd76e995fb6ebfbe342cd6eb3b49b751d5945864c6d8ab820717de522048150d9346b360f563a3da36b6846bd3e257830db2c908487f52cca5c1c3e3e5a75891e2ec816a58b2c4e2489feefb747c9382b7fac749c5cc3fbbd528bf71bdd61d956777975223bea425d857016e313cb7613472e70ce8f10a5bff2aeb5ad96fe01ab38dc6b33ef23529f0fa7798bfcfc4f907c74d3a9073b290172579419607aeebbc577b88a7cdf1d16809395afb33bbcb921306b57813f846754d91a9b81a68bff5c7c05d854072bbe55d823de457ba65b5079943cbff43cbe9eaaf99914c38a19596f81f2c2e65aa17e0875faaeadf6324f379e214d3f63798d3a8c77c71c50c044894073511494c2d1d3e034a7305e611ea37ae4d63e4ae7f63a7cc1163b104464c4277c919e32babc852a7617397bd92d7711681c33e748e4d4e6f0517247e884507621d83515c7fd4daf0fc65327d231f86d8d64c8b154c9190997c1641afbc862dcbd143d7313c6d737f6fb5ffc22c6878e39b3f2bd41e8e44bf1a4c8cc74616d9ae91908546139fdfc117cf66820607d01fda4dfcc3cc4b766792a8ae9d89fe2d7dcf3fa58314988e4afea09cdc40e74cd5d057278d0d4f1c639191248f9205d63687099b8d9b2ab1ba2d5a8416784e05f5cb72256eaa69e7c20e5899149baccb25086d26d8f2d2f01469b3581ba92832ba426e651038481c8285086645957c2bbc06cb3a2068b4971fc4f6e6f39ab49d35a7326c5fa92eb0a787cfead7c47a0b9e6d6a124ea70fcb69ba4eb92b4422e40059ce8b1107d66430b89019af4680c9170be4e79a6b92628e5ff444ab423fdfc34b8e567e94e4061bdef3f15947be1d2b04f59e03d2010b25ff1bf0477894228dddf84f302cb7d8b76d29638573d43e658d5ecdd760e25a6560f7cd6bb511ffa32574bb91c1ab417048187a6eafbd037aa95736fc7217c5e7a13a18b9eb40be4796e82ea5c052362fb3de4e826c57eadb2422d6065f5400a904f962dc10c9d276aacb6e46d7d54a76521e591312139949d071f741684d74ab0044a52defddff289fb5e7bbb4b08c2b679079d45008718517dc185bb67a9ddc03fd23f1375bcf98ea8eb745c525409aa167fe9eb5e048d5afa4966009ae90b69f0d51b8a1f1670fd9176e90a3458ea4f3f8543735ae97f461529cd56a88dbe9b0982595f9949ccea6e7e01de32c1b8455465e97b238c0be1445e8326f6d497727190ae2c9c2a0407d68b696e85b61c893caa0fbd8a0f420c0c1ebcb1dee0dc0555c8f29387f3d895257d00a5959559378add59786f46c72aabf060018a7fb6cbfe1b0dcc4dff2bf11793f85cc5ba38fba6e549a289f49fa54a64403c47e705b2632bf71cabb2929505f738afa31e68e07e60617aa7849d03c8fe6a953178d63ab85ee0f2c99c8216d551fc6542df84ffd5f4444d8e2226a947b38d96ef27b6b7833980418aab13b9b8ed3cac1d146c39d88562f5e0f3c4e01a63a8714c52ac18a30a6e265e74df3ea732cc7dc493b1dc9fcce2dd231b708b8a8bf65356f98f5f81c8323fd18ee50d2be4f7b8c5d4cb22a05dfac4d96cb0adc5ed9af3d7d21daa56fbf1534a4c0a28908c00da412de2b199a73eeea4cafffdf58eee62fe0602ddd62307f66bc758de2fe11ebecaeb9204e946274de6ae1876eb8e734a56bdf41ab73db1d61f79258bd2d7bf1b3862e98d5b7cd5946220069235db8994371fd994e452d1159d0c50a9719866ca68aa7925032a7beef0c75fb0304628f624aa74a7c1e2d5ab99ed8b7e07e0513083c083d439bfa26f4cfb386f2372164ef4fe440750a62d640e8fda95a50001ff3c16f8cf566f53a55782b9a19e6771e57d635d81c18769a631f8e535e25327689f5b302f6c2edb1197e00d899b83b3b64df10576826b31a7528c97dfb6fd4c7766652cfaca4e0d4347bee417208f18b12496b78d482d6d6af2c8384f861109659df4cc0e0d8ea07f31a2f7c1a5af32e03cac0000a49651ecd11b423637a4252a5b0f8254cebde7860050a36b21a34231eb927881d8e790680b143602b16a9d2086fdf1fcf0ba7921751135020cb11dad6ba257abb2befe58cd9149975c9a1be218c8e3e5b04c39a9af96bfa3066123d089ddb17431432a4ce825ef3aa3efe67305e31acb741f57dbbdfb62e1e015676c7aaeb6433c5e4991669cdcc7d65b0af042123ad227797b50d2234792ae98f9478af0af258003da7d1901318e56d429c72b5c0c30c332d93159faa3166a6e59ead22f23c7aa7205171044a8274bf5a039d7d091f5d5d5dc8c02be4211d8c5177beee0639f38a65f2903f8ca375a9f83999ee2b94b3a45e9fc86e512b49668e00fdfbeab894ad1262ccaf686a7005325c4f96eb5d02ee08388b37b33d6bb8bf095c6b405b8609cc8de8cde2168ea609b5dcbb609cae1422d85bfacb0c8f2816e8c9b94a4a951efdc6c3c699203566208c3e58aac0e3aceccf68b1c78277e9af1345bf7dfb61a6bf1c31838941474743fff46d0717ccc457d31cbe04108f10e434cf43d4034744232b5f67eb82ef8077389f93f3f3326cf3cf76ec5fa41ad08f1e3f906db5b76ef4e192f2824db76bdabd4fb1500c6a9629ca06ac1b530612687a84bab308cadd9eab5f8100cce1e50af9955f03ffe28c84bb85d36e89d21a4a78511ce0cb888a07d934edce2059ee68474055d9d13a7cac28ce1ddf2ee6f8634defd55d5a9769f742dff0755f3b691cafa1ba37d68a01d901d31139a9f1874ba1e9299e385f195e86dc37ecbcdc57d6a78349db6a84339fb44ba792cdc9c85158699cc883d24bd52194c03135f4f1033bab5884a7d1f97ba800a2e117f196cd647be917a6335454e5fc113c8cad136079277f4631c39fc4b97e840ab4c6e6f34ea04d5cb334bb0b293916cfacc28225660dd344e4b6361327d7ee069ad6d30d5247739951c4e725fdc7e4bf1e4a917da86f28a7dfc80af25f64d081501e732db653b0451177c0b231e9e1b627a221586523783694a62000cbca1e5ab86c99372c97081665a7db79cfe91b6bbfdb3da2ef9a4a5c40e6d44d47867abb28424c7df51f60fe4feed2cb6cb6560234e17ac0f61d7cea8130ac2d55d6877efc5f80fc79bac25d6b40e4acce3bbf9fa69055d7dd203327dd99f2bdcf47c2781b9e42ec3e7e11bd0fbb73e600f0eb942243928ae81a3ecb2c61369e413dc9b31f4f6684946ccb5ec5af507fdd8801d74284d7c3b68eff57089be5696d953a2898e69f3be0546c78fde60fb9695b78a3fbb2758b2efdf8a1d722f6d2018728aa502f10e1a7a499825d38109e903a9b0eca247564438c5533a87f9041138f8139623234e3d8a02edeb8547f355b010cc1e7bd1f1f2449bea7d30c6dadc90aa9119e4d4caf179d90b8fe8b083062cf30da49368bc60c8c70e4ba606ec991e3957ead5db414e329996d54d00e3c6bf8b39ee73f147f3fa56b7f2f29beb96b7aada0d807b02b187f28a14a33ba75de7f8593c446200f1d81d8672aea50a574477fd5c64a4b5bda7de9e7aa112209d5fd1e9dad32aafa761f5ed96e99b6d854eb9d41ec0f6e1d2624052c220d257a0715d3276eb57283f683756bfd731b3f21c2f52e92622e9d493d1680a0b6dcfd4709d7b9c9b0a203f6414db7acca684c9e89f011c1d805ed18f8d12ed10ca9d41279d546c9d04ee1a24255e39c42f15834b4c9de3158c8a183a160ff113d1f543fc30e8bd1deec50767fe924c912c219260f44ed74921e116afc64a4ef4748cc44241abdf3f2f88523421561f2568bba4188f2628d74f235b8555e1f80d643c2f950fa3ec3f2494716457d00a8d199b59801f2391a756974483a2cba3833d7f1961e04fe025faa84a25b42fb0c5e203f5311584d84bc411e7176945eea43f31d07af04e472bcfc09ccd25bb94ac68bd8012e08c71a7765db41d441588693a5b1f91f90b298644c27e60e4f8a06b906c0bde2caaf484de46df2412b14f5c589d263cb5f57a237db2812efbe49629ab736b0cd2f6b068e3cc8ec34bfa9506b35d6296a75ef362ab656c66d551b74cfc95e80b8cd783744f7c0318c72e8a77bfff978d12249b04eb23857e949e92177eaebfa7dabd3c059c649065e09e7bc426582e0f9f5cffd09f600938883cb5e70badf0ce375755b9a44976f00e1efc0856ab0a0742ff2c2e18ff2955610a67087cdb8025b9d80979d840e6866062137e9e8c3f1d81fc95ee91c1697ad298dac8305b480d4db54519e05e9368f373158ec9120944797cc8288e60f9734d2d39b300c6c4503f3758d0439dbf419a68a804d9309c98c24cc10ccfebb47cc50c0aeea5ebe3d398ce72e548b8a0563edaaf128fc79a70f4d3c0a3bffc54af6de912434509744df1f9422d0dacd24093a498f511419c75270d58b23e707f55f30285627ccb2767846b77eba7dba13fe5ac83c9399c68b7ebc137951163f90fe7a57b7ddba371a0f4b63cb07b38a2712ac29061e5371c1b660e192adacc50d710815a0924a821b854b4112c6e4b74bf5eaad751330d34bc722c96a3e0975c491a49c03199903e3349de2cf021eac7b1c945cd77fa4b439ca30113806090dbbcba8f2b4d9dacd00754fef1b5ded2fbfaa3c28e0318073c8c7971e6449588c628f3ad5511719f5876714139ca589d07c60c4373df17e2c346fae094511b6d970cf1c7b25b84ba00e250ee0617dd33250b783e4de0ecc45d83d99791c03f72f5b1e2153f4584e0e16cba9af34f00ad3052b0d94021a5d223333745b5e0cb27e10bc7d48ad372fd948bd8968677cd03d167a053eaab3f375716a548948977659a191ca10799323dd7cebb3d929aa61ab78ebe95f8a552aeae6c136ebaff740e9045b98c6ea50e4e09809c3af7a5bd45a0488073aba2386d6f1fe14f3ece440999d6a43e23561bb0007c421d5fb01188a2de970a2e8d40afb7a5aa7ed7be12c354b4370cd0d70bf5f7b89032c9a4e447f7f091d15d160ff858387eae91b391914844ce938dbf960ae9a2165612f3f5c1d9989248b63e1cf7e5917a816c3fd66647e92c4bc19e8dbf5f11ea17ec2ccf5af36b0dd5f30b122c523482d346b57748b003717f90bda587043a075085d72623fcdba8c013580118f94d8874a257db516625f10362fe8318285593e89d1eafae5f301965ed1ab5cff94b2aedf9fbb0555b0be183a488ce86b8ba6fbb33750214a6b72237775c35e6755b86c5377a1c2bc678738c180bba2118fb3e7f739f8181dc72c7eb4f94a7e691b3823ded675693b70be182bca1c5fb7abca6bdf0c6ef71798169bc7992d664a0bbfb4b61d47544e28136e05080463234a79327a45d50a10694262fccdd33cf274e37aeb1e473f7a361a936459a29d5b5125a3a54537f58f920b9c99a6ba1c12d7445cb1c9f4788a09ddaf946024f2a9babeeb0ad3ab9ec016e6dc7cbf9ba06e6f168c869eb0835a7b06a77591dcdc24490fb75e72747a834825bfa5e027d6bf49b1a50a907bdeb7314b2cf3c09597664c5bd10ba1dd112cc296c55adf82b551ee3143dca47ddc8f0ed872cca0e6050df697b9b9e7d612161853cf1673bd1469427d08bd89d3de40ba54d95081b4b0affe765f152a9a2689012fc267633204605e5916789283750a515320d1a5c13c36aa817feb984c6afcf207b3ba9aa973f19b298c115e9201fffb691a106be21e88b52c15d6c350648bccf3dc609a2d9d627374b7f5bee59d39cb47d86a38880962d812a28a1df4fe7073d64f2eaac0da9cb11a294a45a5371242e2b22eb734e2665de38c1898a1bb7eecde0bcf22bb0b6904742399c8b6bf077fd44894a82069eb1ee41eda34153d126510967a3c872d404977c8935f751f3539f4b40b73be8318a41182e34c6b2eeccdbaafb865d7688123cd6bbb9d2c66080a45faf08faa644ed6482b0b5b0d45ca32b673b20b675c94aeb9e119a246703955e1a83964537cf12358ea65eb32df6ee1a11b01d3efaa7303951e33f46648a9397711ff62d85f4232f4e94394abc28b621dddee534aacec9319833478cbc902c8e6fce9a71b7b5175c939a34f87eaa6f6a7ac6ef707dacfcd7be6ffee52f287ced712a2b2efd7b2487d865bd807fafdec04ff0cf6dadf057d58ddf93de6a4216199a7ed19c9588898b33dab4f4938730048aa6e528e98523a1156aca635327ae406d32bcf2951a47f84b138f5f8ed3fd964f24614723e7505ce44bc46db4997010c98ad3458da7da31f979770c37235c17c62667e312b5b835b35d7d5e9b4ad870b523f8047ac0f672c3dab86a2fa321cc0eda5ed3620a4544638df867d8ddccafc104ce7471774852f9e3605d011eb20957191765093dd15aa36e47f3567ab9680f19d2435dc35cf70f6fe27c88975df8ad40a0fd6f2bb9419bee5fb8cf636dd1666e5d9db5861752945f157eff791a5c89bc794c7ed62e00ca94ad0dd60aa04b9d27eda460a3b12ccc514a02c4585433dddf85e2c09e4270a684265ab0409ca92866480b80c463d12b9c1c9751b01f70a5edc46bd7aef88261f7698b8ff7121ae7a6a560562a7b200690b249016a5855f44f0615cefb3cf20ad5f647da9fadeb16eaa029a7bef07f4d0818714624f2ca0d75bc71a7f1fef4256eab0e2bd2b406693239d95874897d31169ab6265e491aaf110c50631ab427fd080d86b0d79302d5547fe78bed4671f90e99e7111cbd40ae8f6c1ae0c88608a4b09373401a5e81842ea612ad850439ee6afa0b5451d3c6896337008dc6c36cda071e281e49c3c25759bf99cddca97cc6ea95f866093149db8ff5770463f722b53f5f7a6fa83d4126960a07e5fcd5770a9cc9528348becf1b16b2e7a352e647295e5ce4a85196df59430d776a9baa1c6c33dfbc6e37969cdd15d19e78dd7a0255cf959ac0ffe4a706ec68be36ce3f315f2ce0c1eeccee118f5b62c4a591f7b265a711e92226561e9969d6175d15c6b3a96642a738af18dce3fb20dbce9c05e6870f67ff23afb5f5116b7684a80d50d480830420a6785b84a9a96b673420c75b5b61462baa12569f7db3589cff40c22aa4e9526f22c1cd577d002cda0735c94df0df8da4bc5708b90cec2dd3cd9bf1eb39d164cbf72e8718b9868157ac14e68bdb6f8cc64c795415c056a4340398ea03c527223ad2db27fc309346f31594b365b0c8ad6e49a8bb670ef78cd93c23c15c05c29c67c4a672f2d9210fa010a7ce6ec1ee3981ee29da7a3274cb79d91e9feda50d5931ef8761d1ef6eee460ab9698fc9887412d4f8e91dc9bae36a9a941cdfe4fa6463b710c3d7cbae3cc8a9bc947fa394684414006db0ca1cafb5877a4cbe1738820e6ceabb1156d30441db7bbdf34d59963f430679bef64fb26ed85355257a6b20d52cafa39555e61667ee0b9317f369e93907d4193d328bff74aaa694efac74bde20c0ac6a0ceb9b00a62a9c4178962cd11e5cc311a54793c9a63805bf80c66264f1388983f8b4430f0293fd1a5ff9a0c63b408d3356d08f334e3d1475afc5b3ea45f7f728cd5db8bc192edd9cd2ce8ac7bef4eef38830416a841ae04491c6ecf98ca31564741667ec29ce446f13331c2cee11c901adf01ad5bbbe2bee1eccbc4b51419efd1b328d02c8cd45ffa7f2eb32d7a34e35d68d37bc0a6c52c059f4cc04ff6fa93e8f687624e69e509b8d3d92c84d4f9be62c11a05a491a64f47f65393adf10936bc47098ce4c99f570a8786dd627779dc66301702b0d297f046656435c645ab02ad56ffb54763c76c15b4a2b6b81bbec8f54a08c392661719a2341ba0dfa61c31bcf89c523a941ce382afcf4293624c80bed7c9f413c6b7c62c6661603be17283291b1ba7d733eac437bcebb0cb2cb9e236f437ed31c51732dbf8af7c0b8ae2d014b8de261fe12d52ee1b71fab39ef28a1d8f61b74c3a0c02199d82116f219d51ea032ccbc51b1310498cb31d572641277ae1ccb6ddc638ad01e707c0f7ed9e80ed873b2d708da813cce4a2fda48994dda3c4dbeb981d086632a2d2b46cf4011d840d9d18d88fb0404822a0eee855a08150734d053abc41d77e270133efedd57697009973e33d9996eef876449c156dada343bfcf3cd04c52ea9ab1bb3fc647a52bc4427f268d02ee7b344fcc201e4a6004e965cdc50f62bd8a8211f4bd7679848e99e8c184a2974f372e80e8ec8056f739fca651979827775668440e6b838768032405e9f6f733181aebc82818a9e9a19b54aa2ce7650f4346b99f9b033784df77c0357e459595ccf8bec9d0f33794e8d72f8dee55bfe4bfd08db3bb4daf4a277897ea39c5f737ba45a45517e03773676bf6d12f328ceb3465a96ddb2e2e03c0312166d0b71fc06bac40e8a1bc0d15d244e21aefab107a4130058e1aeaa0e37091cc8647c554f0f34ceaa7715210603954e7295d12252cd194cb3592421e9528c08fbebdba03b7eb15feb72bfda72131483334f90b3116590e9a86d22ce04fc16597bc1562fae9d4cc52ba2cd727888732a61170f8e8933a677f7a29cb97c2d5da5329e546ada30abfc77cd16a06c1b1b1d7278c63b979e267191c361f650c934b6c44e44bd9969f9c58ca21d7895f5276792b41aacaedfd2b41e5815cd9a207cdc7dd9a6bddf06b248f6bb1cc7115a3b871e6a731cc19645ae34fb0c36b4a277da3b57fb0df429fecf7f8680464c7873adace4147d35e1222026a663d4c794e47ce9e78fb5f5b91aea3980f2b9a4acaa2fa17a233564bf5fdc92c722c3f2bb954b0b751dd40fa6912e7ede815e3ecca31eac37c705ee35e7e5dfc3515c2838f37f1d0fbe6b3be08e7bbc3785a21965422a6f0e8b02003cb162f859149c93e1cd0b52733d87d09edf66daac56e927a0a1d6ffe274b4ccffcef9db6af6c0cd895c277523e486c835c147a01b8d42cc582187ec40873ca0bb668407c1af78092866f54117517f7efbfb5c6f60e0656caf932d8b114a63b4d1dda0fdca1d712311d8a4aa70ec59e967f9c4fa45e1f55e43a3a2fdd0076c90a3f9f61ba4ac4ce62eae0bfa853439d1cd4daf5dc98eb4cb1be3d5f8b1d47044312d0707a84eff6a5033e649f4b771d2cfb7bb375244d3fc3b411f09b7b31302a45d5fe6ad2b16f885417e7017c295259eced28274b03ba8019b43251261d0e3fc2188ba7885f35c66c568a3961cb2a0ac73389a5cdb9e40c062d6e9f5ec15a3c58c33e27f93a5a235a8ca66c6aa2904802e925053454b8c66d3aab3160f4bb3ba798780b19d20da1bfe1d2da287b6749edc4c0c688dec372ac86bad3ca129ea5b390264e6c914bdc2700ba53f6118d6a4f1125053dc893e818650d28b97a4af0c43a78a5642dcf5149a1192ba2f3a50882fe0a8f7866d5a36aca290c8658b08f07b75942f52b1dcf2bf7a87a5181fd9e1d3772a7dd89f91c7df0df0cbd604270628da9db1524fa809dacdfdc0affdb557197758b20504cd893c98ff6fc85176ed5ab9ddf9c815d19a47d3bedd4677737e68e697c5768d1c5be213e3c8c9f6f974861796836f355e63653c7e94e9feb40b94b358cc49f4b838d4123e0ab8c803f91f54bb8216b63d25609381360c6fa7f46e3301e4849aadf6fa0eafd2da7a67ca6b360580c2b482e304c67617f531ba7d25ccfefd54a71f8fd6f8926ceaf2c9f1ef58067b38da7ead37db2c10f65fe61ed55dcd827f3663ddd4fc422396f8c9650bb627dd25dbb6d6f600fb43400b0a33b3b8337f56af08b719d3b2c6a2ab611d8d530278fc7e3834b3a68de7ad6120906a6c1d548f9be661bcba0bec90e43f3f85049dd341d242d6c79981c9cf7b40980ad11ae2451c615518db94342d3b7ed9a0a149d22d80115b3ba245048ed8d98a2368b038554b3598c4d4ad3e89c38098108cb39c495fb0b036e08e73d12de72c8fb534b83f6632acaf790c72d09a6868d02a8a9cde40b3ab3464b6f5ad67da37198c57aa80dc55a05036a83051b32f40fb15a5192caad2dab670258726129acb8db2494c5811fbe707fd215c579ddf7a44954f44834299ba6100010d000d5e1e1f890f23549038302a2cf80e4df4ba59cb8a1833d534dbab2feb0754fb8ecc7e63854ace80c2f817c8c1f32e6051cccdda36a2c92086e09d321b097d5afa4a8f496cebafa31df9b4fc64dcac518e13c8490c98007c6dd8b0ae4e6988d5313ee5ebd0ec6e3d95862f92830ff9fd18a685f1df2508b9a0d4b5bcfbacb0fd9994022ec1fbbe43acccd7c0c58e2aba2a232b3d1b298afa67040bf52a1a2b3211dd5ee6c9273ac220b700e5412df4d580a7c22d274934dd2f0bc60729911056fcfcb35e18b51ba6f9e2029de8769d7b65ed7c9f372b2a83bf5df61673ead3bbf5ec0e0e1346a1dcc54389e4cb66e50514d6a287361c2197332a855462e85bac340fc887c04f5e51c0d5941d5fb5b9f9db08674c9d5a622c113dae8d52f840dde5bd85fed21c2197917c02f672cd162fbd9f5d9275d679cbefac75a498564eafa9120b18bb8d87b7d6ec0b36bf7d017a8975e858853b3bda2565a3f6066e70e5095b02850392d587e4c4e59a43fe4d295b4d663653c8fbf0a4fb93e0b7a0dcdd1f2b41ba6f31547f78e5adcbefd829cff75a97df72637c8b69bbb8f7c40f9745bd515c6977c32cebcf2c54c2105cc929ae13e5b0c8f49003b62995c5881ed4a75b878134ceeb0edaa4ca1de45887a5d4e86bc3892af0940592e4e215750baee7a8f92d0b5f8a70a87b5b4e883378ee762b22e031538818de84a1e3dae88b0ef5574af342584a8b2037a3e2e3cf0cb34e3cfe989e48ee67c490c20251566ad2db18a16ae1e5ebd9b597ac2431534288f418212c17227797754f66c5e645e75e54df30ba7ad8ccf62df4f0e3b66823aba777cd2ba2af30536d3832c0160fc1d50db59e3930b02fa7a9db52b2ac7f1e99e33e04e5d854cddbffc40bb218439d6971a8c58d3a750aa2a88d8a7362b72475abc5a55a7b34c283de841d9da36705fd89bb08957e28fe892c01edc6a3857850bdc4f339a753764a31643cfd7e105f0c1f70527c9e5d9411544862d637495848a5350a4f71f1f8a290eab83e583630553f3da5cab0fe50d0cdd0015d9ed498db76266d5fb46d805af81fc5a5f733ee6f8c51a39cee5fa6458ccfcaab8bd82997a77d61d33f59d4b7d8266bfbde12d819ecbf1a9165976e1125e69b57fb31f9b25cd352510ecddd4db5568b0f51a5117ec3413921eddb04465bbc16e16cd8fbf8df28b1b4679a2528482a307363ad4a5e9486ceba99a8fb061f3492b9dc0caec22115e4b8ee48bf0460232f5a6822e0f9cbf9dc41d1ec437eb53cf037cc25fa5a13bb32314c07f5a2f87dd682b64446a20ef7b2ceca707aad0c1b7e831dd9ce610be511d449315f23734ecfa716ede31c533715e9a624e39a6023b9a05074987db9af7871aed1685893e336eeedd0b521d3e2f3e936f32860a1ddbfcd3f8beecba59981719ddc5e5d61ac0867b53706173b524cbf2739f560634423c59ff17ae4b9ed296e64315e2302dd75bec3308390461a7e209dfcf6ebe4a403bfa8537879c8aa7b2277d522540404bd9f536a4fc051676ffe9da7729ade64a7c2fd134d9b343124d754805883fa47810518db82b28cf9e4f9951077e09528c7879f73f9762d5a2f78e018c3ed59ca9b5750f3569a453de1c8531638a39d126540a04b6611e041baaac5f9b2116944b47dd5122a87aad63886d8cc83ed6a6f623fb33cbcf52ee5e442e6b23be56da7a1c76cf148c91fdf81a036aa515cebb30bba81fde2ed33abcdb37312082f4799f8f265639c0138b286581bb7bc9392d74db424959235d81b7e90c961ddfe8aabf50d34d167d545623ab456fcce51155f3a4470db83c39501900b6c4c472439d75e4cea72a1da1b2b92e12488b5ccbefe8d6d116da8bd0ada935436e4cfd15f42117aef23e2533367e5ed5c4e92ddb892711de36f8129259b2be404c4392bb90e0f3c7496e905fb172ece8167f26a0e91b2cfbcffc81c3a552acf6af256302fb29e7c25ccd92a950f4d89b07d48a38057f3609d542a5813b8d94f8b1c95b4176ba80bf2f4ba59d89af7d7d407684d0ce1e14642e877c69953885513c7cbbc2dc3b39d736f3a757a43714e875c19f1833a3248c7e0d418eff6d8214069f69e4418255c1860066f09ba8d518eb3bb7d5e63208c603fd7ecbe82147b09531af446c984459285d27a5d201e67837d4ceee68a4e64eac0192b113685c9e2354393e1b6b1f6b2e8ca6d92291e0dfa7cf83788e494b32e67885b11a4f3d6ec5abe57947c84a6ac4bdfa6b93caebee28c644cc79f40c772c1c79edec0d4388128da5fda6d9391d8ec55d27ea14febea3a2e87197966d82702df958281061b1be3dae05ac04c330c8951007c6e319622f88b73c75b473d888b252969d505d40aec1ff9b2b9c7dff92716cb589d06c23ef7a1b4da6cd812d009c5432c28b44544211f956dfd7ac79d628eeb7119fcc595c4087511483e3c66ffc67a66591fb28a66b2beb137ff79774b8723e3bfbe0c7899f7c8ad9c11a0b64495770825839c4acda9c06197e780ef9ce757b7782ee74bac09a6954cbfa6a41c5d225e6e7dd71d8f0d366a227ece3327745f2f7742e78b9284b0c30e5c120fbd2f73fdbc4bd777de20299d07e1f903c85a45b9835578802522b8de327fe5f3cc11fa19a1b6f27fa44f2defc20cb7fe1ec1d7c0a9049da82bd034ee014e5cbd3738fdf9ea48944ce2ac9e36deb2e42bf693c9ee78c0e324ac1af4c2d3eb0de1ceb84a6237f643c4ca5edd4d87e</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>通信优化</category>
        <category>梯度压缩</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>通信优化</tag>
        <tag>梯度压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>1 Bits SGD and its Application to Data Parallel Distributed Training of Speach DNNs</title>
    <url>/archives/1b1e994e.html</url>
    <content><![CDATA[<h2 id="摘要">摘要</h2>
<p>本文主要提出了一种比较激进的梯度量化方法，它可以将梯度中的每一位都量化为1bit，而且每次的量化误差都会补偿进下一轮量化梯度当中，因此称为带有误差补偿的1bit梯度量化方法。</p>
<blockquote>
<p>值得一提的是，本文是将量化引入分布式机器学习的开山之作，同时，这种非常激进（因为量化为1bit）的量化方式，极大减小了通信成本，而且误差补偿的方法非常具有启发性。</p>
</blockquote>
<p>本文主要针对并行SGD的AdaGrad、自动最小批量大小选择，双缓冲机制以及模型并行等多个方面进行探究。在实验上证实了量化和AdaGrad相结合会有一定的准确率提升。</p>
<h2 id="数据并行的确定分布式sgd训练">数据并行的确定分布式SGD训练</h2>
<p>错误的反向传播方法是训练DNN模型常用的方法，它形成了一种随机梯度下降算法。随机梯度下降算法通用形式如下： <span class="math display">\[
\begin{aligned}
\lambda(t+N) &amp;=\lambda(t)+\epsilon(t) \cdot G(t) \\
G(t) &amp;=\left.\sum_{\tau=t}^{t+N-1} \frac{\partial \mathcal{F}_{\lambda}(o(\tau))}{\partial \lambda}\right|_{\lambda=\lambda(t)}
\end{aligned}
\]</span> 其中<span class="math inline">\(\lambda(t)\)</span>代表当前索引<span class="math inline">\(t\)</span>采样下的模型，它的增长步长是<span class="math inline">\(N\)</span>，也就是数据采样的批量大小为<span class="math inline">\(N\)</span>。<span class="math inline">\(\mathcal{F}_{\lambda}\)</span>是样本向量为<span class="math inline">\(o(\tau)\)</span>的函数的部分梯度。<span class="math inline">\(\epsilon(t)\)</span>表示学习率。</p>
<h3 id="数据并行的分布式sgd">数据并行的分布式SGD</h3>
<p>对于上述数据并行训练来说，最佳节点数量<span class="math inline">\(\hat{K}\)</span>能够使得节点中计算和数据通信完全重叠，此时可以保证通信和计算资源是饱和的，也就是能够达到并行的最优化： <span class="math display">\[
T_{\text {calc }}(\hat{K})=T_{\text {comm }}(\hat{K})
\]</span> <span class="math inline">\(T_{\text {calc }}\)</span>和<span class="math inline">\(T_{\text {comm }}\)</span>分别是节点上每个小批量所需要的的计算和通信时间。如果我们将计算和通信开销继续细分，我们就能够求出最优节点数量 <span class="math display">\[
\hat{K}=\frac{N / 2 \cdot T_{\mathrm{calc}}^{\mathrm{frm}}+C \cdot T_{\mathrm{calc}}^{\mathrm{post}}}{\frac{1}{Z} \cdot T_{\mathrm{comm}}^{\mathrm{float}}-T_{\mathrm{calc}}^{\mathrm{udd}}}
\]</span> <img src="/archives/1b1e994e/image-20200731151547791.png" alt="image-20200731151547791" style="zoom:67%;"></p>
<p>其中：</p>
<p>事实上，将每个维度精度为<span class="math inline">\(Z=32\)</span>的数据压缩为1bit</p>
<ul>
<li><p><span class="math inline">\(T_{\mathrm{calc}}^{\mathrm{frm}}\)</span>表示处理数据的时间，这部分是可以并行的</p>
<p>与参数M的关系：<span class="math inline">\(\propto \frac{M}{\text { FLOPS }}\)</span></p></li>
<li><p><span class="math inline">\(T_{\mathrm{calc}}^{\mathrm{post}}\)</span>表示对梯度后处理的时间，比如momentum+AdaGrad</p>
<p>与参数M的关系：<span class="math inline">\(\propto \frac{M}{\text { RAM bindwidth }}\)</span></p></li>
<li><p><span class="math inline">\(T_{\mathrm{comm}}^{\mathrm{float}}\)</span>传输梯度（由单精度浮点数表示）的时间</p>
<p>与参数M的关系：<span class="math inline">\(\propto \frac{M}{\text { Network bindwidth }}\)</span></p></li>
<li><p><span class="math inline">\(T_{\mathrm{calc}}^{\mathrm{udd}}\)</span>模型更新时间，相对于<span class="math inline">\(K\)</span>来说是固定的</p>
<p>与参数M的关系：<span class="math inline">\(\propto \frac{M}{\text { RAM bindwidth }}\)</span></p></li>
</ul>
<h3 id="双缓冲机制">双缓冲机制</h3>
<p>为了实现更高的并行度，作者提出了双缓冲（double buffering）的概念，即在每个节点上把一个小批量分成两部分在交换其中一部分的梯度时进行另一部分的计算。然而，双缓冲机制会引入额外的更新开销（该开销是进行梯度聚合过程中产生的），当通信开销小于更新开销（即<span class="math inline">\(T_{\text {comm}}^{\text {flat}}&lt;T_{\text {calc}}^{\text {upd}}\)</span>）公式不在成立，双缓冲机制失去作用。</p>
<blockquote>
<p>双缓冲机制的方式很好，可以用于参数服务器架构，使得通信和梯度计算之间过程的重叠，有助于更好地并行。</p>
</blockquote>
<h3 id="误差补偿的1bit量化">误差补偿的1Bit量化</h3>
<p>本文最核心的部分就是减小在数据并行过程中，节点之间进行梯度传输过程中所需要的带宽消耗。（1）本文中的数据并行默认只交换荼毒，并不交换模型；（2）在数据交换的时候对梯度进行量化。</p>
<p>为了降低量化误差带来的负面影响，作者使用了误差补偿技术：每次量化时，把上一次迭代的量化误差加到本次迭代的梯度上，然后再进行量化，接着求出本次量化操作的误差。这种误差补偿机制可以确保所有的梯度都会再一定程度上对模型更新产生作用，只不过这种作用分散在不同的迭代中——类似于一种延迟更新的形式。作者指出，使用误差补偿后，就可以在几乎不损失模型精度的情况下将梯度由32位量化成1位。 <span class="math display">\[
\begin{aligned}
G_{i j \ell}^{\text {quant }}(t) &amp;=\mathcal{Q}\left(G_{i j \ell}(t)+\Delta_{i j \ell}(t-N)\right) \\
\Delta_{i j \ell}(t) &amp;=G_{i j \ell}(t)-\mathcal{Q}^{-1}\left(G_{i j \ell}^{\text {quant }}(t)\right)
\end{aligned}
\]</span> 其中<span class="math inline">\(\mathcal{Q}(\cdot)\)</span>表示量化函数，<span class="math inline">\(G_{i j \ell}^{\text {quant }}(t)\)</span>表示量化之后的整型数值。我们在量化过程中会保证<span class="math inline">\(\Delta_{i j \ell}(t)\)</span>被加到下一轮的梯度过程中（也称为了误差补偿机制）。</p>
<p>举个例子，在具体的实现上，比较简单的方法是将大于<span class="math inline">\(0\)</span>的梯度值编码成为<span class="math inline">\(1\)</span>，小于等于<span class="math inline">\(0\)</span>的梯度值编码为<span class="math inline">\(0\)</span>。在解码的时候，将<span class="math inline">\(1\)</span>编码为<span class="math inline">\(+1\)</span>，将<span class="math inline">\(0\)</span>解码为<span class="math inline">\(-1\)</span>，在进行聚合操作。</p>
<h3 id="系统描述">系统描述</h3>
<p>作者从最优节点数的公式当中总结出如下提高并行度的方法：</p>
<ol type="1">
<li>增加<span class="math inline">\(N\)</span>，也就是尽可能使得小批量的规模更大</li>
<li>增加<span class="math inline">\(Z\)</span>，尽可能大得压缩通信数据量</li>
<li>减少固定消耗<span class="math inline">\(T_{\mathrm{calc}}^{\mathrm{udd}}\)</span></li>
</ol>
]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>通信优化</category>
        <category>梯度压缩</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>通信优化</tag>
        <tag>梯度压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>A Survey on Methods and Theories of Quantized Neural Networks</title>
    <url>/archives/2932556.html</url>
    <content><![CDATA[<h2 id="摘要">摘要</h2>
<p>当下流行的深度神经网络具有非常复杂的结构，训练时需要消耗大量的内存和电源；在移动端和边缘设备等资源限制的情况下难以发挥作用，而量化则是解决上述问题的办法之一。原来的神经网络权重、激活和梯度都需要采用<span class="math inline">\(32bit\)</span>精度的浮点表示，但是采用量化表示只需要整型或者二进制即可，大大减少了模型尺寸和资源消耗。这是一篇综述，从不同方面给出了量化神经网络的一些方法，同时也罗列了目前在这些方面遇到的挑战。</p>
<h2 id="介绍">介绍</h2>
<h3 id="神经网络">神经网络</h3>
<p>本文介绍了下面几种神经网络，比较基础，这里就不做赘述</p>
<h4 id="前馈神经网络">前馈神经网络</h4>
<h4 id="卷积神经网络">卷积神经网络</h4>
<p>值得一提的是以下这些卷积神经网络结构：</p>
<ul>
<li>AlexNet[Krizhevsky et al., 2012<a href="#refer-anchor-1"><sup>1</sup></a>]</li>
<li>VGGNet[Simonyan and Zisserman, 2014<a href="#refer-anchor-2"><sup>2</sup></a>]</li>
<li>GoogleNet[Szegedy et al., 2015<a href="#refer-anchor-3"><sup>3</sup></a>]</li>
<li>ResNet[He et al., 2016a<a href="#refer-anchor-4"><sup>4</sup></a>]</li>
</ul>
<p>这四个架构非常广泛地用在比较不同压缩和量化方法性能比较实验过程中，常常作为基准（baseline）。</p>
<h4 id="循环神经网络和lstm">循环神经网络和LSTM</h4>
<h3 id="量化神经网络">量化神经网络</h3>
<h4 id="术语介绍">术语介绍</h4>
<ul>
<li><strong>低精度</strong>（Low precision）：可能是最通用的概念。常规精度一般使用 FP32（32位浮点，单精度）存储模型权重；低精度则表示 FP16（半精度浮点），INT8（8位的定点整数）等等数值格式。不过目前低精度往往指代 INT8。</li>
<li><strong>混合精度</strong>（Mixed precision）在模型中使用 FP32 和 FP16 。 FP16 减少了一半的内存大小，但有些参数或操作符必须采用 FP32 格式才能保持准确度。如果您对该主题感兴趣，请查看 <a href="https://link.zhihu.com/?target=https%3A//devblogs.nvidia.com/mixed-precision-training-deep-neural-networks/" rel="external nofollow noreferrer">Mixed-Precision Training of Deep Neural Networks</a> 。</li>
<li><strong>量化</strong>一般指 INT8 。不过，根据存储一个权重元素所需的位数，还可以包括：
<ul>
<li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1602.02830" rel="external nofollow noreferrer">二值神经网络</a>：在运行时权重和激活只取两种值（例如 +1，-1）的神经网络，以及在训练时计算参数的梯度。</li>
<li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1605.04711" rel="external nofollow noreferrer">三元权重网络</a>：权重约束为+1,0和-1的神经网络。</li>
<li><a href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1603.05279" rel="external nofollow noreferrer">XNOR网络</a>：过滤器和卷积层的输入是二进制的。 XNOR 网络主要使用二进制运算来近似卷积。</li>
</ul></li>
</ul>
<h4 id="正文">正文</h4>
<p>目前，很多技术用在了量化神经网络方面。粗略地来看可以分成确定性量化和随机量化。在确定量化中，在量化值和真实值之间有一一对应的映射，而随机量化权重，激活和梯度则是离散分布。量化值是从离散分布中采样得到的。</p>
<p>在神经网络中有三个部分是可以进行量化的：权重、激活和梯度。量化这些部分的动机和方法是不同的。量化权重和激活层，我们得到更小的模型尺寸。在分布式训练的花镜中，我们能够通过量化梯度的方式节省通信消耗。一般来说，量化梯度比量化权重和激活更加困难，因为训练往往需要精度更高的梯度来保证算法的收敛。</p>
<p>我们通常采用编码本（codebook）来表示代表真实值的离散值。从密码本的表示来看，现有的工作可以将量化神经网络粗略的分成两类：固定编码本量化和自适应编码本量化。</p>
<p>在固定编码本量化中，权重经常被量化成提前定义好的编码，二自适应编码本是从数据中学习而来。一些普遍应用的密码本包括<span class="math inline">\(\{-1,1\}\)</span>，<span class="math inline">\(\{-1,0,1\}\)</span>或者二数幂或者二进制网络和三元权重网络等。</p>
<p>训练量化模型需要不断调整，而且量化网络并不容易理解，寻找新的量化方法以及配合理论分析是量化神经网络非常重要的一点。</p>
<h2 id="量化技术">量化技术</h2>
<h3 id="确定性量化">确定性量化</h3>
<h4 id="取整rounding">取整（Rounding）</h4>
<h5 id="主要内容">主要内容</h5>
<p>取证可能是对真实值最简单的量化，例如[Courbariaux et al., 2015]提出下面这种取整方法： <span class="math display">\[
x^{b}=\operatorname{sign}(x)=\left\{\begin{array}{ll}
+1 &amp; x \geq 0 \\
-1 &amp; \text { otherwise }
\end{array}\right.
\]</span> 其中<span class="math inline">\(x^b\)</span>表示二进制量，<span class="math inline">\(x\)</span>是真实量。这个方法可以应用在量化权重，激活和梯度中。在前向传播中，真实值权重能够产生输出。然而，在反向传播过程中，我们不能够通过<code>Sign(x)</code>来进行，因为它是离散的，到处都是梯度为零。通常采用的方法是“直通估计（straight through estimator）”（STE）[Hinton et al., 2012b]，它采用启发式的方法估计随机神经元的梯度。假设<span class="math inline">\(E\)</span>是损失函数，STE的前向和反向计算可以看成如下方式： <span class="math display">\[
\begin{array}{l}
\text { Forward: } \quad x^{b}=\operatorname{Sign}(x) \\
\text { Backward: } \frac{\partial E}{\partial x}=\frac{\partial E}{\partial x^{b}} \mathrm{I}_{|x| \leq 1}
\end{array}
\]</span> 其中<span class="math inline">\(\mathrm{I}_{|x| \leq 1}\)</span>是定义如下的指示函数： <span class="math display">\[
\mathrm{I}_{|x| \leq 1}=\left\{\begin{array}{ll}
1 &amp; |x| \leq 1 \\
0 &amp; \text { otherwise }
\end{array}\right.
\]</span> 为了对双精度进行取整，[Gupta et al., 2015]作者提出了如下的取整方式： <span class="math display">\[
\operatorname{Round}(x,[\mathrm{IL}, \mathrm{FL}])=\left\{\begin{array}{ll}
\lfloor x\rfloor &amp; \text { if }\lfloor x\rfloor \leq x \leq\lfloor x\rfloor+\frac{\epsilon}{2} \\
\lfloor x\rfloor+\epsilon &amp; \text { if }\lfloor x\rfloor+\frac{\epsilon}{2}&lt;x \leq\lfloor x\rfloor+\epsilon
\end{array}\right.
\]</span> 在固定点表达中，IL代表整数位的个数，FL表示分数位的个数。<span class="math inline">\(\epsilon\)</span>表示在固定点表达中能够表达的最小正数。<span class="math inline">\(\lfloor x\rfloor\)</span>被定义为<span class="math inline">\(\epsilon\)</span>的最大整数倍。对于超出此固定点格式范围的值，作者将它们规范化为固定点表示的下界或上界[Rastegari et al., 2016]。将上式扩展： <span class="math display">\[
\begin{array}{ll}
\text { Forward: } &amp; x^{b}=\operatorname{Sign}(x) \times \mathrm{E}_{F}(|x|) \\
\text { Backward: } &amp; \frac{\partial E}{\partial x}=\frac{\partial E}{\partial x^{b}}
\end{array}
\]</span> 其中<span class="math inline">\(\mathrm{E}_{F}(|x|)\)</span>表示每个输出通道的权值绝对值的平均值。</p>
<p>近期[Polino et al., 2018]提出了更加普遍的舍入函数： <span class="math display">\[
Q(x)=s c^{-1}(\hat{Q}(s c(x)))
\]</span> 其中<span class="math inline">\(sc(x)\)</span>是将值从任意范围缩放到<span class="math inline">\([0,1]\)</span>的缩放函数。<span class="math inline">\(\hat{Q}(x)\)</span>是实际的量化函数。给出量化等级参数<span class="math inline">\(s\)</span>，有<span class="math inline">\(s+1\)</span>等级的统一量化函数可以定义为： <span class="math display">\[
\hat{Q}(x, s)=\frac{\lfloor x s\rfloor}{s}+\frac{\xi}{s}
\]</span> 其中 <span class="math display">\[
\xi=\left\{\begin{array}{ll}
1 &amp; x s-\lfloor x s\rfloor&gt;\frac{1}{2} \\
0 &amp; \text { otherwise }
\end{array}\right.
\]</span> 这个量化函数的直觉是将<span class="math inline">\(x\)</span>分配到在<span class="math inline">\([0,1]\)</span>范围内<span class="math inline">\(s-1\)</span>个等间隔最接近的量化点。这是符号<span class="math inline">\(Sign(x)\)</span>函数的广义版本，能够将实值量化成多层。在[Shuang et al., 2018]中，作者提出了启发式摄入函数来量化一个市值为<span class="math inline">\(k\)</span>位的整数。 <span class="math display">\[
Q(x, k)=\operatorname{Clip}\left\{\sigma(k) \cdot \operatorname{round}\left[\frac{x}{\sigma(k)}\right],-1+\sigma(k), 1-\sigma(k)\right\}
\]</span> 想法是将真实值利用统一的距离<span class="math inline">\(\sigma(k)\)</span>进行量化，其中<span class="math inline">\(\sigma(k)=2^{1-k}\)</span>。<span class="math inline">\(Clip\)</span>将量化限制在<span class="math inline">\([-1+\sigma(k), 1-\sigma(k)]\)</span>范围内，<span class="math inline">\(round\)</span>用最近的离散点替换连续值。</p>
<h5 id="挑战">挑战</h5>
<p>挑战:使用四舍五入函数是将实值转换为量化值的简单方法。然而，每次四舍五入操作之后，网络性能可能会急剧下降。在训练过程中需要保持真实值作为参考，这会增加记忆开销。同时，由于使用离散值时参数空间要小得多，训练过程难以收敛。最后，舍入运算不能充分利用网络中权值的结构信息。</p>
<h4 id="向量量化">向量量化</h4>
<p>[Gong et al., 2014]是第一篇将向量量化考虑到神经网络压缩和量化中的。他主要的思想是将权重分组聚类，在推理时采用聚类中心代表每个组实际的权重。</p>
<p>[Han et al., 2015]，[Gong et al., 2014]等都对这种方式进行了改进，[Choi et al., 2016]指出这种方法有两个缺点，第一是不能够控制由于<code>k-means</code>算法造成的损失；第二是<code>k-means</code>算法不施加任何压缩比约束。为了解决这些问题，作者提出了一种Hessian加权k均值聚类方法。其基本思想是使用Hessian Weighted失真来测量因权值量化而导致的性能退化。这样可以防止那些对网络性能有较大影响的权值与原始值偏离太多。</p>
<p>有很多对向量量化的扩展方法，乘积量化[Gong et al., 2014]是一种将权重矩阵划分为许多不相交的子矩阵，并对每个子矩阵进行量化的方法。在[Wu et al., 2016]中，作者采用带误差修正的产品量化方法对网络参数进行量化，实现快速训练和测试。残差量化[Gong et al., 2014]将向量量化到k个聚类中，然后递归量化残差。在[Park et al., 2017]中，作者采用了类似于矢量量化的方法。他们使用了一个基于权重熵的想法[Guias¸u, 1971]来将权重分组到N个簇中。对于重要的权重范围有更多的簇。从而实现了自动灵活的多比特量化。</p>
<h5 id="挑战-1">挑战</h5>
<p>由于网络中权值的数量，k-means聚类的计算量很大。与四舍五入法相比，用向量化方法来实现二值权值比较困难。向量量化通常用于对预先训练的模型进行量化。因此，如果任务是从头训练量化网络，最好使用精心设计的四舍五入函数。向量量化忽略了网络的局部信息。</p>
<h4 id="量化最优化">量化最优化</h4>
<p>简单来说就是将量化作为最优化问题进行，此处暂时省略...</p>
<h3 id="随机量化">随机量化</h3>
<h4 id="随机舍入法random-rounding">随机舍入法（Random Rounding）</h4>
<p>在随机舍入法中，真实值和量化值有着一对一的对应。典型地，量化值的权重是从离散分布中采样而来，它是通过真实值进行参数化的。例如，[Courbariaux et al., 2015]提出了以下的随机近似方法： <span class="math display">\[
x^{b}=\left\{\begin{array}{ll}+1 &amp; \text { with probability } p=\sigma(x) \\ -1 &amp; \text { with probability } 1-p\end{array}\right.
\]</span> 其中<span class="math inline">\(\sigma\)</span>表示“hard sigmoid”函数 <span class="math display">\[
\sigma(x)=\operatorname{clip}\left(\frac{x+1}{2}, 0,1\right)=\max \left(0, \min \left(1, \frac{x+1}{2}\right)\right)
\]</span> 直观上来说，<span class="math inline">\(x\)</span>是一个正值，我们将以很高的概率量化到<span class="math inline">\(+1\)</span>，其他情况量化到<span class="math inline">\(-1\)</span>。这就给我们更加灵活的量化模式。在[Muller and Indi-veri, 2015]中，作者在整数规划中使用了这种思想。提出的随机四舍五入函数将每个实值概率映射到最近的离散点或第二最近的离散点，这取决于到对应点的距离。在[Lin et al., 2015]中，将二进随机四舍五入扩展到三元情形。</p>
<h5 id="挑战-2">挑战</h5>
<p>随机舍入提供了一种将噪声注入训练过程的方法。它可以作为一个正则化器和可提供条件计算。然而，使用随机的舍入方法，我们需要估计离散神经元的梯度。这样的估计往往有很高的方差。这一事实可能会导致训练过程中损失函数的振荡。[Bengio等人，2013]的工作提供了估计离散中性电子梯度的可能解决方案的概述。</p>
<h4 id="概率量化">概率量化</h4>
<p>暂无</p>
<h4 id="讨论">讨论</h4>
<p>上述量化技术使我们能够从不同的角度对网络进行量化。这些技术的优缺点可以指导我们在不同的情况下选择合适的技术。一般来说，如果我们想为硬件加速量化神经网络，确定性量化应该是首选，因为我们可以预先指定适当的量化级别，以便在专用硬件上运行量化的网络工作。这可以提高硬件的预测性能。四舍五入使我们能够以数据依赖的方式量化权重。这导致了条件计算[Bengio et al.， 2013]，可以增加神经网络的容量。概率量化与确定性量化的不同之处在于量化后的权重更具有可解释性。我们可以用概率量化的方法来理解权值的分布，并对网络的工作原理有更深入的了解。在概率量化的情况下，由于贝叶斯方法的正则化效果，我们也可以得到更稀疏的模型。</p>
<h2 id="量化对象分类">量化对象分类</h2>
<h3 id="权重量化">权重量化</h3>
<p>在[Zhou et al., 2017a]中，作者提出了增量式网络量化(INQ)，它包括三个步骤：权重划分、分组量化和再训练。他们以组的方式对权重进行组化，以允许某些权重组补偿由于其他组的量化而造成的准确性损失。[Gudovskiy and Rigazio, 2017]的工作将这种方法扩展到2次幂设置。</p>
<p>在[Lin et al., 2016]中，作者试图找到最优的不动点位宽跨层分配。他们研究了通过量化不同的层可以引入多少噪音。[Lin et al., 2017]使用多个二进制基的线性组合近似全精度权重。结果表明，二值神经网络在ImageNet数据集上首次取得了与全精度神经网络相当的预测精度。在[Moons et al., 2017]中，作者研究了如何发展节能量化神经网络。在[Guo et al., 2017]的工作中引入了网络素描来量化预先训练好的模型。其思想是使用二进制基来近似预先训练过的滤波器。他们首先提出了一种启发式算法来寻找二进制基础，然后提供了一个改进版本，以更好的近似。在[Mohamed Amer, 2018]中，作者提出了一种端到端训练框架来同时优化原始损失函数、量化误差和总比特数。然而，其精度无法与其他量化神经网络相比。</p>
<h3 id="梯度量化">梯度量化</h3>
<p>梯度量化的应用场景一般是为了在分布式训练过程中减小通信消耗。如下图就是为神经网络的并行训练：</p>
<p><img src="/archives/2932556/image-20200729203114640.png" alt="image-20200729203114640" style="zoom: 80%;"></p>
<p>[Seide et al., 2014<a href="#refer-anchor-5"><sup>5</sup></a>]提出了一种1-bit表示各个节点计算梯度。和常规的方法相比，它得到了10倍的加速比。[Strom, 2015<a href="#refer-anchor-6"><sup>6</sup></a>]作者提出了一种阈值量化方法。提前选定一个阈值，如果梯度大于这个阈值就量化为<span class="math inline">\(+1\)</span>，如果小于这个阈值就量化为<span class="math inline">\(0\)</span>。[Alistarh et al., 2016<a href="#refer-anchor-7"><sup>7</sup></a>]提出了QSGD方法，允许每个节点在精度、梯度和模型的精度之间进行权衡。QSGD利用随机四舍五入的思想将梯度量化为一组离散值，并利用无损编码产生高效的编码。[Dryden et al., 2016<a href="#refer-anchor-8"><sup>8</sup></a>]]作者提出一种简单的自适应量化方法来选择合适的梯度进行量化并发送。</p>
<p>[Wen et al., 2017<a href="#refer-anchor-9"><sup>9</sup></a>]]通过提出了TernGrad解决了并行过程中水平扩展的问题。他将梯度量化为<span class="math inline">\(\{-1,0,1\}\)</span>。在发送给中心参数服务器之前，每个梯度都将被如下量化： <span class="math display">\[
\tilde{\Delta}_{t}=\operatorname{ternarize}\left(\Delta_{t}\right)=s_{t} \cdot \operatorname{sign}\left(\Delta_{t}\right) \circ b_{t}
\]</span> 其中<span class="math inline">\(s_{t}=\max \left(\operatorname{abs}\left(\Delta_{t}\right)\right)\)</span>，其中<span class="math inline">\(\circ\)</span>是<a href="https://www.baidu.com/link?url=w-LVD0IIl4PbHY-Vzc-UEKgvX7_8m_uRUWXH56DVxRjY77fZbsptVsF2pO7Gmxx3cRBReXg7sz3JTvIakfzCprx8m2RSMUNzT_E2Ppx3wyfA6RMWuAA7E66zF4btnsYK&amp;wd=&amp;eqid=8509435200010e68000000055f216602" target="_blank" rel="noopener external nofollow noreferrer">哈达玛积</a>，<span class="math inline">\(b_t\)</span>是遵循如下伯努利分布的随机二进制向量： <span class="math display">\[
\left\{\begin{array}{l}
P\left(b_{t k}=1 \mid \Delta_{t}\right)=\left|\Delta_{t k}\right| / s_{t} \\
P\left(b_{t k}=0 \mid \Delta_{t}\right)=1-\left|\Delta_{t k}\right| / s_{t}
\end{array}\right.
\]</span> 采用这种方法，服务器和工作节点之间的通信开销可以降低接近20倍.</p>
<p>在单一节点的环境中，我们也能够通过量化梯度获得益处。为了减小反向传播的计算开销，[Rastegari et al., 2016<a href="#refer-anchor-11"><sup>11</sup></a>]将梯度量化为2-bits来进行高性能通信。[Zhou et al., 2016<a href="#refer-anchor-10"><sup>10</sup></a>]他还量化了反向传播过程中的梯度。他们发现使用随机四舍五入的方法是非常重要的，使量程梯度工作得很好。他们设计了如下的k比特量化函数， <span class="math display">\[
\tilde{f}_{\gamma}^{k}(d r)=2 \max _{0}(|d r|)\left[\text { quantize }_{k}\left(\frac{d r}{2 \max _{0}(|d r|)+\frac{1}{2}}\right)-\frac{1}{2}\right]
\]</span> 其中<span class="math inline">\(d r=\frac{\partial c}{\partial r}\)</span>是在某些层输出<span class="math inline">\(r\)</span>的梯度，<span class="math inline">\(quantize_k\)</span>被用于量化一个实数输入<span class="math inline">\(r_{i} \in[0,1]\)</span>到k-bit输出值<span class="math inline">\(r_{0} \in[0,1]\)</span>， <span class="math display">\[
r_{o}=\frac{1}{2^{k}-1} \operatorname{round}\left(\left(2^{k}-1\right) r_{i}\right)
\]</span> 他们还在训练过程中加入额外的噪声，以弥补量化造成的准确性损失。</p>
<h5 id="挑战-3">挑战</h5>
<ul>
<li><p>梯度的大小和符号对于更新权重都很重要。为了量化梯度，我们必须解决如何将这两个因素纳入计算的问题。</p></li>
<li><p>一种简单的量化梯度的方法可能在实践中并不奏效，因为它可能违反随机梯度下降算法的收敛条件。在这种情况下需要更复杂的方法。</p></li>
</ul>
<div id="refer-anchor-1">

</div>
<ul>
<li>[1] <a href="http://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf" target="_blank" rel="noopener external nofollow noreferrer">Krizhevsky A, Sutskever I, Hinton G E. Imagenet classification with deep convolutional neural networks[C]//Advances in neural information processing systems. 2012: 1097-1105.</a>
<div id="refer-anchor-2">

</div></li>
<li>[2] <a href="https://arxiv.org/pdf/1409.1556" target="_blank" rel="noopener external nofollow noreferrer">Simonyan K, Zisserman A. Very deep convolutional networks for large-scale image recognition[J]. arXiv preprint arXiv:1409.1556, 2014.</a>
<div id="refer-anchor-3">

</div></li>
<li>[3] <a href="https://www.cv-foundation.org/openaccess/content_cvpr_2015/html/Szegedy_Going_Deeper_With_2015_CVPR_paper.html" target="_blank" rel="noopener external nofollow noreferrer">Szegedy C, Liu W, Jia Y, et al. Going deeper with convolutions[C]//Proceedings of the IEEE conference on computer vision and pattern recognition. 2015: 1-9.</a>
<div id="refer-anchor-4">

</div></li>
<li>[4] <a href="https://openaccess.thecvf.com/content_cvpr_2016/html/He_Deep_Residual_Learning_CVPR_2016_paper.html" target="_blank" rel="noopener external nofollow noreferrer">He K, Zhang X, Ren S, et al. Deep residual learning for image recognition[C]//Proceedings of the IEEE conference on computer vision and pattern recognition. 2016: 770-778.</a>
<div id="refer-anchor-5">

</div></li>
<li>[5] <a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/IS140694.pdf" target="_blank" rel="noopener external nofollow noreferrer">Seide F, Fu H, Droppo J, et al. 1-bit stochastic gradient descent and its application to data-parallel distributed training of speech dnns[C]//Fifteenth Annual Conference of the International Speech Communication Association. 2014.</a>
<div id="refer-anchor-6">

</div></li>
<li>[6] <a href="http://papers.nips.cc/paper/6768-qsgd-communication-efficient-sgd-via-gradient-quantization-and-encoding.pdf" target="_blank" rel="noopener external nofollow noreferrer">Alistarh D, Grubic D, Li J, et al. QSGD: Communication-efficient SGD via gradient quantization and encoding[C]//Advances in Neural Information Processing Systems. 2017: 1709-1720.</a>
<div id="refer-anchor-7">

</div></li>
<li>[7] <a href="https://www.isca-speech.org/archive/interspeech_2015/i15_1488.html" target="_blank" rel="noopener external nofollow noreferrer">Strom N. Scalable distributed DNN training using commodity GPU cloud computing[C]//Sixteenth Annual Conference of the International Speech Communication Association. 2015.</a>
<div id="refer-anchor-8">

</div></li>
<li>[8] <a href="https://ieeexplore.ieee.org/abstract/document/7835789/" target="_blank" rel="noopener external nofollow noreferrer">Dryden N, Moon T, Jacobs S A, et al. Communication quantization for data-parallel training of deep neural networks[C]//2016 2nd Workshop on Machine Learning in HPC Environments (MLHPC). IEEE, 2016: 1-8.</a>
<div id="refer-anchor-9">

</div></li>
<li>[9] <a href="http://papers.nips.cc/paper/6749-terngrad-ternary-gradients-to-reduce-communication-in-distributed-deep-learning.pdf" target="_blank" rel="noopener external nofollow noreferrer">Wen W, Xu C, Yan F, et al. Terngrad: Ternary gradients to reduce communication in distributed deep learning[C]//Advances in neural information processing systems. 2017: 1509-1519.</a>
<div id="refer-anchor-10">

</div></li>
<li>[10] <a href="https://arxiv.org/pdf/1606.06160" target="_blank" rel="noopener external nofollow noreferrer">Zhou S, Wu Y, Ni Z, et al. Dorefa-net: Training low bitwidth convolutional neural networks with low bitwidth gradients[J]. arXiv preprint arXiv:1606.06160, 2016.</a>
<div id="refer-anchor-11">

</div></li>
<li>[11] <a href="https://link.springer.com/chapter/10.1007/978-3-319-46493-0_32" target="_blank" rel="noopener external nofollow noreferrer">Rastegari M, Ordonez V, Redmon J, et al. Xnor-net: Imagenet classification using binary convolutional neural networks[C]//European conference on computer vision. Springer, Cham, 2016: 525-542.</a></li>
</ul>
]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>通信优化</category>
        <category>梯度压缩</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>通信优化</tag>
        <tag>梯度压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>Error Compensated Quantized SGD and its Applications to Large-scale</title>
    <url>/archives/fcc7e450.html</url>
    <content><![CDATA[<h2 id="摘要">摘要</h2>
<p>本文提出了一种错误补偿的随机梯度量化方法来提高训练效率。量化本地梯度来减小通信负担，但是累积的量化误差会影响收敛的速度。此外，本文对收敛行为进行了理论分析，并证明了其相对于其他算法的优势。实验表明该算法能够再不降级影响收敛性能的情况下，将梯度压缩两个数量级。</p>
<h2 id="介绍">介绍</h2>
<p>一些方法注重将梯度量化为固定值，这样可以用更少的bits来进行通信传输（Zhou et al 2016<a href="#refer-anchor-1"><sup>1</sup></a>）；还有更加激进的方法，比如二进制或者三元组的表达（Seide et al., 2014<a href="#refer-anchor-2"><sup>2</sup></a>;Strom, 2015<a href="#refer-anchor-3"><sup>3</sup></a>; Wen et al., 2017<a href="#refer-anchor-4"><sup>4</sup></a>）；其他方法是在通信的过程中进行稀疏化，其中，每次迭代只有梯度的一小部分在节点之间通信传输（Wangni et al., 2017<a href="#refer-anchor-5"><sup>5</sup></a>; Lin et al., 2018<a href="#refer-anchor-6"><sup>6</sup></a>）</p>
<p>本文提出了误差补偿随机梯度量化方法，称为EC-SGD。该算法和<span class="math inline">\(1Bits\)</span>算法<a href="#refer-anchor-2"><sup>2</sup></a>不太相同，它将之前量化的所有梯度误差都考虑在内，并不只是使用最新一轮的量化误差。</p>
<p>在（Alistarh et al., 2017<a href="#refer-anchor-8"><sup>8</sup></a>）中，作者证明了所提出的QSGD算法达到某次最优间隙所需的迭代次数与随机量化梯度的方差界成正比。然而这不能够解释我们方法的收敛行为，因为我们量化梯度是有偏估计，并不像QSGD那样。事实上，量化梯度的方差边界比在QSGD当中的更大，因为量化误差的累计会更大。为了解决这个问题，我们从另一个角度给出了收敛性分析，并且证明了我们的算法比QSGD算法有着更加严格的最坏情况的错误边界。结果表明，我们提出的误差反馈方案可以很好地抑制量化误差对误差界的影响，我们在实验中观察到，与QSGD相比，次最优性间隙更小。</p>
<h2 id="相关工作">相关工作</h2>
<h3 id="异步sgd">异步SGD</h3>
<p>Hogwild!（Recht et al. 2011）（其他工作相对来说时间比较久远，这里就不罗列了）</p>
<h3 id="梯度量化">梯度量化</h3>
<p>（Seide et al., 2014<a href="#refer-anchor-2"><sup>2</sup></a>）<span class="math inline">\(1Bit-SGD\)</span>用于对梯度的量化，将<span class="math inline">\(0\)</span>作为阈值，量化为<span class="math inline">\(1\)</span>或者<span class="math inline">\(-1\)</span>。在量化过程中引入上一轮的量化误差作为反馈。相似的想法在（Strom, 2015<a href="#refer-anchor-3"><sup>3</sup></a>）中被采纳，它通过迭代累计局部梯度并且仅传输超过预先选择的阈值的梯度分量。（Wen et al., 2017<a href="#refer-anchor-4"><sup>4</sup></a>）扩展了这一想法，并且将梯度压缩至了三元组来保证其无偏性。QSGD（Alistarh et al., 2017<a href="#refer-anchor-8"><sup>8</sup></a>）采用均匀分布的方式随机量化梯度，更加细致地分析其收敛性。ZipML（Zhang et al., 2017<a href="#refer-anchor-8"><sup>8</sup></a>）介绍了一种优化的量化策略，在分布式状态下动态选择量化节点。（Zhou et al 2016<a href="#refer-anchor-1"><sup>1</sup></a>）提出了DoReFa-Net来训练卷积神经网络，将输入、权重和梯度都进行定点的量化。</p>
<h3 id="梯度稀疏化">梯度稀疏化</h3>
<p>梯度丢弃方法是由（Aji &amp; Heafield, 2017<a href="#refer-anchor-10"><sup>10</sup></a>）将稀疏化方法引入到梯度当中，来减小通信误差。在（Wangni et al., 2017<a href="#refer-anchor-11"><sup>11</sup></a>）将梯度量化抽象成了线性规划问题，目的就是最小化量化梯度的方差增长。（Lin et al., 2018<a href="#refer-anchor-6"><sup>6</sup></a>）提出了深度梯度压缩算法，利用动量校正，梯度剪裁，动量因子掩饰，热身训练，以实现更高的稀疏性而不失去准确性。</p>
<h2 id="preliminaries">Preliminaries</h2>
<p>（比较容易理解，暂时不翻译）</p>
<h2 id="误差压缩量化sgd方法">误差压缩量化SGD方法</h2>
<p>在每一轮迭代，之前每一轮的累计的量化误差都会对当前本地梯度进行补偿，再通过随机量化函数进行压缩。</p>
<p>令<span class="math inline">\(Q: \mathbb{R}^{d} \rightarrow \mathcal{C}^{d}\)</span>是一个无偏的随机量化函数，它将每部分的<span class="math inline">\(d\)</span>个维度向量映射到量化密码本<span class="math inline">\(\mathcal{C}\)</span>中。密码本通常只包含有限数量的元素，因此量化向量能够高效的编码。在每次迭代中，每个节点在广播之前量化他们的本地梯度： <span class="math display">\[
\tilde{\mathbf{g}}_{p}^{(t)}=Q\left(\mathbf{g}_{p}^{(t)}\right)
\]</span> 其中<span class="math inline">\(\mathbf{g}_{p}^{(t)}\)</span>是第<span class="math inline">\(p\)</span>个节点和第<span class="math inline">\(t\)</span>次迭代的本地梯度，<span class="math inline">\(\tilde{\mathbf{g}}_{p}^{(t)}\)</span>表示他的量化产物。</p>
<p>当节点接收到所有从其他节点发送过来的本地梯度之后，它将计算全局梯度以及更新它本地的模型，采用以下式子： <span class="math display">\[
\mathbf{w}^{(t+1)}=\mathbf{w}^{(t)}-\eta \cdot \tilde{\mathbf{g}}^{(t)}=\mathbf{w}^{(t)}-\frac{\eta}{P} \sum_{p=1}^{P} \tilde{\mathbf{g}}_{p}^{(t)}
\]</span></p>
<p>其中<span class="math inline">\(\eta&gt;0\)</span>表示学习率。</p>
<p>ECQ-SGD的核心思想是当量化本地梯度时，当前梯度和之前累加的量化误差都会考虑在内。特别的，我们使用<span class="math inline">\(\mathbf{h}_{p}^{(t)}\)</span>代表第<span class="math inline">\(p\)</span>个节点的第<span class="math inline">\(t\)</span>次迭代的累计量化误差： <span class="math display">\[
\mathbf{h}_{p}^{(t)}=\sum_{t^{\prime}=0}^{t-1} \beta^{t-1-t^{\prime}}\left(\mathbf{g}_{p}^{\left(t^{\prime}\right)}-\tilde{\mathbf{g}}_{p}^{\left(t^{\prime}\right)}\right)
\]</span> 其中<span class="math inline">\(\beta\)</span>是时间减弱因子。注意到累计量化误差的更新式如下： <span class="math display">\[
\mathbf{h}_{p}^{(t)}=\beta \mathbf{h}_{p}^{(t-1)}+\left(\mathbf{g}_{p}^{(t-1)}-\tilde{\mathbf{g}}_{p}^{(t-1)}\right)
\]</span> 其中<span class="math inline">\(\mathbf{h}_{p}^{(0)}=\mathbf{0}\)</span>。量化本地梯度将会通过量化函数计算出误差补偿梯度： <span class="math display">\[
\tilde{\mathbf{g}}_{p}^{(t)}=Q\left(\mathbf{g}_{p}^{(t)}+\alpha \mathbf{h}_{p}^{(t)}\right)
\]</span> 其中<span class="math inline">\(\alpha\)</span>代表补偿系数。</p>
<p>这里我们采用服从均匀分布的随机量化函数，类似于QSGD算法（Alistarh et al., 2017<a href="#refer-anchor-8"><sup>8</sup></a>），其中第<span class="math inline">\(i\)</span>个维度将会量化为： <span class="math display">\[
\tilde{g}_{i}=\|\mathbf{g}\| \cdot \operatorname{sgn}\left(g_{i}\right) \cdot \xi\left(\left|g_{i}\right| ;\|\mathbf{g}\|\right)
\]</span> 其中$|| <span class="math inline">\(表示扩展因子（可以选择\)</span>l_2<span class="math inline">\(或者\)</span>l_{}<span class="math inline">\(这两种方式），\)</span>()<span class="math inline">\(是随机函数，是映射到如下元素中\)</span>{0, , , 1}$： <span class="math display">\[
\xi\left(\left|g_{i}\right| ;\|\mathbf{g}\|\right)=\left\{\begin{array}{ll}
\frac{l}{s}, &amp; \text { with probability } l+1-s \cdot \frac{\left|g_{i}\right|}{\|\mathbf{g}\|} \\
\frac{l+1}{s}, &amp; \text { otherwise }
\end{array}\right.
\]</span> 其中<span class="math inline">\(\left|g_{i}\right| /\|\mathbf{g}\|\)</span>是落在<span class="math inline">\(\left[\frac{l}{s}, \frac{l+1}{s}\right)\)</span>范围之内。超参数<span class="math inline">\(s\)</span>表示非零量化等级：更大的<span class="math inline">\(s\)</span>会导致更加细粒度的量化，同时导致更多的通信消耗。我们采用<span class="math inline">\(Q_{s}(\cdot)\)</span>代表量化函数，<span class="math inline">\(s\)</span>表示非零量化等级。</p>
<p>在量化之后，我们只需要使用<span class="math inline">\(r=\left\lceil\log _{2}(2 s+1)\right\rceil\)</span>bits来编码每个梯度<span class="math inline">\(\tilde{g}_{i}\)</span>，一个完整的精度表示扩展因子$ ||$。全部的通信需要花费<span class="math inline">\(32+d\)</span>bits（<span class="math inline">\(r \ll 32\)</span>）,原始的梯度需要每个维度32-bit的全精度来表示。更加有效的编码模式，例如Huffman编码，能够进一步地减小通信量。令<span class="math inline">\(d_k\)</span>表示分配各<span class="math inline">\(k\)</span>个量化级别的维数，之后整个编码长度最多只需要<span class="math inline">\(\sum_{k=1}^{2 s+1} d_{k} \log _{2} \frac{d}{d_{k}}\)</span>个bits。</p>
<p>算法1概括了上述的整个过程：</p>
<p><img src="/archives/fcc7e450/image-20200728190425444.png" alt="image-20200728190425444" style="zoom:67%;"></p>
<h2 id="理论分析">理论分析</h2>
<p>（暂时省略）</p>
<h2 id="实验分析">实验分析</h2>
<h3 id="线性模型">线性模型</h3>
<p>使用三个人造数据集：Syn-256、Syn-512和Syn-1024。每个数据集包含10k个训练样本，后缀表示特征维度<span class="math inline">\(d\)</span>。训练样本通过<span class="math inline">\(y_{i}=\mathbf{w}^{* T} \mathbf{x}_{i}+\epsilon_{i}\)</span>生成，其中<span class="math inline">\(\mathbf{w}^{*} \in \mathbb{R}^{d}\)</span>是我们希望获得的潜在模型参数，<span class="math inline">\(\left\{\epsilon_{i}\right\}\)</span>是服从独立同分布的随机噪声。学习率是0.02，QSGD和ECQ-SGD都采用<span class="math inline">\(l_2\)</span>作为扩展因子，采用<span class="math inline">\(4\)</span>作为量化等级。</p>
<p>下图我们比较了损失函数值（上方）和距离最优解的距离（下方）。对于这三个数据集，ECQ-SGD损失函数的收敛性更加接近于<span class="math inline">\(32-bit\)</span>全精度的SGD算法，比<span class="math inline">\(QSGD\)</span>的训练速度明显更快。另一方面，QSGD(或ECQ-SGD)与32Bit-FP在最优解距离上的差距度量了量化误差对(21)中定义的误差界的贡献。ECQ-SGD的距离差明显小于QSGD，说明量化误差对误差界的贡献得到了很好的抑制。</p>
<p>下面我们比较了在大数据集上，QSGD和ECQ-SGD运行时训练速率，Syn-20k，它包括了50k训练样本和20k维度的特征。在图三中，我们多维度展示了在1k轮迭代之后各种方法的时间消耗和测试误差。我们发现ECQ-SGD达到和32Bit-FP相似的测试误差，比32Bit-FP和QSGD所用的时间更短。虽然ECQ-SGD需要额外的编码好解码时间，由于通信量的降低，整个训练速度依然得到了提高：</p>
<p><img src="/archives/fcc7e450/image-20200728192202073.png" alt="image-20200728192202073" style="zoom:67%;"></p>
<p>其次，本文还对两个公开的数据集<code>YearPredictionMSD</code>（回归）和<code>gisette</code>分类。在不同的量化方法下对这两个数据集的逻辑回归和线性回归做了测评：</p>
<p><img src="/archives/fcc7e450/image-20200728192421592.png" alt="image-20200728192421592" style="zoom: 80%;"></p>
<h3 id="卷积神经网络">卷积神经网络</h3>
<p>本文还在卷积神经网络上做了测试。CIFAR-10和ResNet-20模型，采用不同的量化方法，结果如图所示：</p>
<figure>
<img src="/archives/fcc7e450/image-20200728192625094.png" alt="image-20200728192625094"><figcaption aria-hidden="true">image-20200728192625094</figcaption>
</figure>
<p>在第一列中，比较了各种方法的整体通信负担和损失函数值的情况。与32位全精度基准方法相比，每个模型的超参数被分离，以达到可以忽略的精度损失。我们发现所有的方法都以相似的速度收敛，但ECQ-SGD在通信成本上降低了80倍以上，并且显著优于其他梯度量化方法。</p>
<p>在第二列和第三列中，我们比较了它和QSGD的细节，因为它和我们的方法最为相关。我们采用了不同的扩展因子：第二列是<span class="math inline">\(l_2\)</span>，第三列是<span class="math inline">\(l_{\infty}\)</span>。我们发现我们观察到，ECQ-SGD在收敛速度和分类精度方面始终优于QSGD，而在相同的超参数设置下，这两种方法在降低通信成本方面是相似的。</p>
<h3 id="性能模型">性能模型</h3>
<p>我们采用（Yan et al., 2015）提出的性能评估模型对ECQ-SGD算法进行评估。对计算量和通信时间进行轻量级分析，以估计较大集群的学习效率。主要硬件规格如下:Intel Xeon E5-2680 CPU, Nvidia Tesla P40 GPU(每个节点8个单元)，Mellanox ConnectX-3 Pro网卡(40Gb/s连通性)。</p>
<p>下图中，我们展示了采用ResNet-50模型训练ILSVRC-12数据集。训练512个GPU，ECQ-SGD先比于普通的SGD达到了143.5%的加速比。</p>
<p><img src="/archives/fcc7e450/image-20200728193508865.png" alt="image-20200728193508865" style="zoom:67%;"></p>
<h2 id="结论">结论</h2>
<p>为了提高大规模分布式优化的学习效率，本文提出了误差补偿量化SGD算法。通过引入误差反馈机制，ECQ-SGD算法可以有效地抑制量化误差对误差界的贡献。我们从理论的角度分析了它的收敛行为，并证明了它比最先进的QSGD算法的优势。在线性模型和非凸卷积神经网络上的实验证明了该算法的有效性。</p>
<h2 id="部分参考文献">部分参考文献</h2>
<div id="refer-anchor-1">

</div>
<ul>
<li>[1] <a href="https://arxiv.org/pdf/1606.06160" target="_blank" rel="noopener external nofollow noreferrer">Zhou S, Wu Y, Ni Z, et al. Dorefa-net: Training low bitwidth convolutional neural networks with low bitwidth gradients[J]. arXiv preprint arXiv:1606.06160, 2016.</a></li>
</ul>
<div id="refer-anchor-2">

</div>
<ul>
<li>[2] <a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/IS140694.pdf" target="_blank" rel="noopener external nofollow noreferrer">Seide F, Fu H, Droppo J, et al. 1-bit stochastic gradient descent and its application to data-parallel distributed training of speech dnns[C]//Fifteenth Annual Conference of the International Speech Communication Association. 2014.</a></li>
</ul>
<div id="refer-anchor-3">

</div>
<ul>
<li>[3] <a href="https://www.isca-speech.org/archive/interspeech_2015/papers/i15_1488.pdf" target="_blank" rel="noopener external nofollow noreferrer">Strom N. Scalable distributed DNN training using commodity GPU cloud computing[C]//Sixteenth Annual Conference of the International Speech Communication Association. 2015.</a>
<div id="refer-anchor-4">

</div></li>
<li>[4] <a href="http://papers.nips.cc/paper/6749-terngrad-ternary-gradients-to-reduce-communication-in-distributed-deep-learning.pdf" target="_blank" rel="noopener external nofollow noreferrer">Wen W, Xu C, Yan F, et al. Terngrad: Ternary gradients to reduce communication in distributed deep learning[C]//Advances in neural information processing systems. 2017: 1509-1519.</a>
<div id="refer-anchor-5">

</div></li>
<li>[5] <a href="http://papers.nips.cc/paper/7405-gradient-sparsification-for-communication-efficient-distributed-optimization.pdf" target="_blank" rel="noopener external nofollow noreferrer">Wangni J, Wang J, Liu J, et al. Gradient sparsification for communication-efficient distributed optimization[C]//Advances in Neural Information Processing Systems. 2018: 1299-1309.</a>
<div id="refer-anchor-6">

</div></li>
<li>[6] <a href="https://arxiv.org/pdf/1712.01887" target="_blank" rel="noopener external nofollow noreferrer">Lin Y, Han S, Mao H, et al. Deep gradient compression: Reducing the communication bandwidth for distributed training[J]. arXiv preprint arXiv:1712.01887, 2017.</a>
<div id="refer-anchor-7">

</div></li>
<li>[7] <a href="http://papers.nips.cc/paper/4390-hogwild-a-lock-free-approach-to-parallelizing-stochastic-gradient-descent.pdf" target="_blank" rel="noopener external nofollow noreferrer">Recht B, Re C, Wright S, et al. Hogwild: A lock-free approach to parallelizing stochastic gradient descent[C]//Advances in neural information processing systems. 2011: 693-701.</a>
<div id="refer-anchor-8">

</div></li>
<li>[8] <a href="http://papers.nips.cc/paper/6768-qsgd-communication-efficient-sgd-via-gradient-quantization-and-encoding.pdf" target="_blank" rel="noopener external nofollow noreferrer">Alistarh D, Grubic D, Li J, et al. QSGD: Communication-efficient SGD via gradient quantization and encoding[C]//Advances in Neural Information Processing Systems. 2017: 1709-1720.</a>
<div id="refer-anchor-9">

</div></li>
<li>[9] <a href="http://proceedings.mlr.press/v70/zhang17e.html" target="_blank" rel="noopener external nofollow noreferrer">Zhang H, Li J, Kara K, et al. ZipML: Training linear models with end-to-end low precision, and a little bit of deep learning[C]//International Conference on Machine Learning. 2017: 4035-4043.</a>
<div id="refer-anchor-10">

</div></li>
<li>[10] <a href="https://arxiv.org/pdf/1704.05021" target="_blank" rel="noopener external nofollow noreferrer">Aji A F, Heafield K. Sparse communication for distributed gradient descent[J]. arXiv preprint arXiv:1704.05021, 2017.</a>
<div id="refer-anchor-11">

</div></li>
<li>[11] <a href="http://papers.nips.cc/paper/7405-gradient-sparsification-for-communication-efficient-distributed-optimization.pdf" target="_blank" rel="noopener external nofollow noreferrer">Wangni J, Wang J, Liu J, et al. Gradient sparsification for communication-efficient distributed optimization[C]//Advances in Neural Information Processing Systems. 2018: 1299-1309.</a>
<div id="refer-anchor-12">

</div></li>
</ul>
]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>通信优化</category>
        <category>梯度压缩</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>通信优化</tag>
        <tag>梯度压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>QSGD Communication-Efficient SGD via Gradient Quantization and Encoding</title>
    <url>/archives/d06ef2e3.html</url>
    <content><![CDATA[<h2 id="摘要">摘要</h2>
<p>本文提出了量化SGD（QSGD）方法，可以帮助使用者平滑地权衡通信带宽和收敛时间：在方差成本可能较高的情况下，节点可以调节每轮迭代发送的比特数。本文证明了这种权衡是内在的，某种意义上，提高它超过某个阈值将违反信息理论的下界。QSGD保证了在凸和非凸目标函数上的收敛性，在异步条件下，能够使用随机方差减小的方法进行拓展。</p>
<h2 id="简介">简介</h2>
<p>比较流行的减少通信量通常采用有损压缩的方法<a href="#refer-anchor-1"><sup>1</sup></a><a href="#refer-anchor-2"><sup>2</sup></a><a href="#refer-anchor-3"><sup>3</sup></a>。一种方式是简单地降低表示精度，在凸和稀疏的条件下证明了收敛性<a href="#refer-anchor-4"><sup>4</sup></a>。<span class="math inline">\(1BitSGD\)</span>量化方法为梯度的量化压缩奠定了基础。</p>
<h3 id="本文贡献">本文贡献</h3>
<p>本文重点关注数据并行SGD算法的通信开销和收敛速率保证。我们提出有损的梯度压缩方法：QSGD算法，它可以在每一次迭代中在通信量和方差之间做平衡。</p>
<p>QSGD建立在两种算法思想上。第一种是直观的随机量化模式：在某进程中给出一个梯度向量，我们通过四舍五入到一组离散的值来量化每个部分，有原则地保持原始数据的统计性质。第二种是量化梯度的有效无损代码，利用他们的统计属性来生成有效的编码。我们分析给出了QSGD引起的精度-方差权衡的严格界限。</p>
<p>QSGD非常普遍，在假设条件下，对于非凸目标和异步迭代，能够收敛到局部最小。在非平凡扩展的情况下，我们创新了一种随机方差减小的QSGD算法，称为QSVRG，它具有指数级的收敛速率。</p>
<p>一个关键的问题是QSGD的压缩方差平衡是否是固有的：例如，任何算法保证最多恒定方差放大每次迭代需要传输<span class="math inline">\(\Omega(n)\)</span>bits。回答是肯定的：在此基础上的渐近改进将打破分布式平均估计的通信复杂度下限（不是很懂这块内容）。</p>
<p>与1BitSGD相比，QSGD具有渐近高压缩性能，在标准假设下可证明收敛性，在某些情况下具有较好的实际性能。</p>
<h2 id="preliminaries">Preliminaries</h2>
<p>（暂时省略）</p>
<h2 id="量化随机梯度下降qsgd">量化随机梯度下降（QSGD）</h2>
<h3 id="一般性的随机量化和编码">一般性的随机量化和编码</h3>
<h4 id="随机量化">随机量化</h4>
<p>我们现在思考随机梯度向量一般参数有损压缩方案。压缩函数用<span class="math inline">\(Q_s(v)\)</span>表示，其中<span class="math inline">\(s \geq 1\)</span>调节参数，代表我们所要实现的量化的程度。直观上来看，我们定义<span class="math inline">\(s\)</span>服从<span class="math inline">\(0-1\)</span>的均匀分布，每个值都以一种保持预期值并引入最小方差的方式进行量化，例如下图：</p>
<p><img src="/archives/d06ef2e3/image-20200728104606218.png" alt="image-20200728104606218" style="zoom:67%;"></p>
<p>上图是5级的广义随机量化的示例</p>
<p>对于任意的<span class="math inline">\(\boldsymbol{v} \in \mathbb{R}^{n} \text { with } \boldsymbol{v} \neq \mathbf{0})\)</span>，<span class="math inline">\(Q_{s}(\boldsymbol{v})\)</span>定义如下： <span class="math display">\[
Q_{s}\left(v_{i}\right)=\|\boldsymbol{v}\|_{2} \cdot \operatorname{sgn}\left(v_{i}\right) \cdot \xi_{i}(\boldsymbol{v}, s)
\]</span> 其中<span class="math inline">\(\xi_{i}(\boldsymbol{v}, s)\)</span>是一个独立随机变量，定义如下。令<span class="math inline">\(0 \leq \ell&lt;s\)</span>是一个整数，例如<span class="math inline">\(\left|v_{i}\right| /\|\boldsymbol{v}\|_{2} \in[\ell / s,(\ell+1) / s]\)</span>。<span class="math inline">\([\ell / s,(\ell+1) / s]\)</span>是与$|v_{i}| /||_{2} $相符的量化间隔。定义： <span class="math display">\[
\xi_{i}(\boldsymbol{v}, s)=\left\{\begin{array}{ll}
\ell / s &amp; \text { 以如下概率 } 1-p\left(\frac{\left|v_{i}\right|}{\|\boldsymbol{v}\|_{2}}, s\right) \\
(\ell+1) / s &amp; \text { 其他情况. }
\end{array}\right.
\]</span> 这里<span class="math inline">\(p(a, s)=a s-\ell\)</span>对于任何的<span class="math inline">\(a \in[0,1]\)</span>。如果<span class="math inline">\(v=0\)</span>，我们定义<span class="math inline">\(Q(v,s)=0\)</span>。</p>
<p><span class="math inline">\(\xi_{i}(\boldsymbol{v}, s)\)</span>的分布具有最小的方差，它的期望满足<span class="math inline">\(\mathbb{E}\left[\xi_{i}(\boldsymbol{v}, s)\right]=\left|v_{i}\right| /\|\boldsymbol{v}\|_{2}\)</span>。我们可以证明如下：</p>
<p><strong>引理</strong> 对于任意<span class="math inline">\(\boldsymbol{v} \in \mathbb{R}^{n}\)</span>，我们有（1）<span class="math inline">\(\mathbb{E}\left[Q_{s}(\boldsymbol{v})\right]=\boldsymbol{v} \text { (无偏) }\)</span>；（2）<span class="math inline">\(\mathbb{E}\left[\left\|Q_{s}(\boldsymbol{v})-\boldsymbol{v}\right\|_{2}^{2}\right] \leq \min \left(n / s^{2}, \sqrt{n} / s\right)\|\boldsymbol{v}\|_{2}^{2}\)</span>（方差最小边界）；（3）<span class="math inline">\(\mathbb{E}\left[\left\|Q_{s}(\boldsymbol{v})\right\|_{0}\right] \leq s(s+\sqrt{n})\)</span>稀疏性</p>
<h4 id="梯度的高效编码">梯度的高效编码</h4>
<p>对于任意的向量<span class="math inline">\(v\)</span>，输出<span class="math inline">\(Q_s(v)\)</span>可以表达为三元组<span class="math inline">\(\left(\|v\|_{2}, \sigma, \zeta\right)\)</span>，其中<span class="math inline">\(\sigma\)</span>是向量中<span class="math inline">\(v_i\)</span>的符号，<span class="math inline">\(\zeta\)</span>是整数<span class="math inline">\(s \cdot \xi_{i}(\boldsymbol{v}, s)\)</span>的向量。我们可以发现，大的整数出现的频率很低。我们将通过专门的<code>Eilias</code>整数编码来利用这一点。</p>
<p>直觉上，对于任何正整数<span class="math inline">\(k\)</span>，他的编码用<span class="math inline">\(Elias(k)\)</span>表示<span class="math inline">\(k\)</span>的二进制，并且在它的前面加上长度表示。然后递归地编码这个前缀。我们发现对于任何整数<span class="math inline">\(k\)</span>，结果编码的长度为<span class="math inline">\(\operatorname{Elias}(k) \mid=\log k+\log \log k+\ldots+1 \leq(1+o(1)) \log k+1\)</span>。编码和解码过程非常高效。</p>
<p>给定的梯度向量可以表示为三元组<span class="math inline">\(\left(\|\boldsymbol{v}\|_{2}, \boldsymbol{\sigma}, \boldsymbol{\zeta}\right)\)</span>，具有<span class="math inline">\(s\)</span>压缩等级，我们的编码输出为字符串<span class="math inline">\(S\)</span>，定义如下：第一使用<span class="math inline">\(32bits\)</span>编码<span class="math inline">\(\|\boldsymbol{v}\|_{2}\)</span>。它继续使用<span class="math inline">\(Elias\)</span>递归编码读第一个非零项<span class="math inline">\(\boldsymbol{\zeta}\)</span>的位置进行编码。接下来附加一个bit代表<span class="math inline">\(\boldsymbol{\sigma}_i\)</span>，遵循<span class="math inline">\(s \cdot \xi_{i}(\boldsymbol{v}, s)\)</span>。迭代进行，它继续从当前的写入坐标到下一个非零的距离，并以同样的方式对坐标的<span class="math inline">\(\boldsymbol{\sigma}_i\)</span>和<span class="math inline">\(\boldsymbol{\zeta}_i\)</span>进行编码。解码方案很简单：我们首先读取<span class="math inline">\(32bits\)</span>来构建<span class="math inline">\(\|\boldsymbol{v}\|_{2}\)</span>，接下来，迭代使用<span class="math inline">\(Elias\)</span>递归编码的译码方案读取非零项<span class="math inline">\(\boldsymbol{\zeta}\)</span>和<span class="math inline">\(\boldsymbol{\sigma}\)</span>的位置和值。</p>
<div id="refer-anchor-1">

</div>
<ul>
<li>[1] <a href="http://papers.nips.cc/paper/4687-large-scale-distributed-deep-networks.pdf" target="_blank" rel="noopener external nofollow noreferrer">Dean J, Corrado G, Monga R, et al. Large scale distributed deep networks[C]//Advances in neural information processing systems. 2012: 1223-1231.</a>
<div id="refer-anchor-2">

</div></li>
<li>[2] <a href="https://arxiv.org/pdf/1603.04467.pdf" target="_blank" rel="noopener external nofollow noreferrer">Abadi M, Agarwal A, Barham P, et al. Tensorflow: Large-scale machine learning on heterogeneous distributed systems[J]. arXiv preprint arXiv:1603.04467, 2016.</a>
<div id="refer-anchor-3">

</div></li>
<li>[3] <a href="http://papers.nips.cc/paper/6749-terngrad-ternary-gradients-to-reduce-communication-in-distributed-deep-learning.pdf" target="_blank" rel="noopener external nofollow noreferrer">Wen W, Xu C, Yan F, et al. Terngrad: Ternary gradients to reduce communication in distributed deep learning[C]//Advances in neural information processing systems. 2017: 1509-1519.</a>
<div id="refer-anchor-4">

</div></li>
<li>[4] <a href="http://papers.nips.cc/paper/5717-taming-the-wild-a-unified-analysis-of-hogwild-style-algorithms.pdf" target="_blank" rel="noopener external nofollow noreferrer">De Sa C M, Zhang C, Olukotun K, et al. Taming the wild: A unified analysis of hogwild-style algorithms[C]//Advances in neural information processing systems. 2015: 2674-2682.</a></li>
</ul>
]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>通信优化</category>
        <category>梯度压缩</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>通信优化</tag>
        <tag>梯度压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>粉笔公考-判断推理-图形推理</title>
    <url>/archives/487a2936.html</url>
    <content><![CDATA[<h2 id="判断推理题型">判断推理题型</h2>
<ul>
<li>图形推理</li>
<li>类比推理</li>
<li>定义判断</li>
<li>逻辑判断</li>
</ul>
<h2 id="图形推理">图形推理</h2>
<h3 id="命题形式">命题形式</h3>
<h4 id="一组图">一组图</h4>
<p>大多数：从左到右整体去看</p>
<p>有时候：跳着看，考地相对较少</p>
<p><img src="/archives/487a2936/image-20200727205210815.png" alt="image-20200727205210815" style="zoom:67%;"></p>
<h4 id="两组图">两组图</h4>
<p>第一组用于找规律，第二组用规律（模仿第一组的规律即可，细节变化以第二组图为准）</p>
<p><img src="/archives/487a2936/image-20200727205147584.png" alt="image-20200727205147584" style="zoom:67%;"></p>
<h4 id="九宫格">九宫格</h4>
<p>优先横着看，其次再是竖着看（很少斜着、S型和米子型）</p>
<h4 id="分组分类">分组分类</h4>
<p>一般分成两组，在组内找出各自的规律（找出两个规律）</p>
<p><img src="/archives/487a2936/image-20200727205400400.png" alt="image-20200727205400400" style="zoom:67%;"></p>
<h4 id="空间类折纸盒">空间类：折纸盒</h4>
<p>六面体为主，转化成平面</p>
<p><img src="/archives/487a2936/image-20200727205533123.png" alt="image-20200727205533123" style="zoom:67%;"></p>
<h5 id="特殊题型">特殊题型</h5>
<ul>
<li>截面图</li>
<li>三视图</li>
<li>立体拼合</li>
</ul>
<h2 id="六大规律">六大规律</h2>
<p>重点通过识别图形特征，来识别考察什么规律</p>
<ol type="1">
<li>位置规律</li>
<li>样式规律</li>
<li>属性规律</li>
<li>特殊规律</li>
<li>数量规律</li>
<li>空间规律</li>
</ol>
<h3 id="位置规律">位置规律</h3>
<h4 id="特征">特征</h4>
<p>位置类识别特征：各图元素组成相同</p>
<p><img src="/archives/487a2936/image-20200727210022937.png" alt="image-20200727210022937" style="zoom:67%;"></p>
<h4 id="考点">考点</h4>
<ul>
<li>平移</li>
<li>旋转、翻转（常结合考察）</li>
</ul>
<h5 id="考点一平移">考点一：平移</h5>
<ol type="1">
<li><p>方向：直线（上下、左右、对角线）、绕圈（顺/逆时针）</p>
<p><img src="/archives/487a2936/image-20200727210259617.png" alt="image-20200727210259617" style="zoom:67%;"></p></li>
<li><p>步数：恒定、递增（等差）、周期（考的少）</p></li>
</ol>
<h6 id="宫格形黑块平移">宫格形黑块平移</h6>
<ol type="1">
<li>个别黑块重合
<ul>
<li>题干和选项大部分元素组成完全一致，个别一两副图少黑块</li>
<li>题干第一幅图的黑块一般不会重合</li>
</ul></li>
</ol>
<p><img src="/archives/487a2936/image-20200727210936304.png" alt="image-20200727210936304" style="zoom:67%;"></p>
<ol start="2" type="1">
<li><p>黑块走到头后</p>
<ul>
<li><p>循环走：从头开始</p>
<p><img src="/archives/487a2936/image-20200727211118319.png" alt="image-20200727211118319" style="zoom:67%;"></p></li>
<li><p>折返走：直接弹回</p>
<p><img src="/archives/487a2936/image-20200727211135729.png" alt="image-20200727211135729" style="zoom:67%;"></p></li>
<li><p>“双胞胎”黑块如何分辨：就近走原则</p>
<p><img src="/archives/487a2936/image-20200727211331662.png" alt="image-20200727211331662" style="zoom:67%;"></p></li>
</ul></li>
</ol>
<h6 id="多宫格方向判定">多宫格方向判定</h6>
<p>题型特征：16宫格图形多个黑块平移</p>
<ol type="1">
<li><p>直线走：</p>
<ul>
<li>横行黑块数量相同（左右走）</li>
<li>竖行黑块数量相同（上下走）</li>
</ul>
<p><img src="/archives/487a2936/image-20200727211823656.png" alt="image-20200727211823656" style="zoom:67%;"></p></li>
<li><p>绕圈走：</p>
<ul>
<li>中间颜色数量相同，有限考虑内外圈分开看</li>
</ul>
<p><img src="/archives/487a2936/image-20200727212331968.png" alt="image-20200727212331968" style="zoom:67%;"></p></li>
</ol>
<h5 id="考点二旋转与翻转">考点二：旋转与翻转</h5>
<h6 id="旋转">旋转</h6>
<ol type="1">
<li>方向：顺时针、逆时针</li>
<li>常见角度：45°、60°、90°、180°等</li>
</ol>
<blockquote>
<p>TIPS：难题可以采用两两相邻比较</p>
<p>钟表类：麦面一个框，中间有一个点，饶了一圈线——常考旋转</p>
</blockquote>
<h6 id="翻转">翻转</h6>
<ol type="1">
<li>左右翻转</li>
<li>上下翻转（可能存在视觉误差，需要警觉）</li>
</ol>
<blockquote>
<p>TIPS：先看容易看懂的</p>
</blockquote>
<p>这道题目需要注意上下翻转，很难看出来（第二张图到第三张图）</p>
<p><img src="/archives/487a2936/image-20200727214018551.png" alt="image-20200727214018551" style="zoom:67%;"></p>
<h6 id="区分旋转和翻转">区分旋转和翻转</h6>
<ul>
<li><p>只有左右互换（上下不变）——左右翻</p>
<p><img src="/archives/487a2936/image-20200727214319546.png" alt="image-20200727214319546" style="zoom:67%;"></p></li>
<li><p>只有上下互换（左右不变）——上下翻</p>
<p><img src="/archives/487a2936/image-20200727214353319.png" alt="image-20200727214353319" style="zoom:67%;"></p></li>
<li><p>上下、左右都互换——旋转180°</p>
<p><img src="/archives/487a2936/image-20200727214429063.png" alt="image-20200727214429063" style="zoom:67%;"></p></li>
</ul>
<h3 id="样式规律">样式规律</h3>
<h4 id="特征-1">特征</h4>
<p>样式识别特征：元素组成相似</p>
<h4 id="考点-1">考点</h4>
<ol type="1">
<li>遍历</li>
<li>加减同异</li>
<li>黑白运算</li>
</ol>
<h5 id="考点一遍历">考点一：遍历</h5>
<p>图形特征：小元素重复出现</p>
<p>解题思路：缺啥补啥（遍历包括空白/阴影等很多方面）</p>
<p><img src="/archives/487a2936/image-20200727215015137.png" alt="image-20200727215015137" style="zoom:67%;"></p>
<h5 id="考点二加减同异"><strong>考点二：加减同异</strong></h5>
<p>识别特征：相同线条重复出现</p>
<ol type="1">
<li>相加、相减</li>
<li>求异（保留不同）</li>
<li>求同（保留相同）</li>
</ol>
<blockquote>
<p>对比选项，从特殊线条入手（横线、竖线、最长最短线）</p>
</blockquote>
]]></content>
      <categories>
        <category>公务员考试</category>
        <category>判断推理</category>
      </categories>
      <tags>
        <tag>国考</tag>
        <tag>行测</tag>
        <tag>判断推理</tag>
        <tag>图形推理</tag>
        <tag>类比推理</tag>
        <tag>定义判断</tag>
        <tag>逻辑判断</tag>
      </tags>
  </entry>
  <entry>
    <title>Kong和Keycloak第三方认证和权限管理</title>
    <url>/archives/fbb6b1b9.html</url>
    <content><![CDATA[<h2 id="介绍">介绍</h2>
<p>使用Keycloak作为第三方认证服务，Kong作为API网关与Keycloak进行对接，打通两者用户数据库，并使用Kong当中的ACL插件进行接口权限的设计。主要涉及到如下框架：</p>
<ul>
<li>Kong——开源API网关</li>
<li>Keycloak——一个OpenID认证服务</li>
<li>Konga——API网关后台管理可视化界面</li>
</ul>
<figure>
<img src="/archives/fbb6b1b9/Screen-Shot-2018-11-15-at-17.29.03-1595831384730.png" alt="Screen-Shot-2018-11-15-at-17.29.03"><figcaption aria-hidden="true">Screen-Shot-2018-11-15-at-17.29.03</figcaption>
</figure>
<p>下文将记录Kong、Konga和Keycloak三者的安装和对接过程，并介绍权限打通的设计思路。以下是主要步骤：</p>
<ol type="1">
<li>创建Dockerfile，创建带有kong-oidc插件的镜像</li>
<li>构建上述镜像</li>
<li>创建<code>docker-compose.yml</code>文件，配置Kong，Konga和Keycloak的相关信息</li>
<li>启动kong-db服务</li>
<li>运行<code>migrations</code></li>
<li>启动Kong服务</li>
<li>验证kong-oidc插件是否可用</li>
<li>使用StreamSet打通Keycloak和Kong用户数据库，进行数据同步</li>
<li>添加kong-oidc插件和ACL插件</li>
<li>测试认证是否可行</li>
</ol>
<h2 id="安装过程">安装过程</h2>
<h3 id="创建dockerfile文件">创建Dockerfile文件</h3>
<p>第一，我们需要创建有关于Kong的镜像。我们还需要在这个镜像的基础上安装kong-oidc插件。我们可以采用以下两种方法进行:</p>
<ol type="1">
<li>修改现有的、正在运行的容器并提交更改</li>
<li>创建Dockerfile文件，并镜像构建</li>
</ol>
<p>我们将采用第二种方法，以下是Dockerfile文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir -p docker/kong</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> touch docker/kong/Dockerfile</span></span><br></pre></td></tr></table></figure>
<p>使用vim创建并打开文件，写入以下内容：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> kong:<span class="number">1.4</span>.<span class="number">2</span>-centos</span><br><span class="line"></span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> description=<span class="string">"Centos 7 + Kong 1.4.2 + kong-oidc plugin"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum install -y git unzip &amp;&amp; yum clean all</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> luarocks install kong-oidc</span></span><br></pre></td></tr></table></figure>
<p>以上代码将会将安装kong1.4.2版本，以及在此基础上安装kong-oidc插件，接下来构建该文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker build -t kong:1.4.2-centos-oidc docker/kong/</span></span><br></pre></td></tr></table></figure>
<p>如果遇到<code>Warning: The directory '/root/.cache/luarocks' or its parent directory is not owned by the current user</code>就忽略。</p>
<h3 id="安装及配置kong">安装及配置Kong</h3>
<p>接下来创建<code>docker-compose.yml</code>文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> touch docker-compose.yml</span></span><br></pre></td></tr></table></figure>
<p>打开这个文件，并进行如下配置</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">version: <span class="string">'3.4'</span></span><br><span class="line"></span><br><span class="line">networks: </span><br><span class="line">  kong-net:</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  kong-datastore:</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  kong-db:</span><br><span class="line">    image: postgres:<span class="number">9.6</span></span><br><span class="line">    volumes:</span><br><span class="line">      - kong-datastore:/var/lib/postgresql/data</span><br><span class="line">    networks:</span><br><span class="line">      - kong-net</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"15432:5432"</span></span><br><span class="line">    environment:</span><br><span class="line">      POSTGRES_DB:       api-gw</span><br><span class="line">      POSTGRES_USER:     kong</span><br><span class="line">      POSTGRES_PASSWORD: kong</span><br><span class="line"></span><br><span class="line">  kong:</span><br><span class="line">    image: kong:<span class="number">1.4</span>.<span class="number">2</span>-centos-oidc</span><br><span class="line">    depends_on:</span><br><span class="line">      - kong-db</span><br><span class="line">    networks:</span><br><span class="line">      - kong-net</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"8000:8000"</span> <span class="comment"># Listener</span></span><br><span class="line">      - <span class="string">"8001:8001"</span> <span class="comment"># Admin API</span></span><br><span class="line">      - <span class="string">"8443:8443"</span> <span class="comment"># Listener  (SSL)</span></span><br><span class="line">      - <span class="string">"8444:8444"</span> <span class="comment"># Admin API (SSL)</span></span><br><span class="line">    environment:</span><br><span class="line">      KONG_DATABASE:         postgres</span><br><span class="line">      KONG_PG_HOST:          kong-db</span><br><span class="line">      KONG_PG_PORT:          <span class="number">5432</span></span><br><span class="line">      KONG_PG_DATABASE:      api-gw</span><br><span class="line">      KONG_PROXY_ACCESS_LOG: /dev/stdout</span><br><span class="line">      KONG_ADMIN_ACCESS_LOG: /dev/stdout</span><br><span class="line">      KONG_PROXY_ERROR_LOG:  /dev/stderr</span><br><span class="line">      KONG_ADMIN_ERROR_LOG:  /dev/stderr</span><br><span class="line">      KONG_PROXY_LISTEN:     <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8000</span>, <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8443</span> ssl</span><br><span class="line">      KONG_ADMIN_LISTEN:     <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8001</span>, <span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">8444</span> ssl</span><br><span class="line">      KONG_PLUGINS:          bundled,oidc</span><br></pre></td></tr></table></figure>
<p>接下来，采用下面的命令启动kong-db服务，其中<code>-d</code>是告诉docker在后台运行Docker Compose进程</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose up -d kong-db</span></span><br></pre></td></tr></table></figure>
<p>验证服务是否已经启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose ps</span></span><br></pre></td></tr></table></figure>
<p>接下来将迁移kong-db数据库，采用<code>migrations</code>命令。下面这个命令将驱动一个kong服务，<code>-rm</code>表示该服务将在命令运行之后关闭。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose run --rm kong kong migrations up</span></span><br></pre></td></tr></table></figure>
<p>最后，我们将Kong启动，并且检查其运行状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose up -d kong</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker-compose ps</span></span><br></pre></td></tr></table></figure>
<p>检查Kong的管理API，检查OIDC插件是否可以在服务器上使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -s http://localhost:8001 | jq .plugins.available_on_server.oidc</span></span><br></pre></td></tr></table></figure>
<p>将返回<code>true</code>。但是，虽然OIDC插件在Kong上可用，但是还没有配置Keycloak，实际上还不能进行API的保护。</p>
<p>至此为止，就完成了Kong的安装</p>
<hr>
<h3 id="安装konga可视化终端">安装Konga可视化终端</h3>
<p>Konga是开源的Kong可视化界面，方面API网关管理人员对Kong进行可视化管理，安装方法和Kong类似。</p>
<p>配置<code>docker-compose.yml</code>文件，添加如下内容：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">konga-prepare:</span><br><span class="line">     image: pantsel/konga:next</span><br><span class="line">     command: <span class="string">"-c prepare -a postgres -u postgresql://kong:kong@kong-db:5432/konga_db"</span></span><br><span class="line">     networks:</span><br><span class="line">       - kong-net</span><br><span class="line">     restart: on-failure</span><br><span class="line">     links:</span><br><span class="line">       - kong-db</span><br><span class="line">     depends_on:</span><br><span class="line">       - kong-db</span><br></pre></td></tr></table></figure>
<p>首先将konga的postgresql数据启动：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose up -d konga-prepare</span></span><br></pre></td></tr></table></figure>
<p>检查是否启动成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose ps</span></span><br></pre></td></tr></table></figure>
<p>接下来在<code>docker-compose.yml</code>再配置Konga镜像：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">konga:</span><br><span class="line">    image: pantsel/konga:latest</span><br><span class="line">    networks:</span><br><span class="line">      - kong-net</span><br><span class="line">    environment:</span><br><span class="line">      DB_ADAPTER: postgres</span><br><span class="line">      DB_HOST: kong-db</span><br><span class="line">      DB_USER: kong</span><br><span class="line">      DB_DATABASE: konga_db</span><br><span class="line">      NODE_ENV: production</span><br><span class="line">      DB_PASSWORD: kong</span><br><span class="line">    depends_on: </span><br><span class="line">      - kong-db</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"1337:1337"</span></span><br></pre></td></tr></table></figure>
<p>再次启动konga</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose up -d konga</span></span><br></pre></td></tr></table></figure>
<p>检查是否启动成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose ps</span></span><br></pre></td></tr></table></figure>
<p>用浏览器访问“IP地址:1337”端口，注册后台管理用户名密码，检查是否能够正常访问，进入后台管理界面后，配置和Kong的对接：</p>
<p><img src="/archives/fbb6b1b9/image-20200727141443389.png" alt="image-20200727141443389" style="zoom:67%;"></p>
<p>对接完成后，可以用Konga查看并配置Kong网关的信息了。</p>
<h3 id="安装keycloak">安装Keycloak</h3>
<p>本节欸将重点配置Keycloak的安装。我们还是采用docker对Keycloak进行安装。</p>
<figure>
<img src="/archives/fbb6b1b9/Screen-Shot-2018-11-15-at-19.38.47.png" alt="Screen-Shot-2018-11-15-at-19.38.47"><figcaption aria-hidden="true">Screen-Shot-2018-11-15-at-19.38.47</figcaption>
</figure>
<p>在本节中，我们将运行以下步骤：</p>
<ol type="1">
<li>修改<code>docker-compose.yml</code>来添加Keycloak和它的可视化终端服务</li>
<li>注册Keycloak数据库服务</li>
<li>注册Keycloak服务</li>
<li>登录Keycloak</li>
<li>为Kong添加Keycloak终端</li>
<li>添加新用户</li>
</ol>
<h4 id="使用docker安装keycloak">使用Docker安装Keycloak</h4>
<p>重新打开<code>docker-compose.yml</code>.为Keycloak添加网络：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">networks: </span><br><span class="line">  kong-net:</span><br><span class="line">  keycloak-net:</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  kong-datastore:</span><br><span class="line">  keycloak-datastore:</span><br></pre></td></tr></table></figure>
<p>接下来将Keycloak数据库添加到<code>docker-compose.yml</code>中：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">services:</span><br><span class="line">  ...</span><br><span class="line">  keycloak-db:</span><br><span class="line">    image: postgres:<span class="number">9.6</span></span><br><span class="line">    volumes: </span><br><span class="line">      - keycloak-datastore:/var/lib/postresql/data</span><br><span class="line">    networks:</span><br><span class="line">      - keycloak-net</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"25432:5432"</span></span><br><span class="line">    environment:</span><br><span class="line">      POSTGRES_DB:       keycloak</span><br><span class="line">      POSTGRES_USER:     keycloak</span><br><span class="line">      POSTGRES_PASSWORD: password</span><br></pre></td></tr></table></figure>
<p>启动服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose up -d keycloak-db</span></span><br></pre></td></tr></table></figure>
<p>验证是否可以使用（确保它的状态是启动的）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose ps</span></span><br></pre></td></tr></table></figure>
<p>下一步，将Keycloak添加到<code>docker-compose.yml</code>的services中：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">services:</span><br><span class="line">  ...</span><br><span class="line">  keycloak:</span><br><span class="line">    image: jboss/keycloak:<span class="number">4.5</span>.<span class="number">0</span>.Final</span><br><span class="line">    depends_on:</span><br><span class="line">      - keycloak-db</span><br><span class="line">    networks:</span><br><span class="line">      - keycloak-net</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"8180:8080"</span></span><br><span class="line">    environment:</span><br><span class="line">      DB_VENDOR:   POSTGRES</span><br><span class="line">      DB_ADDR:     keycloak-db</span><br><span class="line">      DB_PORT:     <span class="number">5432</span></span><br><span class="line">      DB_DATABASE: keycloak</span><br><span class="line">      DB_USER:     keycloak</span><br><span class="line">      DB_PASSWORD: password</span><br><span class="line">      KEYCLOAK_USER:     admin</span><br><span class="line">      KEYCLOAK_PASSWORD: admin</span><br></pre></td></tr></table></figure>
<p>最后启动Keycloak服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose up -d keycloak</span></span><br></pre></td></tr></table></figure>
<p>验证服务是否可用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker-compose ps</span></span><br></pre></td></tr></table></figure>
<h4 id="添加客户端到keycloak中">添加客户端到Keycloak中</h4>
<p>点击Administration Console进入到控制台当中，此时需要输入用户名和密码：</p>
<p>在<code>Master</code>域下，创建客户端：</p>
<figure>
<img src="/archives/fbb6b1b9/Screen-Shot-2018-11-15-at-20.38.29.png" alt="Screen-Shot-2018-11-15-at-20.38.29"><figcaption aria-hidden="true">Screen-Shot-2018-11-15-at-20.38.29</figcaption>
</figure>
<p>在添加客户端页面，填写“客户端ID”为kong，点击保存按钮。</p>
<figure>
<img src="/archives/fbb6b1b9/Screen-Shot-2018-11-15-at-20.43.23.png" alt="Screen-Shot-2018-11-15-at-20.43.23"><figcaption aria-hidden="true">Screen-Shot-2018-11-15-at-20.43.23</figcaption>
</figure>
<p>在详情页面中，可以看到“Access Type”，我们需要选择的是“Confidential”，其中“Root URL”是“IP地址:8000”（Kong所接管的端口），以及“Valid Redirect URIs”填写“/*”就可以了，我们的设置如下：</p>
<figure>
<img src="/archives/fbb6b1b9/image-20200727135258550.png" alt="image-20200727135258550"><figcaption aria-hidden="true">image-20200727135258550</figcaption>
</figure>
<p>点击保存之后，在“Credentials”页面中会有对应的“Secret”，这个密钥是需要在Kong当中进行配置的</p>
<figure>
<img src="/archives/fbb6b1b9/Screen-Shot-2018-11-15-at-20.52.51.png" alt="Screen-Shot-2018-11-15-at-20.52.51"><figcaption aria-hidden="true">Screen-Shot-2018-11-15-at-20.52.51</figcaption>
</figure>
<h4 id="为keycloak添加用户">为Keycloak添加用户</h4>
<p>要添加用户，单击左侧侧边栏的“Users”选项卡，然后单击右侧的“add user”按钮</p>
<figure>
<img src="/archives/fbb6b1b9/Screen-Shot-2018-11-15-at-20.58.07.png" alt="Screen-Shot-2018-11-15-at-20.58.07"><figcaption aria-hidden="true">Screen-Shot-2018-11-15-at-20.58.07</figcaption>
</figure>
<p>在下一页，将“Username”设置为“用户”，并将“Email Enable”开关设置为“On”。然后，点击“Save”按钮。</p>
<p><img src="/archives/fbb6b1b9/Screen-Shot-2018-11-15-at-21.00.07.png" alt="Screen-Shot-2018-11-15-at-21.00.07" style="zoom:67%;"></p>
<p>点击“Credentials”选项卡，输入密码，确认，确保“Temporary”开关设置为“关闭”。然后，点击“Save”按钮。</p>
<p>至此，在Keycloak当中的配置已经完成了。</p>
<hr>
<h3 id="将kong和keycloak进行对接">将Kong和Keycloak进行对接</h3>
<p>接下来将配置Keycloak和Kong的对接部分</p>
<p><img src="/archives/fbb6b1b9/Screen-Shot-2018-11-15-at-21.06.44.png" alt="Screen-Shot-2018-11-15-at-21.06.44" style="zoom:67%;"></p>
<ol type="1">
<li><p>创建服务和路由（此处省略）</p></li>
<li><p>在全局范围内安装oidc插件</p>
<p>点击左侧“Plugin”后，再点击“ADD GLOBAL PLUGINS”，在Other当中，又OIDC插件，找到并点击“ADD PLUGIN”，会弹出如下表单，表单当中的条目信息可以参考：https://github.com/nokia/kong-oidc在GitHub上的首页。</p>
<p>其中以下几个需要重点关注：</p>
<ul>
<li>client_id：需要和Keycloak中创建的client_id对应一致</li>
<li>client_secret：需要需要和Keycloak中自动生成的secret一致</li>
<li>realm：默认就是Keycloak中的master域</li>
<li>redirect after logout uri：/</li>
<li>discovery：根据OIDC填写：http://XXXXXX:8180/auth/realms/master/.well-known/openid-configuration</li>
</ul></li>
<li><p>配置完成后，访问Kong接管的API接口，会自动跳转到Keycloak的登录界面，说明Keycloak和Kong对接完成</p>
<p><img src="/archives/fbb6b1b9/image-20200727142400435.png" alt="image-20200727142400435" style="zoom:67%;"></p></li>
</ol>
<h2 id="存在问题">存在问题</h2>
<p>官方给出了以上配置虽然打通了Kong和Keycloak，但是由于登录是Keycloak进行管理，采用的是Keycloak中的用户，而这些用户和Kong当中的“Consumer”是分离的，而且此时不能够通过Keycloak进行用户权限的管理。</p>
<p>如果将用户管理交给Keycloak，就会架空Kong当中的Consumer，最好是有办法将Kong中的Consumer和Keycloak中的User打通</p>
<h3 id="目标">目标</h3>
<ul>
<li>打通Keycloak和Kong中的用户表</li>
<li>能够使得ACL插件进行白名单和黑名单的访问控制</li>
</ul>
<h3 id="方法">方法</h3>
<ol type="1">
<li>使用ETL工具两者数据表，将ID和用户名进行同步</li>
<li>修改ACL插件使其能够获取到认证过后的<code>authenticated_consumer</code></li>
</ol>
<h3 id="操作步骤">操作步骤</h3>
<h4 id="etl工具同步">ETL工具同步</h4>
<p>此处过程省略</p>
<h4 id="修改acl插件">修改ACL插件</h4>
<p>在kong-oidc插件官方文档中，给出了<code>X-Userinfo</code>是被注入在请求头当中的，例如：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">X-Userinfo: &#123;"preferred_username":"alice","id":"60f65308-3510-40ca-83f0-e9c0151cc680","sub":"60f65308-3510-40ca-83f0-e9c0151cc680"&#125;</span><br></pre></td></tr></table></figure>
<p>而该插件同样在<code>ngx.ctx.authenticated_consumer</code>中设置了变量，他能够支持其他插件对认证通过用户进行操作，因此，可以让ACL获取该信息，利用该信息和现有“Consumer”做匹配。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">ngx.ctx.authenticated_credential = &#123;</span><br><span class="line">    id = "60f65308-3510-40ca-83f0-e9c0151cc680",   -- sub field from Userinfo</span><br><span class="line">    username = "alice"                             -- preferred_username from Userinfo</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改如下：</p>
<ul>
<li><p>进入docker容器当中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo docker <span class="built_in">exec</span> -it  容器ID /bin/bash</span></span><br></pre></td></tr></table></figure></li>
<li><p>进入Kong插件所在目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/share/lua/5.1/kong/plugins/acl</span></span><br></pre></td></tr></table></figure></li>
<li><p>打开group.lua文件，对<code>get_current_consumer_id</code>做修改</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">local function get_current_consumer_id()</span><br><span class="line">  kong.log.err("oidc info:", ngx.ctx.authenticated_credential.id)</span><br><span class="line">  return (kong.client.get_consumer() or EMPTY).id or</span><br><span class="line">         (kong.client.get_credential() or EMPTY).consumer_id or</span><br><span class="line"><span class="addition">+        (ngx.ctx.authenticated_credential or EMPTY).id</span></span><br></pre></td></tr></table></figure></li>
</ul>
<p>这样就可以做到Kong和Keycloak真正打通。</p>
]]></content>
      <categories>
        <category>API网关</category>
        <category>Kong&amp;Konga</category>
        <category>权限认证</category>
      </categories>
      <tags>
        <tag>Kong</tag>
        <tag>keycloak</tag>
        <tag>权限认证</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/archives/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener external nofollow noreferrer">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener external nofollow noreferrer">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener external nofollow noreferrer">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener external nofollow noreferrer">GitHub</a>.</p>
<h2 id="quick-start">Quick Start</h2>
<h3 id="create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener external nofollow noreferrer">Writing</a></p>
<h3 id="run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener external nofollow noreferrer">Server</a></p>
<h3 id="generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener external nofollow noreferrer">Generating</a></p>
<h3 id="deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener external nofollow noreferrer">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>DOUBLESQUEEZE Parallel Stochastic Gradient Descent with Double-pass Error-Compensated Compression</title>
    <url>/archives/493c0bc7.html</url>
    <content><![CDATA[<h2 id="摘要">摘要</h2>
<p>目前已有类似于QSGD和稀疏化SGD的通信优化算法，但参数服务器在实际应用中在收到工作节点量化梯度并聚合后，需要将聚合梯度从新分发给工作节点。本论文同时对工作节点和参数服务器梯度，采用误差补偿的方式进行梯度压缩。该算法有三大优势：</p>
<ol type="1">
<li>它兼容众多“粗暴”的压缩技术</li>
<li>它与没有误差补偿的压缩算法（例如QSGD和稀疏化SGD）相比，收敛性更好</li>
<li>达到了线性收敛</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    print(<span class="string">"111"</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>dfdfadf</p>
</blockquote>
<h2 id="背景介绍">背景介绍</h2>
<p>提高分布式机器学习性能的三个方向：</p>
<p>（1）高通信效率的学习</p>
<ul>
<li>QSGD: Communication-efficient SGD via gradient quantization and encoding<a href="#refer-anchor-1"><sup>1</sup></a>（量化为三元组表示）</li>
<li>signSGD: Compressed optimisation for non-convex problems<a href="#refer-anchor-2"><sup>2</sup></a></li>
<li>1-bit stochastic gradient descent and its application to data-parallel distributed training of speech dnns<a href="#refer-anchor-3"><sup>3</sup></a>（提出一种误差补偿的量化方法）</li>
</ul>
<p>（2）去中心化学习；</p>
<ul>
<li>He L, Bian A, Jaggi M. Cola: Decentralized linear learning[C]//Advances in Neural Information Processing Systems. 2018: 4536-4546.</li>
<li>Lian X, Zhang C, Zhang H, et al. Can decentralized algorithms outperform centralized algorithms? a case study for decentralized parallel stochastic gradient descent[C]//Advances in Neural Information Processing Systems. 2017: 5330-5340.</li>
</ul>
<p>（3）异步学习</p>
<ul>
<li>Agarwal A, Duchi J C. Distributed delayed stochastic optimization[C]//Advances in Neural Information Processing Systems. 2011: 873-881.</li>
<li>Lian X, Huang Y, Li Y, et al. Asynchronous parallel stochastic gradient for nonconvex optimization[C]//Advances in Neural Information Processing Systems. 2015: 2737-2745.</li>
<li>Recht B, Re C, Wright S, et al. Hogwild: A lock-free approach to parallelizing stochastic gradient descent[C]//Advances in neural information processing systems. 2011: 693-701.</li>
</ul>
<h3 id="量化压缩基本模型">量化压缩基本模型</h3>
<p>作者对分布式机器学习（特别是参数服务器架构）和量化压缩数学模型简单做了介绍</p>
<h4 id="分布式机器学习基本模型">分布式机器学习基本模型</h4>
<p><span class="math display">\[
\min _{\boldsymbol{x}} f(\boldsymbol{x})=\frac{1}{n} \sum_{i=1}^{n} \mathbb{E}_{\boldsymbol{\zeta} \sim \mathcal{D}_{i}} F(\boldsymbol{x} ; \boldsymbol{\zeta})
\]</span></p>
<p>其中<span class="math inline">\(n\)</span>表示工作节点数量，<span class="math inline">\(\mathcal{D}_{i}\)</span>本地节点<span class="math inline">\(i\)</span>的数据分布，<span class="math inline">\(F(\boldsymbol{x} ; \boldsymbol{\zeta})\)</span>为本地损失函数。 <span class="math display">\[
\boldsymbol{g}^{(i)}=\nabla F\left(\boldsymbol{x} ; \boldsymbol{\zeta}^{(i)}\right)
\]</span> 各工作节点计算梯度 <span class="math display">\[
\boldsymbol{g}=\frac{1}{n} \sum_{i=1}^{n} \boldsymbol{g}^{(i)}
\]</span> 参数服务器对梯度进行聚合，以上是对分布式SGD算法的简单建模</p>
<h4 id="量化压缩">量化压缩</h4>
<p><span class="math inline">\(Q_{\omega}[\cdot]\)</span>代表压缩操作，以<span class="math inline">\(1Bits\)</span>方法为例，利用递归的方法更新压缩误差： <span class="math display">\[
\boldsymbol{\delta}^{(i)}=\boldsymbol{g}^{(i)}+\boldsymbol{\delta}^{(i)}-Q_{\omega}\left[\boldsymbol{g}^{(i)}+\boldsymbol{\delta}^{(i)}\right]
\]</span> 其中<span class="math inline">\(\left[\boldsymbol{g}^{(i)}+\boldsymbol{\delta}^{(i)}\right]\)</span>表示本轮计算得到的梯度<span class="math inline">\(g^{(i)}\)</span>和上一轮压缩误差<span class="math inline">\(\boldsymbol{\delta}^{(i)}\)</span>的和，上式子是对本轮量化误差的重新计算，这也是误差补偿的由来。</p>
<h4 id="主要贡献">主要贡献</h4>
<ol type="1">
<li>比其他没有错误补偿的压缩方法具有更好的收敛性</li>
<li>进一步优化了通信效率</li>
<li>第一次给出了误差补偿SGD相关算法的速率分析</li>
<li>在非凸情况下的加速证明</li>
</ol>
<h2 id="相关工作">相关工作</h2>
<h4 id="分布式学习">分布式学习</h4>
<h5 id="中心化并行训练">中心化并行训练</h5>
<h6 id="参数服务器架构">参数服务器架构</h6>
<ol type="1">
<li>Abadi M, Barham P, Chen J, et al. Tensorflow: A system for large-scale machine learning[C]//12th {USENIX} symposium on operating systems design and implementation ({OSDI} 16). 2016: 265-283.</li>
<li>Li M, Andersen D G, Park J W, et al. Scaling distributed machine learning with the parameter server[C]//11th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 14). 2014: 583-598.</li>
</ol>
<h6 id="去中心化训练">去中心化训练</h6>
<ol type="1">
<li>固定拓扑
<ul>
<li>Jin P H, Yuan Q, Iandola F, et al. How to scale distributed deep learning?[J]. arXiv preprint arXiv:1611.04581, 2016.</li>
<li>Lian X, Zhang C, Zhang H, et al. Can decentralized algorithms outperform centralized algorithms? a case study for decentralized parallel stochastic gradient descent[C]//Advances in Neural Information Processing Systems. 2017: 5330-5340.</li>
<li>Shen Z, Mokhtari A, Zhou T, et al. Towards more efficient stochastic decentralized learning: Faster convergence and sparse communication[J]. arXiv preprint arXiv:1805.09969, 2018.</li>
<li>Tang H, Lian X, Yan M, et al. D <span class="math inline">\(^ 2\)</span>: Decentralized Training over Decentralized Data[J]. arXiv preprint arXiv:1803.07068, 2018.</li>
</ul></li>
<li>随机拓扑
<ul>
<li>Lian X, Zhang W, Zhang C, et al. Asynchronous decentralized parallel stochastic gradient descent[C]//International Conference on Machine Learning. 2018: 3043-3052.</li>
<li>Nedić A, Olshevsky A. Distributed optimization over time-varying directed graphs[J]. IEEE Transactions on Automatic Control, 2014, 60(3): 601-615.</li>
<li>Nedic A, Olshevsky A, Shi W. Achieving geometric convergence for distributed optimization over time-varying graphs[J]. SIAM Journal on Optimization, 2017, 27(4): 2597-2633.</li>
</ul></li>
</ol>
<h6 id="不同角度实现分布式训练">不同角度实现分布式训练</h6>
<ol type="1">
<li>隐私分布式优化
<ul>
<li>Jayaraman B, Wang L, Evans D, et al. Distributed learning without distress: Privacy-preserving empirical risk minimization[C]//Advances in Neural Information Processing Systems. 2018: 6343-6354.</li>
</ul></li>
<li>自适应分布式ADMM
<ul>
<li>Xu Z, Taylor G, Li H, et al. Adaptive consensus ADMM for distributed optimization[J]. arXiv preprint arXiv:1706.02869, 2017.</li>
</ul></li>
<li>非平滑分布式优化
<ul>
<li>Scaman K, Bach F, Bubeck S, et al. Optimal algorithms for non-smooth distributed optimization in networks[C]//Advances in Neural Information Processing Systems. 2018: 2740-2749.</li>
</ul></li>
<li>分布式近端原对称对偶算法
<ul>
<li>Hong M, Hajinezhad D, Zhao M M. Prox-PDA: The proximal primal-dual algorithm for fast distributed nonconvex optimization and learning over networks[C]//International Conference on Machine Learning. 2017: 1529-1538.</li>
</ul></li>
<li>投影-free的分布式在线学习
<ul>
<li>Zhang W, Zhao P, Zhu W, et al. Projection-free distributed online learning in networks[C]//International Conference on Machine Learning. 2017: 4054-4062.</li>
</ul></li>
<li>平行倒推
<ul>
<li>Huo Z, Gu B, Yang Q, et al. Decoupled parallel backpropagation with convergence guarantee[J]. arXiv preprint arXiv:1804.10574, 2018.</li>
</ul></li>
</ol>
<h5 id="压缩通信学习">压缩通信学习</h5>
<ol type="1">
<li><p>稀疏化模型</p>
<ul>
<li>Wang J, Kolar M, Srebro N, et al. Efficient distributed learning with sparsity[C]//International Conference on Machine Learning. 2017: 3636-3645.</li>
</ul></li>
<li><p>梯度量化</p>
<ul>
<li>Shen Z, Mokhtari A, Zhou T, et al. Towards more efficient stochastic decentralized learning: Faster convergence and sparse communication[J]. arXiv preprint arXiv:1805.09969, 2018.</li>
</ul>
<p>QSGD</p>
<ul>
<li>Alistarh D, Grubic D, Li J, et al. QSGD: Communication-efficient SGD via gradient quantization and encoding[C]//Advances in Neural Information Processing Systems. 2017: 1709-1720.</li>
</ul>
<p>PCA压缩</p>
<ul>
<li>Garber D, Shamir O, Srebro N. Communication-efficient algorithms for distributed stochastic principal component analysis[J]. arXiv preprint arXiv:1702.08169, 2017.</li>
</ul>
<p><span class="math inline">\(1Bits\)</span>量化</p>
<ul>
<li>Seide F, Fu H, Droppo J, et al. 1-bit stochastic gradient descent and its application to data-parallel distributed training of speech dnns[C]//Fifteenth Annual Conference of the International Speech Communication Association. 2014.</li>
<li>Wen W, Xu C, Yan F, et al. Terngrad: Ternary gradients to reduce communication in distributed deep learning[C]//Advances in neural information processing systems. 2017: 1509-1519.</li>
</ul></li>
</ol>
<h5 id="错误补偿压缩">错误补偿压缩</h5>
<h6 id="bits量化"><span class="math inline">\(1Bits\)</span>量化</h6>
<ul>
<li>Seide F, Fu H, Droppo J, et al. 1-bit stochastic gradient descent and its application to data-parallel distributed training of speech dnns[C]//Fifteenth Annual Conference of the International Speech Communication Association. 2014.</li>
</ul>
<h6 id="二次优化">二次优化</h6>
<ul>
<li>Wu J, Huang W, Huang J, et al. Error compensated quantized SGD and its applications to large-scale distributed optimization[J]. arXiv preprint arXiv:1806.08054, 2018.</li>
</ul>
<h6 id="signsgd">SignSGD</h6>
<ul>
<li>Bernstein J, Wang Y X, Azizzadenesheli K, et al. signSGD: Compressed optimisation for non-convex problems[J]. arXiv preprint arXiv:1802.04434, 2018.</li>
<li>Alistarh D, Hoefler T, Johansson M, et al. The convergence of sparsified gradient methods[C]//Advances in Neural Information Processing Systems. 2018: 5973-5983.</li>
</ul>
<h2 id="算法介绍">算法介绍</h2>
<h3 id="算法描述">算法描述</h3>
<p>本文采用参数服务器架构描述该算法，但是算法的应用场景不仅限于参数服务器架构，在第<span class="math inline">\(t\)</span>次迭代，我们将该算法的关键步骤描述如下：</p>
<ul>
<li><strong>工作节点计算</strong></li>
</ul>
<p>每个节点<span class="math inline">\(i\)</span>计算本地随机梯度<span class="math inline">\(\nabla F\left(\boldsymbol{x}_{t} ; \boldsymbol{\zeta}_{t}^{(i)}\right)\)</span>，该梯度基于全局模型<span class="math inline">\(x_t\)</span>以及本地样本<span class="math inline">\(\boldsymbol{\zeta}_{t}^{(i)}\)</span>。这里的<span class="math inline">\(i\)</span>代表工作节点<span class="math inline">\(i\)</span>的索引，<span class="math inline">\(t\)</span>表示本轮的迭代次数</p>
<ul>
<li><strong>工作节点压缩</strong></li>
</ul>
<p>每个工作节点<span class="math inline">\(i\)</span>计算误差补偿随机梯度 <span class="math display">\[
\boldsymbol{\delta}_{t}^{(i)}=\boldsymbol{v}_{t}^{(i)}-Q_{\omega_{t}^{(i)}}\left[\boldsymbol{v}_{t}^{(i)}\right]
\]</span> 其中<span class="math inline">\(Q_{\omega_{t}^{(i)}}\left[\boldsymbol{v}_{t}^{(i)}\right]\)</span>表示压缩误差补偿随机梯度</p>
<ul>
<li><strong>参数服务器压缩</strong></li>
</ul>
<p>所有节点将计算所得的<span class="math inline">\(Q_{\omega_{t}^{(i)}}\left[\boldsymbol{v}_{t}^{(i)}\right]\)</span>量化梯度发送给参数服务器，参数服务器聚合所有量化梯度<span class="math inline">\(Q_{\omega_{t}^{(i)}}\left[\boldsymbol{v}_{t}^{(i)}\right]\)</span>，并且更新全局误差补偿随机梯度<span class="math inline">\(v_t\)</span>，根据以下式子对梯度误差<span class="math inline">\(\boldsymbol{\delta}_{t}\)</span>进行更新 <span class="math display">\[
\begin{array}{l}
\boldsymbol{v}_{t}=\boldsymbol{\delta}_{t-1}+\frac{1}{n} \sum_{i=1}^{n} Q_{\omega_{t}^{(i)}}\left[\boldsymbol{v}_{t}^{(i)}\right] \\
\boldsymbol{\delta}_{t}=\boldsymbol{v}_{t}-Q_{\omega_{t}}\left[\boldsymbol{v}_{t}\right]
\end{array}
\]</span></p>
<ul>
<li><strong>工作节点更新</strong></li>
</ul>
<p>参数服务器将<span class="math inline">\(Q_{\omega_{t}^{(i)}}\left[\boldsymbol{v}_{t}^{(i)}\right]\)</span>发送给所有工作节点，所有工作节点更新本地模型： <span class="math display">\[
\boldsymbol{x}_{t+1}=\boldsymbol{x}_{t}-\gamma Q_{\omega_{t}}\left[\boldsymbol{v}_{t}\right]
\]</span> 其中<span class="math inline">\(\gamma\)</span>表示学习率</p>
<h3 id="压缩选择">压缩选择</h3>
<p>该方法不像当前存在的方法，并不需要无偏压缩的限制（也就是<span class="math inline">\(\mathbb{E}_{\omega} Q_{\omega}[\boldsymbol{x}]=\boldsymbol{x}\)</span>）。所以选择压缩的方法是非常灵活的。论文例举了多种较为常用的压缩选项：</p>
<h4 id="随机量化">随机量化</h4>
<p>对于任意真实值<span class="math inline">\(z \in[a, b]\)</span>，其中<span class="math inline">\((a,b)\)</span>是定义好的低bit数值，<span class="math inline">\(z\)</span>会有<span class="math inline">\(\frac{b-z}{b-a}\)</span>的概率被压缩到<span class="math inline">\(a\)</span>,有<span class="math inline">\(\frac{z-a}{b-a}\)</span>的概率压缩到<span class="math inline">\(b\)</span>。这种压缩操作是无偏的。</p>
<h4 id="bits量化-1"><span class="math inline">\(1Bits\)</span>量化</h4>
<p>将<span class="math inline">\(x\)</span>向量压缩到<span class="math inline">\(\|x\| \operatorname{sign}(x)\)</span>，其中<span class="math inline">\(sign(x)\)</span>是其中<span class="math inline">\(x\)</span>向量对应元素的符号。这种压缩是有偏的</p>
<h4 id="clipping">Clipping</h4>
<p>对于真实值<span class="math inline">\(z\)</span>，直接设置低于<span class="math inline">\(k\)</span>bis的部分压缩到<span class="math inline">\(0\)</span>。例如，将<span class="math inline">\(1.23456\)</span>压缩为d<span class="math inline">\(1.2\)</span>，直接将其较低的四位变成<span class="math inline">\(0\)</span>。这种压缩是有偏的。</p>
<h4 id="top-k稀疏化">Top-k稀疏化</h4>
<p>对于向量<span class="math inline">\(x\)</span>，将其最大的<span class="math inline">\(k\)</span>个元素进行保留，其余的设置为<span class="math inline">\(0\)</span>。这种操作是有偏的。</p>
<h4 id="随机稀疏化">随机稀疏化</h4>
<p>对于真实值<span class="math inline">\(z\)</span>，有<span class="math inline">\(p\)</span>的概率将<span class="math inline">\(z\)</span>设置为<span class="math inline">\(0\)</span>，以及<span class="math inline">\(p\)</span>的概率设置为<span class="math inline">\(z/p\)</span>。这样的方法是无偏的</p>
<h2 id="数学证明和收敛性分析">数学证明和收敛性分析</h2>
<p>待补充...</p>
<h2 id="实验">实验</h2>
<h3 id="实验设置">实验设置</h3>
<h4 id="数据集和模型">数据集和模型</h4>
<ul>
<li>ResNet-18以及CIFAR-10</li>
</ul>
<h4 id="实现对照组">实现对照组</h4>
<h5 id="doublesqueeze">DOUBLESQUEEZE</h5>
<h6 id="bit压缩"><span class="math inline">\(1-bit\)</span>压缩</h6>
<p>将梯度压缩到<span class="math inline">\(1-bit\)</span>，只包含符号。基于向量考虑，它的比例因子表示为： <span class="math display">\[
\frac{\text { magnitude of compensated gradient }}{\text { magnitude of quantized gradient }}
\]</span></p>
<h6 id="top-k压缩">Top-k压缩</h6>
<h5 id="qsgd">QSGD</h5>
<p>工作节点将梯度压缩成三元表示，其中每个元素用<span class="math inline">\(\{-1,0,1\}\)</span>表示。假设在这个梯度向量各个元素中的最大绝对值为<span class="math inline">\(m\)</span>，对于任意一个元素<span class="math inline">\(e\)</span>，它都以<span class="math inline">\(|e| /|m|\)</span>的可能性压缩到<span class="math inline">\(sign(e)\)</span>，以<span class="math inline">\(1-|e| /|m|\)</span>的可能性压缩到<span class="math inline">\(0\)</span>。扩展因子可以记为： <span class="math display">\[
\frac{\text { magnitude of compensated gradient }}{\text { magnitude of quantized gradient }}
\]</span> 采用这种方法时，参数服务器将梯度分发的时候不会讲梯度再次压缩</p>
<h5 id="vanilla-sgd">Vanilla SGD</h5>
<p>并不采用任何压缩处理</p>
<h5 id="mem-sgd">MEM-SGD</h5>
<p>和DEOUBLESQUEEZE的区别是从参数服务器进行分发的梯度不进行压缩，对于此种方法，本文也去使用了<span class="math inline">\(1-bit\)</span>二和<span class="math inline">\(top-k\)</span>这两中压缩方法。</p>
<h5 id="top-k-sgd">Top-k SGD</h5>
<p>该方法不涉及误差补偿机制</p>
<h3 id="实验结果">实验结果</h3>
<ol type="1">
<li>将<span class="math inline">\(1-bit\)</span>压缩作为DEUBLESQUEEZE的压缩方法，与MEM-SGD, QSGD这些压缩方法做对比</li>
</ol>
<p><img src="/archives/493c0bc7/image-20200724191830893.png" alt="image-20200724191830893" style="zoom:67%;"></p>
<p><img src="/archives/493c0bc7/image-20200724192014337.png" alt="image-20200724192014337" style="zoom:67%;"></p>
<p><img src="/archives/493c0bc7/image-20200724192043966.png" alt="image-20200724192043966" style="zoom:67%;"></p>
<ol start="2" type="1">
<li>将Top-k压缩作为DEUBLESQUEEZE的压缩方法，与MEM-SGD, QSGD这些压缩方法做对比</li>
</ol>
<p><img src="/archives/493c0bc7/image-20200724192139291.png" alt="image-20200724192139291" style="zoom: 67%;"></p>
<p><img src="/archives/493c0bc7/image-20200724192150444.png" alt="image-20200724192150444" style="zoom: 67%;"></p>
<p><img src="/archives/493c0bc7/image-20200724192202959.png" alt="image-20200724192202959" style="zoom: 67%;"></p>
<div id="refer-anchor-1">

</div>
<ul>
<li>[1] <a href="http://papers.nips.cc/paper/6768-qsgd-communication-efficient-sgd-via-gradient-quantization-and-encoding.pdf" target="_blank" rel="noopener external nofollow noreferrer">Alistarh D, Grubic D, Li J, et al. QSGD: Communication-efficient SGD via gradient quantization and encoding[C]//Advances in Neural Information Processing Systems. 2017: 1709-1720.</a>
<div id="refer-anchor-2">

</div></li>
<li>[2] <a href="https://arxiv.org/pdf/1802.04434.pdf" target="_blank" rel="noopener external nofollow noreferrer">Bernstein J, Wang Y X, Azizzadenesheli K, et al. signSGD: Compressed Optimisation for Non-Convex Problems[C]//International Conference on Machine Learning. 2018: 560-569.</a>
<div id="refer-anchor-3">

</div></li>
<li>[3] <a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/IS140694.pdf" target="_blank" rel="noopener external nofollow noreferrer">Seide F, Fu H, Droppo J, et al. 1-bit stochastic gradient descent and its application to data-parallel distributed training of speech dnns[C]//Fifteenth Annual Conference of the International Speech Communication Association. 2014.</a>
<div id="refer-anchor-4">

</div>
<div id="refer-anchor-5">

</div>
<div id="refer-anchor-6">

</div>
<div id="refer-anchor-7">

</div>
<div id="refer-anchor-8">

</div>
<div id="refer-anchor-9">

</div></li>
</ul>
]]></content>
      <categories>
        <category>科研</category>
        <category>分布式机器学习</category>
        <category>通信优化</category>
        <category>梯度压缩</category>
      </categories>
      <tags>
        <tag>分布式机器学习</tag>
        <tag>通信优化</tag>
        <tag>梯度压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/archives/d87f7e0c.html</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码" /><label>请输入密码</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="fcd28b96542c33f7fb8ff7ec7d31728e1066ff7564066dff42865926ee1e4bfe">8b59b3ba6fb9413419c7b1098984cf3b6e948d4e7f2f186d251530ef64c17210a324021f2883140bc6a3614c6a7fcfeb972babe4cfae463813928edc1ed4a2413347dc4e65ff506584f34afeb8f5a4bce055382dfd74c9cbfbd1d7b750962c27967a2f8655b12ff8f79512dcffc9c0d8de3174afa34fa9682697e073ea841f8933a8ad93e78114432c8f08234e4b304288bef7c1a277b0da8347f0168a70b871d7480cdc07990e441e545528168d27822421489be95cb01faa03a1499f45cf26ff27bf85c7d0f10856da92703ca3b30ad94d1b58cdf611629fa1e683f7ce1a50464dd914eff55e1f463239348470405bd075fc41f658f45648fdbb1f354fb363ec83210dfe723b373fb04d200589a28305c33811c171302cc106a3227d2d94bdeb78a6627c32d70ed79f95a991bbbf892cd78972d42c4f1f0dee65354bdf02bea786667116a7d79624cf3512f31877f252f8b5d21a8c7820946892d56c616bdce8191cbd5655cadfe829912dbc1c9dda94e7c8b2e7b119b649854b926adc37c8d3d0ee1fda4a9fc6e8d038e349dd363b5516724d2f66056ec0fbcfe7dcb22dc916abd8b68cf19ec90209145bd4e87102d64ede8ccdd28cae5a3b06fff96824d8ab2fe5cca3810427e85c87d8d52c8c981e59699f5d48c23009a56ed8d02820c41335ac5dfa104eaf69facd5e32d41c8230602e6f0517b956371415724b3b8bbade0555bd542f918f566b82e0cc9a76b9b918e9adcffc9c7cfe97a6c0948c3e9f371981dfba03cd1796eed1117e8e5db65b67c8c0b844abf2c5057d1ed659888ca4251b17010ec23182a0c3a553da3ec6995970b3df6d921ba3d668cacf9e799142622399bcc9f9e4eca5eb124d5e5107fd1d7fabaaa341b730a41fb3600484616a3292666b7614cb5e155e16d08d3dab6eec17774eb559e9e5e052937d1a8612d0994e20dba014eff4b3b0d913780a9d844b75131c89e6e0f684b270f52c16e5436f0c2919ea9b090f9577006d558e32461b7b6174274b1766585dfbb481a218cb345e84078343ca47b27bd92101268028bf063535b707a094304c215dad9d67500d36a964f4f8b2b5187d273dad913991fe4dd8b7fc75937f1fa6c04faeaf6538ee104fb5edb8de1a5e7d09ff7522d9aef6ea7e699d366ff914465762b612cc55e39fb990cccbc868ffcfb2e7f546de21fd30b8671be0a210fe32629df9f46d705f3f7e8e7d69db6bc23973f87f8f60569c7f5d2b029ac08ba4452b4fab6024114ebe9a23206a23718db612c5547875ea9ef84de53733b0f126e1ee3698fda6688db2044805f7b5e14ff6e19aaa19d234b0a5e32efcc6d2da2187bddee901099c711648685d5dbf8859c5bf63774da4776372706456db1e0c326235cc0eb04b5fee0c667d52707734eea6fd715a8b988b3bce60b5e962b7aa39b4e072ff85e84c7060434b3b2cdb8285986161aef63725068b6c4480deda6628e92b86f69e4aff24d1379030fa3afde35f42871ebd3cb1a7030099c3934f29a044e8e2ab9b4c074d2bd5ce7572dc222337cf7d12b31a2978e0e85585db570d0509d676aa531a</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>你好</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
</search>
